
Control_Temperatura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00000f22  00000fb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800154  00800154  0000100a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000100a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001068  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  000010a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015db  00000000  00000000  000012d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000845  00000000  00000000  000028b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e10  00000000  00000000  000030f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000554  00000000  00000000  00003f08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000630  00000000  00000000  0000445c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011b2  00000000  00000000  00004a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  00005c3e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 ba 02 	jmp	0x574	; 0x574 <__vector_14>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

00000068 <LcdCustomChar>:
  68:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  78:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  88:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  98:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d8 e0       	ldi	r29, 0x08	; 8
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	e2 e2       	ldi	r30, 0x22	; 34
  bc:	ff e0       	ldi	r31, 0x0F	; 15
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a4 35       	cpi	r26, 0x54	; 84
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	a4 e5       	ldi	r26, 0x54	; 84
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	ab 35       	cpi	r26, 0x5B	; 91
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 a7 02 	call	0x54e	; 0x54e <main>
  de:	0c 94 8f 07 	jmp	0xf1e	; 0xf1e <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <set_puertos>:

#include "avr/io.h"

void set_puertos()
{
	DDRD = 0x03;
  e6:	83 e0       	ldi	r24, 0x03	; 3
  e8:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
  ea:	1b b8       	out	0x0b, r1	; 11
  ec:	08 95       	ret

000000ee <encender_estufa>:
}

void encender_estufa()
{
	PORTD = 0x01;
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	08 95       	ret

000000f4 <apagar_estufa>:
}

void apagar_estufa()
{
	PORTD = PORTD & 0xfe;
  f4:	58 98       	cbi	0x0b, 0	; 11
  f6:	08 95       	ret

000000f8 <encender_ventilador>:
}

void encender_ventilador()
{
	PORTD = 0x02;
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	8b b9       	out	0x0b, r24	; 11
  fc:	08 95       	ret

000000fe <apagar_ventilador>:
}

void apagar_ventilador()
{
	PORTD = PORTD & 0xfd;
  fe:	59 98       	cbi	0x0b, 1	; 11
 100:	08 95       	ret

00000102 <ADC_preInit>:
void ADC_preInit(void){
	ADCSRA=0;
	ADMUX= 0x00;
}
void ADC_set_ADC0_input_analog(void){
	DIDR0= 0x01;
 102:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 106:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 10a:	08 95       	ret

0000010c <ADC_enabled>:
}
void ADC_enabled(void){
	ADCSRA|=(1<<ADEN);
 10c:	ea e7       	ldi	r30, 0x7A	; 122
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	80 68       	ori	r24, 0x80	; 128
 114:	80 83       	st	Z, r24
 116:	08 95       	ret

00000118 <ADC_preescaler>:
	
}

void ADC_preescaler(int prescaler){
	switch (prescaler)
 118:	80 31       	cpi	r24, 0x10	; 16
 11a:	91 05       	cpc	r25, r1
 11c:	29 f1       	breq	.+74     	; 0x168 <ADC_preescaler+0x50>
 11e:	4c f4       	brge	.+18     	; 0x132 <ADC_preescaler+0x1a>
 120:	84 30       	cpi	r24, 0x04	; 4
 122:	91 05       	cpc	r25, r1
 124:	a9 f0       	breq	.+42     	; 0x150 <ADC_preescaler+0x38>
 126:	88 30       	cpi	r24, 0x08	; 8
 128:	91 05       	cpc	r25, r1
 12a:	c1 f0       	breq	.+48     	; 0x15c <ADC_preescaler+0x44>
 12c:	02 97       	sbiw	r24, 0x02	; 2
 12e:	a1 f5       	brne	.+104    	; 0x198 <ADC_preescaler+0x80>
 130:	09 c0       	rjmp	.+18     	; 0x144 <ADC_preescaler+0x2c>
 132:	80 34       	cpi	r24, 0x40	; 64
 134:	91 05       	cpc	r25, r1
 136:	21 f1       	breq	.+72     	; 0x180 <ADC_preescaler+0x68>
 138:	80 38       	cpi	r24, 0x80	; 128
 13a:	91 05       	cpc	r25, r1
 13c:	39 f1       	breq	.+78     	; 0x18c <ADC_preescaler+0x74>
 13e:	80 97       	sbiw	r24, 0x20	; 32
 140:	59 f5       	brne	.+86     	; 0x198 <ADC_preescaler+0x80>
 142:	18 c0       	rjmp	.+48     	; 0x174 <ADC_preescaler+0x5c>
	{
		case 2:ADCSRA|=0b00000001;
 144:	ea e7       	ldi	r30, 0x7A	; 122
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	81 60       	ori	r24, 0x01	; 1
 14c:	80 83       	st	Z, r24
		break;
 14e:	08 95       	ret
		case 4:ADCSRA|=0b00000010;
 150:	ea e7       	ldi	r30, 0x7A	; 122
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	82 60       	ori	r24, 0x02	; 2
 158:	80 83       	st	Z, r24
		break;
 15a:	08 95       	ret
		case 8:ADCSRA|=0b00000011;
 15c:	ea e7       	ldi	r30, 0x7A	; 122
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	83 60       	ori	r24, 0x03	; 3
 164:	80 83       	st	Z, r24
		break;
 166:	08 95       	ret
		case 16:ADCSRA|=0b00000100;
 168:	ea e7       	ldi	r30, 0x7A	; 122
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	84 60       	ori	r24, 0x04	; 4
 170:	80 83       	st	Z, r24
		break;
 172:	08 95       	ret
		case 32:ADCSRA|=0b00000101;
 174:	ea e7       	ldi	r30, 0x7A	; 122
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	85 60       	ori	r24, 0x05	; 5
 17c:	80 83       	st	Z, r24
		break;
 17e:	08 95       	ret
		case 64:ADCSRA|=0b00000110;
 180:	ea e7       	ldi	r30, 0x7A	; 122
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	86 60       	ori	r24, 0x06	; 6
 188:	80 83       	st	Z, r24
		break;
 18a:	08 95       	ret
		case 128:ADCSRA|=0b00000111;
 18c:	ea e7       	ldi	r30, 0x7A	; 122
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	87 60       	ori	r24, 0x07	; 7
 194:	80 83       	st	Z, r24
		break;
 196:	08 95       	ret
		default:ADCSRA|=0b00000000;
 198:	ea e7       	ldi	r30, 0x7A	; 122
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	80 83       	st	Z, r24
 1a0:	08 95       	ret

000001a2 <ADC_select_pin>:
		break;
	}
}

void ADC_select_pin(int pin){
	ADMUX|= pin;
 1a2:	ec e7       	ldi	r30, 0x7C	; 124
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	90 81       	ld	r25, Z
 1a8:	89 2b       	or	r24, r25
 1aa:	80 83       	st	Z, r24
 1ac:	08 95       	ret

000001ae <ADC_init>:
	
}
//fin de funciones para el init
void ADC_init(int prescaler, int pin){
 1ae:	0f 93       	push	r16
 1b0:	1f 93       	push	r17
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	8c 01       	movw	r16, r24
 1b8:	eb 01       	movw	r28, r22
	ADC_preInit();
 1ba:	0e 94 81 00 	call	0x102	; 0x102 <ADC_preInit>
void ADC_preInit(void){
	ADCSRA=0;
	ADMUX= 0x00;
}
void ADC_set_ADC0_input_analog(void){
	DIDR0= 0x01;
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
}
//fin de funciones para el init
void ADC_init(int prescaler, int pin){
	ADC_preInit();
	ADC_set_ADC0_input_analog();
	ADC_enabled();
 1c4:	0e 94 86 00 	call	0x10c	; 0x10c <ADC_enabled>
	ADC_preescaler(prescaler);
 1c8:	c8 01       	movw	r24, r16
 1ca:	0e 94 8c 00 	call	0x118	; 0x118 <ADC_preescaler>
	ADC_select_pin(pin);
 1ce:	ce 01       	movw	r24, r28
 1d0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <ADC_select_pin>
}
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	08 95       	ret

000001de <ADC_Start>:
//funciones para operar el ADC
void ADC_Start(void){
	  ADCSRA |= (1<<ADSC);//start conversion
 1de:	ea e7       	ldi	r30, 0x7A	; 122
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	80 64       	ori	r24, 0x40	; 64
 1e6:	80 83       	st	Z, r24
 1e8:	08 95       	ret

000001ea <ADC_conversion_completed>:
}

int ADC_conversion_completed(void){	
	return (ADCSRA&(1<<ADIF))==0; //devuelve 1 si la conversion esta completada
 1ea:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 1ee:	82 95       	swap	r24
 1f0:	8f 70       	andi	r24, 0x0F	; 15
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	89 27       	eor	r24, r25
}
 1f6:	81 70       	andi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	08 95       	ret

000001fc <ADC_flag_reset>:

void ADC_flag_reset(void){
	ADCSRA |= (1<<ADIF); //borrar flag
 1fc:	ea e7       	ldi	r30, 0x7A	; 122
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	80 61       	ori	r24, 0x10	; 16
 204:	80 83       	st	Z, r24
 206:	08 95       	ret

00000208 <ADC_get_voltaje_real>:
// int ADC_get_voltaje_entero(void){
// 	return ADC*500/1024;
// }

float ADC_get_voltaje_real(void){
	return ADC*500.0/1024.0;
 208:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 20c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__floatunsisf>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	4a ef       	ldi	r20, 0xFA	; 250
 21e:	53 e4       	ldi	r21, 0x43	; 67
 220:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__mulsf3>
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	40 e8       	ldi	r20, 0x80	; 128
 22a:	5a e3       	ldi	r21, 0x3A	; 58
 22c:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__mulsf3>
}
 230:	08 95       	ret

00000232 <set_temperatura_display_float>:
// 	
// 	sprintf(linea_inferior, "TEMP: %d.0 C              ", temperatura);
// }

void set_temperatura_display_float(float temperatura)
{
 232:	cf 92       	push	r12
 234:	df 92       	push	r13
 236:	ef 92       	push	r14
 238:	ff 92       	push	r15
 23a:	6b 01       	movw	r12, r22
 23c:	7c 01       	movw	r14, r24
	int fracc = (int)(temperatura * 10) % 10;
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	40 e2       	ldi	r20, 0x20	; 32
 244:	51 e4       	ldi	r21, 0x41	; 65
 246:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <__mulsf3>
 24a:	0e 94 35 03 	call	0x66a	; 0x66a <__fixsfsi>
 24e:	cb 01       	movw	r24, r22
 250:	6a e0       	ldi	r22, 0x0A	; 10
 252:	70 e0       	ldi	r23, 0x00	; 0
 254:	0e 94 8f 04 	call	0x91e	; 0x91e <__divmodhi4>
	int enter = (int)temperatura;
	
	sprintf(linea_inferior, "TEMP: %d.%d C              ", enter,fracc);
 258:	9f 93       	push	r25
 25a:	8f 93       	push	r24
// }

void set_temperatura_display_float(float temperatura)
{
	int fracc = (int)(temperatura * 10) % 10;
	int enter = (int)temperatura;
 25c:	c7 01       	movw	r24, r14
 25e:	b6 01       	movw	r22, r12
 260:	0e 94 35 03 	call	0x66a	; 0x66a <__fixsfsi>
	
	sprintf(linea_inferior, "TEMP: %d.%d C              ", enter,fracc);
 264:	7f 93       	push	r23
 266:	6f 93       	push	r22
 268:	88 e3       	ldi	r24, 0x38	; 56
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	9f 93       	push	r25
 26e:	8f 93       	push	r24
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	9f 93       	push	r25
 276:	8f 93       	push	r24
 278:	0e 94 b7 04 	call	0x96e	; 0x96e <sprintf>
 27c:	8d b7       	in	r24, 0x3d	; 61
 27e:	9e b7       	in	r25, 0x3e	; 62
 280:	08 96       	adiw	r24, 0x08	; 8
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	9e bf       	out	0x3e, r25	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	8d bf       	out	0x3d, r24	; 61
	
	
}
 28c:	ff 90       	pop	r15
 28e:	ef 90       	pop	r14
 290:	df 90       	pop	r13
 292:	cf 90       	pop	r12
 294:	08 95       	ret

00000296 <regular_temperatura>:

void set_temperatura_display_int(int temperatura);
void set_temperatura_display_float(float temperatura);

void regular_temperatura()
{
 296:	cf 92       	push	r12
 298:	df 92       	push	r13
 29a:	ef 92       	push	r14
 29c:	ff 92       	push	r15
/*	int temperatura_actual = TERMOMETRO_get_temperatura_entero();*/
	float temperatura_actual = TERMOMETRO_get_temperatura_real();
 29e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <TERMOMETRO_get_temperatura_real>
 2a2:	6b 01       	movw	r12, r22
 2a4:	7c 01       	movw	r14, r24

	
	cli();
 2a6:	f8 94       	cli
/*	set_temperatura_display_int(temperatura_actual);*/
	set_temperatura_display_float(temperatura_actual);
 2a8:	0e 94 19 01 	call	0x232	; 0x232 <set_temperatura_display_float>
	sei();
 2ac:	78 94       	sei
	
	if (temperatura_actual <= limite_inferior)
 2ae:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <limite_inferior>
 2b2:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <limite_inferior+0x1>
 2b6:	bc 01       	movw	r22, r24
 2b8:	99 0f       	add	r25, r25
 2ba:	88 0b       	sbc	r24, r24
 2bc:	99 0b       	sbc	r25, r25
 2be:	0e 94 6d 03 	call	0x6da	; 0x6da <__floatsisf>
 2c2:	9b 01       	movw	r18, r22
 2c4:	ac 01       	movw	r20, r24
 2c6:	c7 01       	movw	r24, r14
 2c8:	b6 01       	movw	r22, r12
 2ca:	0e 94 30 03 	call	0x660	; 0x660 <__cmpsf2>
 2ce:	18 16       	cp	r1, r24
 2d0:	2c f0       	brlt	.+10     	; 0x2dc <regular_temperatura+0x46>
	{
		encender_estufa();
 2d2:	0e 94 77 00 	call	0xee	; 0xee <encender_estufa>
		apagar_ventilador();
 2d6:	0e 94 7f 00 	call	0xfe	; 0xfe <apagar_ventilador>
 2da:	1b c0       	rjmp	.+54     	; 0x312 <regular_temperatura+0x7c>
	}
	else if (temperatura_actual >= limite_superior)
 2dc:	60 91 33 01 	lds	r22, 0x0133	; 0x800133 <limite_superior>
 2e0:	70 91 34 01 	lds	r23, 0x0134	; 0x800134 <limite_superior+0x1>
 2e4:	07 2e       	mov	r0, r23
 2e6:	00 0c       	add	r0, r0
 2e8:	88 0b       	sbc	r24, r24
 2ea:	99 0b       	sbc	r25, r25
 2ec:	0e 94 6d 03 	call	0x6da	; 0x6da <__floatsisf>
 2f0:	9b 01       	movw	r18, r22
 2f2:	ac 01       	movw	r20, r24
 2f4:	c7 01       	movw	r24, r14
 2f6:	b6 01       	movw	r22, r12
 2f8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
 2fc:	88 23       	and	r24, r24
 2fe:	2c f0       	brlt	.+10     	; 0x30a <regular_temperatura+0x74>
	{
		encender_ventilador();
 300:	0e 94 7c 00 	call	0xf8	; 0xf8 <encender_ventilador>
		apagar_estufa();
 304:	0e 94 7a 00 	call	0xf4	; 0xf4 <apagar_estufa>
 308:	04 c0       	rjmp	.+8      	; 0x312 <regular_temperatura+0x7c>
	}
	else
	{
		apagar_ventilador();
 30a:	0e 94 7f 00 	call	0xfe	; 0xfe <apagar_ventilador>
		apagar_estufa();
 30e:	0e 94 7a 00 	call	0xf4	; 0xf4 <apagar_estufa>
	}
	
}
 312:	ff 90       	pop	r15
 314:	ef 90       	pop	r14
 316:	df 90       	pop	r13
 318:	cf 90       	pop	r12
 31a:	08 95       	ret

0000031c <set_renglones_display>:
	
	
}
void set_renglones_display()
{
	actualizarVarInferior(linea_inferior);
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	0e 94 97 01 	call	0x32e	; 0x32e <actualizarVarInferior>
	actualizarVarSuperior(linea_superior);
 324:	81 e2       	ldi	r24, 0x21	; 33
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	0e 94 9c 01 	call	0x338	; 0x338 <actualizarVarSuperior>
 32c:	08 95       	ret

0000032e <actualizarVarInferior>:
	uint8_t i;
	LCDGotoXY(x,y);
	for(i=0;i<size;i++){
		LCDsendChar(dato[i]);
	}
}
 32e:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <datoInferior+0x1>
 332:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <datoInferior>
 336:	08 95       	ret

00000338 <actualizarVarSuperior>:
 338:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <datoSuperior+0x1>
 33c:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <datoSuperior>
 340:	08 95       	ret

00000342 <mostrarArriba>:
void mostrarArriba()
{ //recibe el string, la posición a ser mostrado y la longitud del string
 342:	cf 93       	push	r28
	uint8_t i;
	LCDGotoXY(0,0);
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	0e 94 20 02 	call	0x440	; 0x440 <LCDGotoXY>
	for(i=0;i<x;i++){
 34c:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 350:	88 23       	and	r24, r24
 352:	79 f0       	breq	.+30     	; 0x372 <mostrarArriba+0x30>
 354:	c0 e0       	ldi	r28, 0x00	; 0
		LCDsendChar(datoSuperior[i]);
 356:	e0 91 57 01 	lds	r30, 0x0157	; 0x800157 <datoSuperior>
 35a:	f0 91 58 01 	lds	r31, 0x0158	; 0x800158 <datoSuperior+0x1>
 35e:	ec 0f       	add	r30, r28
 360:	f1 1d       	adc	r31, r1
 362:	80 81       	ld	r24, Z
 364:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LCDsendChar>
}
void mostrarArriba()
{ //recibe el string, la posición a ser mostrado y la longitud del string
	uint8_t i;
	LCDGotoXY(0,0);
	for(i=0;i<x;i++){
 368:	cf 5f       	subi	r28, 0xFF	; 255
 36a:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 36e:	c8 17       	cp	r28, r24
 370:	90 f3       	brcs	.-28     	; 0x356 <mostrarArriba+0x14>
		LCDsendChar(datoSuperior[i]);
	}
}
 372:	cf 91       	pop	r28
 374:	08 95       	ret

00000376 <mostrarAbajo>:
void mostrarAbajo()
{ //recibe el string, la posición a ser mostrado y la longitud del string
 376:	cf 93       	push	r28
	uint8_t i;
	LCDGotoXY(0,1);
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	0e 94 20 02 	call	0x440	; 0x440 <LCDGotoXY>
	for(i=0;i<x;i++){
 380:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 384:	88 23       	and	r24, r24
 386:	79 f0       	breq	.+30     	; 0x3a6 <mostrarAbajo+0x30>
 388:	c0 e0       	ldi	r28, 0x00	; 0
		LCDsendChar(datoInferior[i]);
 38a:	e0 91 59 01 	lds	r30, 0x0159	; 0x800159 <datoInferior>
 38e:	f0 91 5a 01 	lds	r31, 0x015A	; 0x80015a <datoInferior+0x1>
 392:	ec 0f       	add	r30, r28
 394:	f1 1d       	adc	r31, r1
 396:	80 81       	ld	r24, Z
 398:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LCDsendChar>
}
void mostrarAbajo()
{ //recibe el string, la posición a ser mostrado y la longitud del string
	uint8_t i;
	LCDGotoXY(0,1);
	for(i=0;i<x;i++){
 39c:	cf 5f       	subi	r28, 0xFF	; 255
 39e:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 3a2:	c8 17       	cp	r28, r24
 3a4:	90 f3       	brcs	.-28     	; 0x38a <mostrarAbajo+0x14>
		LCDsendChar(datoInferior[i]);
	}
}
 3a6:	cf 91       	pop	r28
 3a8:	08 95       	ret

000003aa <mostrar>:
void mostrar() //método que llamaría en la interrupción
{
	mostrarArriba();
 3aa:	0e 94 a1 01 	call	0x342	; 0x342 <mostrarArriba>
	mostrarAbajo();
 3ae:	0e 94 bb 01 	call	0x376	; 0x376 <mostrarAbajo>
 3b2:	08 95       	ret

000003b4 <LCDsendChar>:
	LCDGotoXY(x,y);
	for(i=0;i<(uint8_t)pgm_read_byte(&FlashLoc[i]);i++)
	{
		LCDsendChar((uint8_t)pgm_read_byte(&FlashLoc[i]));
	}
}
 3b4:	98 2f       	mov	r25, r24
 3b6:	90 7f       	andi	r25, 0xF0	; 240
 3b8:	95 b9       	out	0x05, r25	; 5
 3ba:	28 9a       	sbi	0x05, 0	; 5
 3bc:	2a 9a       	sbi	0x05, 2	; 5
 3be:	2a e6       	ldi	r18, 0x6A	; 106
 3c0:	2a 95       	dec	r18
 3c2:	f1 f7       	brne	.-4      	; 0x3c0 <LCDsendChar+0xc>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <LCDsendChar+0x12>
 3c6:	2a 98       	cbi	0x05, 2	; 5
 3c8:	28 98       	cbi	0x05, 0	; 5
 3ca:	9a e6       	ldi	r25, 0x6A	; 106
 3cc:	9a 95       	dec	r25
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <LCDsendChar+0x18>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <LCDsendChar+0x1e>
 3d2:	20 e1       	ldi	r18, 0x10	; 16
 3d4:	82 9f       	mul	r24, r18
 3d6:	c0 01       	movw	r24, r0
 3d8:	11 24       	eor	r1, r1
 3da:	85 b9       	out	0x05, r24	; 5
 3dc:	28 9a       	sbi	0x05, 0	; 5
 3de:	2a 9a       	sbi	0x05, 2	; 5
 3e0:	8a e6       	ldi	r24, 0x6A	; 106
 3e2:	8a 95       	dec	r24
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <LCDsendChar+0x2e>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <LCDsendChar+0x34>
 3e8:	2a 98       	cbi	0x05, 2	; 5
 3ea:	28 98       	cbi	0x05, 0	; 5
 3ec:	9a e6       	ldi	r25, 0x6A	; 106
 3ee:	9a 95       	dec	r25
 3f0:	f1 f7       	brne	.-4      	; 0x3ee <LCDsendChar+0x3a>
 3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <LCDsendChar+0x40>
 3f4:	08 95       	ret

000003f6 <LCDsendCommand>:
 3f6:	98 2f       	mov	r25, r24
 3f8:	90 7f       	andi	r25, 0xF0	; 240
 3fa:	95 b9       	out	0x05, r25	; 5
 3fc:	2a 9a       	sbi	0x05, 2	; 5
 3fe:	ef ec       	ldi	r30, 0xCF	; 207
 400:	f7 e0       	ldi	r31, 0x07	; 7
 402:	31 97       	sbiw	r30, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__FUSE_REGION_LENGTH__+0x2>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
 408:	00 00       	nop
 40a:	2a 98       	cbi	0x05, 2	; 5
 40c:	ef ec       	ldi	r30, 0xCF	; 207
 40e:	f7 e0       	ldi	r31, 0x07	; 7
 410:	31 97       	sbiw	r30, 0x01	; 1
 412:	f1 f7       	brne	.-4      	; 0x410 <__FUSE_REGION_LENGTH__+0x10>
 414:	00 c0       	rjmp	.+0      	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 416:	00 00       	nop
 418:	f0 e1       	ldi	r31, 0x10	; 16
 41a:	8f 9f       	mul	r24, r31
 41c:	c0 01       	movw	r24, r0
 41e:	11 24       	eor	r1, r1
 420:	85 b9       	out	0x05, r24	; 5
 422:	2a 9a       	sbi	0x05, 2	; 5
 424:	8f ec       	ldi	r24, 0xCF	; 207
 426:	97 e0       	ldi	r25, 0x07	; 7
 428:	01 97       	sbiw	r24, 0x01	; 1
 42a:	f1 f7       	brne	.-4      	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
 42c:	00 c0       	rjmp	.+0      	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
 42e:	00 00       	nop
 430:	2a 98       	cbi	0x05, 2	; 5
 432:	ef ec       	ldi	r30, 0xCF	; 207
 434:	f7 e0       	ldi	r31, 0x07	; 7
 436:	31 97       	sbiw	r30, 0x01	; 1
 438:	f1 f7       	brne	.-4      	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__FUSE_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
 43e:	08 95       	ret

00000440 <LCDGotoXY>:
 440:	62 30       	cpi	r22, 0x02	; 2
 442:	31 f0       	breq	.+12     	; 0x450 <LCDGotoXY+0x10>
 444:	63 30       	cpi	r22, 0x03	; 3
 446:	31 f0       	breq	.+12     	; 0x454 <LCDGotoXY+0x14>
 448:	61 30       	cpi	r22, 0x01	; 1
 44a:	29 f4       	brne	.+10     	; 0x456 <LCDGotoXY+0x16>
 44c:	80 5c       	subi	r24, 0xC0	; 192
 44e:	03 c0       	rjmp	.+6      	; 0x456 <LCDGotoXY+0x16>
 450:	8c 5e       	subi	r24, 0xEC	; 236
 452:	01 c0       	rjmp	.+2      	; 0x456 <LCDGotoXY+0x16>
 454:	8c 5a       	subi	r24, 0xAC	; 172
 456:	80 68       	ori	r24, 0x80	; 128
 458:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <LCDsendCommand>
 45c:	08 95       	ret

0000045e <LCDdefinechar>:
0b00000000,
0b00000000
};
LCDdefinechar(backslash,0);
*/
void LCDdefinechar(const uint8_t *pc,uint8_t char_code){
 45e:	ff 92       	push	r15
 460:	0f 93       	push	r16
 462:	1f 93       	push	r17
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
 468:	66 0f       	add	r22, r22
 46a:	66 0f       	add	r22, r22
 46c:	66 0f       	add	r22, r22
 46e:	60 64       	ori	r22, 0x40	; 64
 470:	ec 01       	movw	r28, r24
 472:	68 94       	set
 474:	ff 24       	eor	r15, r15
 476:	f3 f8       	bld	r15, 3
 478:	f6 0e       	add	r15, r22
	for (i=0; i<8; i++){
		pcc=pgm_read_byte(&pc[i]);
 47a:	fe 01       	movw	r30, r28
 47c:	04 91       	lpm	r16, Z
		LCDsendCommand(a++);
 47e:	11 e0       	ldi	r17, 0x01	; 1
 480:	16 0f       	add	r17, r22
 482:	86 2f       	mov	r24, r22
 484:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <LCDsendCommand>
		LCDsendChar(pcc);
 488:	80 2f       	mov	r24, r16
 48a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LCDsendChar>
 48e:	21 96       	adiw	r28, 0x01	; 1
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
		pcc=pgm_read_byte(&pc[i]);
		LCDsendCommand(a++);
 490:	61 2f       	mov	r22, r17
*/
void LCDdefinechar(const uint8_t *pc,uint8_t char_code){
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
 492:	1f 11       	cpse	r17, r15
 494:	f2 cf       	rjmp	.-28     	; 0x47a <LCDdefinechar+0x1c>
		pcc=pgm_read_byte(&pc[i]);
		LCDsendCommand(a++);
		LCDsendChar(pcc);
		}
}
 496:	df 91       	pop	r29
 498:	cf 91       	pop	r28
 49a:	1f 91       	pop	r17
 49c:	0f 91       	pop	r16
 49e:	ff 90       	pop	r15
 4a0:	08 95       	ret

000004a2 <LCDinit>:
	LCP&=~(1<<LCD_E);
	_delay_ms(1);	
#endif
}
void LCDinit(void)//Initializes LCD
{
 4a2:	1f 93       	push	r17
 4a4:	cf 93       	push	r28
 4a6:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4a8:	8f e2       	ldi	r24, 0x2F	; 47
 4aa:	95 e7       	ldi	r25, 0x75	; 117
 4ac:	01 97       	sbiw	r24, 0x01	; 1
 4ae:	f1 f7       	brne	.-4      	; 0x4ac <LCDinit+0xa>
 4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <LCDinit+0x10>
 4b2:	00 00       	nop
#ifdef LCD_4bit	
	//4 bit part
	_delay_ms(15);
	LDP=0x00;
 4b4:	15 b8       	out	0x05, r1	; 5
	LCP=0x00;
 4b6:	15 b8       	out	0x05, r1	; 5
	LDDR|=1<<LCD_D7|1<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
 4b8:	84 b1       	in	r24, 0x04	; 4
 4ba:	80 6f       	ori	r24, 0xF0	; 240
 4bc:	84 b9       	out	0x04, r24	; 4
	LCDR|=1<<LCD_E|1<<LCD_RW|1<<LCD_RS;
 4be:	84 b1       	in	r24, 0x04	; 4
 4c0:	87 60       	ori	r24, 0x07	; 7
 4c2:	84 b9       	out	0x04, r24	; 4
   //---------one------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
 4c4:	80 e3       	ldi	r24, 0x30	; 48
 4c6:	85 b9       	out	0x05, r24	; 5
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 4c8:	2a 9a       	sbi	0x05, 2	; 5
 4ca:	ef ec       	ldi	r30, 0xCF	; 207
 4cc:	f7 e0       	ldi	r31, 0x07	; 7
 4ce:	31 97       	sbiw	r30, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <LCDinit+0x2c>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <LCDinit+0x32>
 4d4:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 4d6:	2a 98       	cbi	0x05, 2	; 5
 4d8:	ef ec       	ldi	r30, 0xCF	; 207
 4da:	f7 e0       	ldi	r31, 0x07	; 7
 4dc:	31 97       	sbiw	r30, 0x01	; 1
 4de:	f1 f7       	brne	.-4      	; 0x4dc <LCDinit+0x3a>
 4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <LCDinit+0x40>
 4e2:	00 00       	nop
	_delay_ms(1);
	//-----------two-----------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
 4e4:	85 b9       	out	0x05, r24	; 5
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 4e6:	2a 9a       	sbi	0x05, 2	; 5
 4e8:	8f ec       	ldi	r24, 0xCF	; 207
 4ea:	97 e0       	ldi	r25, 0x07	; 7
 4ec:	01 97       	sbiw	r24, 0x01	; 1
 4ee:	f1 f7       	brne	.-4      	; 0x4ec <LCDinit+0x4a>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <LCDinit+0x50>
 4f2:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 4f4:	2a 98       	cbi	0x05, 2	; 5
 4f6:	ef ec       	ldi	r30, 0xCF	; 207
 4f8:	f7 e0       	ldi	r31, 0x07	; 7
 4fa:	31 97       	sbiw	r30, 0x01	; 1
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <LCDinit+0x58>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <LCDinit+0x5e>
 500:	00 00       	nop
	_delay_ms(1);
	//-------three-------------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //4 bit mode
 502:	80 e2       	ldi	r24, 0x20	; 32
 504:	85 b9       	out	0x05, r24	; 5
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 506:	2a 9a       	sbi	0x05, 2	; 5
 508:	8f ec       	ldi	r24, 0xCF	; 207
 50a:	97 e0       	ldi	r25, 0x07	; 7
 50c:	01 97       	sbiw	r24, 0x01	; 1
 50e:	f1 f7       	brne	.-4      	; 0x50c <LCDinit+0x6a>
 510:	00 c0       	rjmp	.+0      	; 0x512 <LCDinit+0x70>
 512:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 514:	2a 98       	cbi	0x05, 2	; 5
 516:	ef ec       	ldi	r30, 0xCF	; 207
 518:	f7 e0       	ldi	r31, 0x07	; 7
 51a:	31 97       	sbiw	r30, 0x01	; 1
 51c:	f1 f7       	brne	.-4      	; 0x51a <LCDinit+0x78>
 51e:	00 c0       	rjmp	.+0      	; 0x520 <LCDinit+0x7e>
 520:	00 00       	nop
	_delay_ms(1);
	//--------4 bit--dual line---------------
	LCDsendCommand(0b00101000);
 522:	88 e2       	ldi	r24, 0x28	; 40
 524:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <LCDsendCommand>
   //-----increment address, invisible cursor shift------
	LCDsendCommand(0b00001100);
 528:	8c e0       	ldi	r24, 0x0C	; 12
 52a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <LCDsendCommand>
 52e:	c8 e6       	ldi	r28, 0x68	; 104
 530:	d0 e0       	ldi	r29, 0x00	; 0
		//init 8 custom chars
	uint8_t ch=0, chn=0;
 532:	60 e0       	ldi	r22, 0x00	; 0
	while(ch<64)
	{
		LCDdefinechar((LcdCustomChar+ch),chn++);
 534:	11 e0       	ldi	r17, 0x01	; 1
 536:	16 0f       	add	r17, r22
 538:	ce 01       	movw	r24, r28
 53a:	0e 94 2f 02 	call	0x45e	; 0x45e <LCDdefinechar>
 53e:	28 96       	adiw	r28, 0x08	; 8
 540:	61 2f       	mov	r22, r17
	LCDsendCommand(0b00101000);
   //-----increment address, invisible cursor shift------
	LCDsendCommand(0b00001100);
		//init 8 custom chars
	uint8_t ch=0, chn=0;
	while(ch<64)
 542:	18 30       	cpi	r17, 0x08	; 8
 544:	b9 f7       	brne	.-18     	; 0x534 <LCDinit+0x92>
		LCDdefinechar((LcdCustomChar+ch),chn++);
		ch=ch+8;
	}

#endif
}			
 546:	df 91       	pop	r29
 548:	cf 91       	pop	r28
 54a:	1f 91       	pop	r17
 54c:	08 95       	ret

0000054e <main>:
volatile uint8_t flag = 0;
volatile uint16_t contador = 0;

int main (void)
{
	LCDinit();
 54e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <LCDinit>
	TERMOMETRO_init();
 552:	0e 94 f5 02 	call	0x5ea	; 0x5ea <TERMOMETRO_init>
	set_renglones_display();
 556:	0e 94 8e 01 	call	0x31c	; 0x31c <set_renglones_display>
	set_puertos();
 55a:	0e 94 73 00 	call	0xe6	; 0xe6 <set_puertos>
	/*se configura las interrupciones por temporizador*/
	OCR0A = 250;
 55e:	8a ef       	ldi	r24, 0xFA	; 250
 560:	87 bd       	out	0x27, r24	; 39
	TCCR0A = 0x02; //se activa modo CTC
 562:	82 e0       	ldi	r24, 0x02	; 2
 564:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0x02;
 566:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<OCIE0A);
 568:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	sei();
 56c:	78 94       	sei
	/*se configura las interrupciones por temporizador*/
	
	while(1)
	{
		regular_temperatura();			
 56e:	0e 94 4b 01 	call	0x296	; 0x296 <regular_temperatura>
	}
 572:	fd cf       	rjmp	.-6      	; 0x56e <main+0x20>

00000574 <__vector_14>:
	return 0;
}

ISR(TIMER0_COMPA_vect){
 574:	1f 92       	push	r1
 576:	0f 92       	push	r0
 578:	0f b6       	in	r0, 0x3f	; 63
 57a:	0f 92       	push	r0
 57c:	11 24       	eor	r1, r1
 57e:	2f 93       	push	r18
 580:	3f 93       	push	r19
 582:	4f 93       	push	r20
 584:	5f 93       	push	r21
 586:	6f 93       	push	r22
 588:	7f 93       	push	r23
 58a:	8f 93       	push	r24
 58c:	9f 93       	push	r25
 58e:	af 93       	push	r26
 590:	bf 93       	push	r27
 592:	ef 93       	push	r30
 594:	ff 93       	push	r31
	contador++;
 596:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
 59a:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__data_end+0x1>
 59e:	01 96       	adiw	r24, 0x01	; 1
 5a0:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__data_end+0x1>
 5a4:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end>
	if(contador == 1935)
 5a8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
 5ac:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__data_end+0x1>
 5b0:	8f 38       	cpi	r24, 0x8F	; 143
 5b2:	97 40       	sbci	r25, 0x07	; 7
 5b4:	49 f4       	brne	.+18     	; 0x5c8 <__vector_14+0x54>
	{
		mostrar();
 5b6:	0e 94 d5 01 	call	0x3aa	; 0x3aa <mostrar>
		flag = 1;
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <flag>
		contador = 0;
 5c0:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__data_end+0x1>
 5c4:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__data_end>
	}
}
 5c8:	ff 91       	pop	r31
 5ca:	ef 91       	pop	r30
 5cc:	bf 91       	pop	r27
 5ce:	af 91       	pop	r26
 5d0:	9f 91       	pop	r25
 5d2:	8f 91       	pop	r24
 5d4:	7f 91       	pop	r23
 5d6:	6f 91       	pop	r22
 5d8:	5f 91       	pop	r21
 5da:	4f 91       	pop	r20
 5dc:	3f 91       	pop	r19
 5de:	2f 91       	pop	r18
 5e0:	0f 90       	pop	r0
 5e2:	0f be       	out	0x3f, r0	; 63
 5e4:	0f 90       	pop	r0
 5e6:	1f 90       	pop	r1
 5e8:	18 95       	reti

000005ea <TERMOMETRO_init>:
	ADC_flag_reset();	
	int temperatura=ADC_get_voltaje_entero();
	if (temperatura>50){temperatura=50;}
	if (temperatura<0){temperatura=0;}	
	return temperatura;
}
 5ea:	60 e0       	ldi	r22, 0x00	; 0
 5ec:	70 e0       	ldi	r23, 0x00	; 0
 5ee:	80 e4       	ldi	r24, 0x40	; 64
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <ADC_init>
 5f6:	08 95       	ret

000005f8 <TERMOMETRO_get_temperatura_real>:


float TERMOMETRO_get_temperatura_real(void){
 5f8:	cf 92       	push	r12
 5fa:	df 92       	push	r13
 5fc:	ef 92       	push	r14
 5fe:	ff 92       	push	r15
	ADC_Start();
 600:	0e 94 ef 00 	call	0x1de	; 0x1de <ADC_Start>
	while(ADC_conversion_completed()); //wait for conversion to finish
 604:	0e 94 f5 00 	call	0x1ea	; 0x1ea <ADC_conversion_completed>
 608:	89 2b       	or	r24, r25
 60a:	e1 f7       	brne	.-8      	; 0x604 <TERMOMETRO_get_temperatura_real+0xc>
	ADC_flag_reset();
 60c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <ADC_flag_reset>
	
	float temperatura=ADC_get_voltaje_real();
 610:	0e 94 04 01 	call	0x208	; 0x208 <ADC_get_voltaje_real>
 614:	6b 01       	movw	r12, r22
 616:	7c 01       	movw	r14, r24
	if (temperatura>50){temperatura=50;}
 618:	20 e0       	ldi	r18, 0x00	; 0
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	48 e4       	ldi	r20, 0x48	; 72
 61e:	52 e4       	ldi	r21, 0x42	; 66
 620:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
 624:	18 16       	cp	r1, r24
 626:	6c f0       	brlt	.+26     	; 0x642 <TERMOMETRO_get_temperatura_real+0x4a>
	if (temperatura<0){temperatura=0;}
 628:	20 e0       	ldi	r18, 0x00	; 0
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	a9 01       	movw	r20, r18
 62e:	c7 01       	movw	r24, r14
 630:	b6 01       	movw	r22, r12
 632:	0e 94 30 03 	call	0x660	; 0x660 <__cmpsf2>
 636:	88 23       	and	r24, r24
 638:	64 f4       	brge	.+24     	; 0x652 <TERMOMETRO_get_temperatura_real+0x5a>
 63a:	c1 2c       	mov	r12, r1
 63c:	d1 2c       	mov	r13, r1
 63e:	76 01       	movw	r14, r12
 640:	08 c0       	rjmp	.+16     	; 0x652 <TERMOMETRO_get_temperatura_real+0x5a>
	ADC_Start();
	while(ADC_conversion_completed()); //wait for conversion to finish
	ADC_flag_reset();
	
	float temperatura=ADC_get_voltaje_real();
	if (temperatura>50){temperatura=50;}
 642:	0f 2e       	mov	r0, r31
 644:	c1 2c       	mov	r12, r1
 646:	d1 2c       	mov	r13, r1
 648:	f8 e4       	ldi	r31, 0x48	; 72
 64a:	ef 2e       	mov	r14, r31
 64c:	f2 e4       	ldi	r31, 0x42	; 66
 64e:	ff 2e       	mov	r15, r31
 650:	f0 2d       	mov	r31, r0
	if (temperatura<0){temperatura=0;}
	return temperatura;
 652:	c7 01       	movw	r24, r14
 654:	b6 01       	movw	r22, r12
 656:	ff 90       	pop	r15
 658:	ef 90       	pop	r14
 65a:	df 90       	pop	r13
 65c:	cf 90       	pop	r12
 65e:	08 95       	ret

00000660 <__cmpsf2>:
 660:	0e 94 a8 03 	call	0x750	; 0x750 <__fp_cmp>
 664:	08 f4       	brcc	.+2      	; 0x668 <__cmpsf2+0x8>
 666:	81 e0       	ldi	r24, 0x01	; 1
 668:	08 95       	ret

0000066a <__fixsfsi>:
 66a:	0e 94 3c 03 	call	0x678	; 0x678 <__fixunssfsi>
 66e:	68 94       	set
 670:	b1 11       	cpse	r27, r1
 672:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__fp_szero>
 676:	08 95       	ret

00000678 <__fixunssfsi>:
 678:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <__fp_splitA>
 67c:	88 f0       	brcs	.+34     	; 0x6a0 <__fixunssfsi+0x28>
 67e:	9f 57       	subi	r25, 0x7F	; 127
 680:	98 f0       	brcs	.+38     	; 0x6a8 <__fixunssfsi+0x30>
 682:	b9 2f       	mov	r27, r25
 684:	99 27       	eor	r25, r25
 686:	b7 51       	subi	r27, 0x17	; 23
 688:	b0 f0       	brcs	.+44     	; 0x6b6 <__fixunssfsi+0x3e>
 68a:	e1 f0       	breq	.+56     	; 0x6c4 <__fixunssfsi+0x4c>
 68c:	66 0f       	add	r22, r22
 68e:	77 1f       	adc	r23, r23
 690:	88 1f       	adc	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	1a f0       	brmi	.+6      	; 0x69c <__fixunssfsi+0x24>
 696:	ba 95       	dec	r27
 698:	c9 f7       	brne	.-14     	; 0x68c <__fixunssfsi+0x14>
 69a:	14 c0       	rjmp	.+40     	; 0x6c4 <__fixunssfsi+0x4c>
 69c:	b1 30       	cpi	r27, 0x01	; 1
 69e:	91 f0       	breq	.+36     	; 0x6c4 <__fixunssfsi+0x4c>
 6a0:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__fp_zero>
 6a4:	b1 e0       	ldi	r27, 0x01	; 1
 6a6:	08 95       	ret
 6a8:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <__fp_zero>
 6ac:	67 2f       	mov	r22, r23
 6ae:	78 2f       	mov	r23, r24
 6b0:	88 27       	eor	r24, r24
 6b2:	b8 5f       	subi	r27, 0xF8	; 248
 6b4:	39 f0       	breq	.+14     	; 0x6c4 <__fixunssfsi+0x4c>
 6b6:	b9 3f       	cpi	r27, 0xF9	; 249
 6b8:	cc f3       	brlt	.-14     	; 0x6ac <__fixunssfsi+0x34>
 6ba:	86 95       	lsr	r24
 6bc:	77 95       	ror	r23
 6be:	67 95       	ror	r22
 6c0:	b3 95       	inc	r27
 6c2:	d9 f7       	brne	.-10     	; 0x6ba <__fixunssfsi+0x42>
 6c4:	3e f4       	brtc	.+14     	; 0x6d4 <__fixunssfsi+0x5c>
 6c6:	90 95       	com	r25
 6c8:	80 95       	com	r24
 6ca:	70 95       	com	r23
 6cc:	61 95       	neg	r22
 6ce:	7f 4f       	sbci	r23, 0xFF	; 255
 6d0:	8f 4f       	sbci	r24, 0xFF	; 255
 6d2:	9f 4f       	sbci	r25, 0xFF	; 255
 6d4:	08 95       	ret

000006d6 <__floatunsisf>:
 6d6:	e8 94       	clt
 6d8:	09 c0       	rjmp	.+18     	; 0x6ec <__floatsisf+0x12>

000006da <__floatsisf>:
 6da:	97 fb       	bst	r25, 7
 6dc:	3e f4       	brtc	.+14     	; 0x6ec <__floatsisf+0x12>
 6de:	90 95       	com	r25
 6e0:	80 95       	com	r24
 6e2:	70 95       	com	r23
 6e4:	61 95       	neg	r22
 6e6:	7f 4f       	sbci	r23, 0xFF	; 255
 6e8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ea:	9f 4f       	sbci	r25, 0xFF	; 255
 6ec:	99 23       	and	r25, r25
 6ee:	a9 f0       	breq	.+42     	; 0x71a <__floatsisf+0x40>
 6f0:	f9 2f       	mov	r31, r25
 6f2:	96 e9       	ldi	r25, 0x96	; 150
 6f4:	bb 27       	eor	r27, r27
 6f6:	93 95       	inc	r25
 6f8:	f6 95       	lsr	r31
 6fa:	87 95       	ror	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b7 95       	ror	r27
 702:	f1 11       	cpse	r31, r1
 704:	f8 cf       	rjmp	.-16     	; 0x6f6 <__floatsisf+0x1c>
 706:	fa f4       	brpl	.+62     	; 0x746 <__floatsisf+0x6c>
 708:	bb 0f       	add	r27, r27
 70a:	11 f4       	brne	.+4      	; 0x710 <__floatsisf+0x36>
 70c:	60 ff       	sbrs	r22, 0
 70e:	1b c0       	rjmp	.+54     	; 0x746 <__floatsisf+0x6c>
 710:	6f 5f       	subi	r22, 0xFF	; 255
 712:	7f 4f       	sbci	r23, 0xFF	; 255
 714:	8f 4f       	sbci	r24, 0xFF	; 255
 716:	9f 4f       	sbci	r25, 0xFF	; 255
 718:	16 c0       	rjmp	.+44     	; 0x746 <__floatsisf+0x6c>
 71a:	88 23       	and	r24, r24
 71c:	11 f0       	breq	.+4      	; 0x722 <__floatsisf+0x48>
 71e:	96 e9       	ldi	r25, 0x96	; 150
 720:	11 c0       	rjmp	.+34     	; 0x744 <__floatsisf+0x6a>
 722:	77 23       	and	r23, r23
 724:	21 f0       	breq	.+8      	; 0x72e <__floatsisf+0x54>
 726:	9e e8       	ldi	r25, 0x8E	; 142
 728:	87 2f       	mov	r24, r23
 72a:	76 2f       	mov	r23, r22
 72c:	05 c0       	rjmp	.+10     	; 0x738 <__floatsisf+0x5e>
 72e:	66 23       	and	r22, r22
 730:	71 f0       	breq	.+28     	; 0x74e <__floatsisf+0x74>
 732:	96 e8       	ldi	r25, 0x86	; 134
 734:	86 2f       	mov	r24, r22
 736:	70 e0       	ldi	r23, 0x00	; 0
 738:	60 e0       	ldi	r22, 0x00	; 0
 73a:	2a f0       	brmi	.+10     	; 0x746 <__floatsisf+0x6c>
 73c:	9a 95       	dec	r25
 73e:	66 0f       	add	r22, r22
 740:	77 1f       	adc	r23, r23
 742:	88 1f       	adc	r24, r24
 744:	da f7       	brpl	.-10     	; 0x73c <__floatsisf+0x62>
 746:	88 0f       	add	r24, r24
 748:	96 95       	lsr	r25
 74a:	87 95       	ror	r24
 74c:	97 f9       	bld	r25, 7
 74e:	08 95       	ret

00000750 <__fp_cmp>:
 750:	99 0f       	add	r25, r25
 752:	00 08       	sbc	r0, r0
 754:	55 0f       	add	r21, r21
 756:	aa 0b       	sbc	r26, r26
 758:	e0 e8       	ldi	r30, 0x80	; 128
 75a:	fe ef       	ldi	r31, 0xFE	; 254
 75c:	16 16       	cp	r1, r22
 75e:	17 06       	cpc	r1, r23
 760:	e8 07       	cpc	r30, r24
 762:	f9 07       	cpc	r31, r25
 764:	c0 f0       	brcs	.+48     	; 0x796 <__fp_cmp+0x46>
 766:	12 16       	cp	r1, r18
 768:	13 06       	cpc	r1, r19
 76a:	e4 07       	cpc	r30, r20
 76c:	f5 07       	cpc	r31, r21
 76e:	98 f0       	brcs	.+38     	; 0x796 <__fp_cmp+0x46>
 770:	62 1b       	sub	r22, r18
 772:	73 0b       	sbc	r23, r19
 774:	84 0b       	sbc	r24, r20
 776:	95 0b       	sbc	r25, r21
 778:	39 f4       	brne	.+14     	; 0x788 <__fp_cmp+0x38>
 77a:	0a 26       	eor	r0, r26
 77c:	61 f0       	breq	.+24     	; 0x796 <__fp_cmp+0x46>
 77e:	23 2b       	or	r18, r19
 780:	24 2b       	or	r18, r20
 782:	25 2b       	or	r18, r21
 784:	21 f4       	brne	.+8      	; 0x78e <__fp_cmp+0x3e>
 786:	08 95       	ret
 788:	0a 26       	eor	r0, r26
 78a:	09 f4       	brne	.+2      	; 0x78e <__fp_cmp+0x3e>
 78c:	a1 40       	sbci	r26, 0x01	; 1
 78e:	a6 95       	lsr	r26
 790:	8f ef       	ldi	r24, 0xFF	; 255
 792:	81 1d       	adc	r24, r1
 794:	81 1d       	adc	r24, r1
 796:	08 95       	ret

00000798 <__fp_split3>:
 798:	57 fd       	sbrc	r21, 7
 79a:	90 58       	subi	r25, 0x80	; 128
 79c:	44 0f       	add	r20, r20
 79e:	55 1f       	adc	r21, r21
 7a0:	59 f0       	breq	.+22     	; 0x7b8 <__fp_splitA+0x10>
 7a2:	5f 3f       	cpi	r21, 0xFF	; 255
 7a4:	71 f0       	breq	.+28     	; 0x7c2 <__fp_splitA+0x1a>
 7a6:	47 95       	ror	r20

000007a8 <__fp_splitA>:
 7a8:	88 0f       	add	r24, r24
 7aa:	97 fb       	bst	r25, 7
 7ac:	99 1f       	adc	r25, r25
 7ae:	61 f0       	breq	.+24     	; 0x7c8 <__fp_splitA+0x20>
 7b0:	9f 3f       	cpi	r25, 0xFF	; 255
 7b2:	79 f0       	breq	.+30     	; 0x7d2 <__fp_splitA+0x2a>
 7b4:	87 95       	ror	r24
 7b6:	08 95       	ret
 7b8:	12 16       	cp	r1, r18
 7ba:	13 06       	cpc	r1, r19
 7bc:	14 06       	cpc	r1, r20
 7be:	55 1f       	adc	r21, r21
 7c0:	f2 cf       	rjmp	.-28     	; 0x7a6 <__fp_split3+0xe>
 7c2:	46 95       	lsr	r20
 7c4:	f1 df       	rcall	.-30     	; 0x7a8 <__fp_splitA>
 7c6:	08 c0       	rjmp	.+16     	; 0x7d8 <__fp_splitA+0x30>
 7c8:	16 16       	cp	r1, r22
 7ca:	17 06       	cpc	r1, r23
 7cc:	18 06       	cpc	r1, r24
 7ce:	99 1f       	adc	r25, r25
 7d0:	f1 cf       	rjmp	.-30     	; 0x7b4 <__fp_splitA+0xc>
 7d2:	86 95       	lsr	r24
 7d4:	71 05       	cpc	r23, r1
 7d6:	61 05       	cpc	r22, r1
 7d8:	08 94       	sec
 7da:	08 95       	ret

000007dc <__fp_zero>:
 7dc:	e8 94       	clt

000007de <__fp_szero>:
 7de:	bb 27       	eor	r27, r27
 7e0:	66 27       	eor	r22, r22
 7e2:	77 27       	eor	r23, r23
 7e4:	cb 01       	movw	r24, r22
 7e6:	97 f9       	bld	r25, 7
 7e8:	08 95       	ret

000007ea <__gesf2>:
 7ea:	0e 94 a8 03 	call	0x750	; 0x750 <__fp_cmp>
 7ee:	08 f4       	brcc	.+2      	; 0x7f2 <__gesf2+0x8>
 7f0:	8f ef       	ldi	r24, 0xFF	; 255
 7f2:	08 95       	ret

000007f4 <__mulsf3>:
 7f4:	0e 94 0d 04 	call	0x81a	; 0x81a <__mulsf3x>
 7f8:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_round>
 7fc:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscA>
 800:	38 f0       	brcs	.+14     	; 0x810 <__mulsf3+0x1c>
 802:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fp_pscB>
 806:	20 f0       	brcs	.+8      	; 0x810 <__mulsf3+0x1c>
 808:	95 23       	and	r25, r21
 80a:	11 f0       	breq	.+4      	; 0x810 <__mulsf3+0x1c>
 80c:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_inf>
 810:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__fp_nan>
 814:	11 24       	eor	r1, r1
 816:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__fp_szero>

0000081a <__mulsf3x>:
 81a:	0e 94 cc 03 	call	0x798	; 0x798 <__fp_split3>
 81e:	70 f3       	brcs	.-36     	; 0x7fc <__mulsf3+0x8>

00000820 <__mulsf3_pse>:
 820:	95 9f       	mul	r25, r21
 822:	c1 f3       	breq	.-16     	; 0x814 <__mulsf3+0x20>
 824:	95 0f       	add	r25, r21
 826:	50 e0       	ldi	r21, 0x00	; 0
 828:	55 1f       	adc	r21, r21
 82a:	62 9f       	mul	r22, r18
 82c:	f0 01       	movw	r30, r0
 82e:	72 9f       	mul	r23, r18
 830:	bb 27       	eor	r27, r27
 832:	f0 0d       	add	r31, r0
 834:	b1 1d       	adc	r27, r1
 836:	63 9f       	mul	r22, r19
 838:	aa 27       	eor	r26, r26
 83a:	f0 0d       	add	r31, r0
 83c:	b1 1d       	adc	r27, r1
 83e:	aa 1f       	adc	r26, r26
 840:	64 9f       	mul	r22, r20
 842:	66 27       	eor	r22, r22
 844:	b0 0d       	add	r27, r0
 846:	a1 1d       	adc	r26, r1
 848:	66 1f       	adc	r22, r22
 84a:	82 9f       	mul	r24, r18
 84c:	22 27       	eor	r18, r18
 84e:	b0 0d       	add	r27, r0
 850:	a1 1d       	adc	r26, r1
 852:	62 1f       	adc	r22, r18
 854:	73 9f       	mul	r23, r19
 856:	b0 0d       	add	r27, r0
 858:	a1 1d       	adc	r26, r1
 85a:	62 1f       	adc	r22, r18
 85c:	83 9f       	mul	r24, r19
 85e:	a0 0d       	add	r26, r0
 860:	61 1d       	adc	r22, r1
 862:	22 1f       	adc	r18, r18
 864:	74 9f       	mul	r23, r20
 866:	33 27       	eor	r19, r19
 868:	a0 0d       	add	r26, r0
 86a:	61 1d       	adc	r22, r1
 86c:	23 1f       	adc	r18, r19
 86e:	84 9f       	mul	r24, r20
 870:	60 0d       	add	r22, r0
 872:	21 1d       	adc	r18, r1
 874:	82 2f       	mov	r24, r18
 876:	76 2f       	mov	r23, r22
 878:	6a 2f       	mov	r22, r26
 87a:	11 24       	eor	r1, r1
 87c:	9f 57       	subi	r25, 0x7F	; 127
 87e:	50 40       	sbci	r21, 0x00	; 0
 880:	9a f0       	brmi	.+38     	; 0x8a8 <__mulsf3_pse+0x88>
 882:	f1 f0       	breq	.+60     	; 0x8c0 <__mulsf3_pse+0xa0>
 884:	88 23       	and	r24, r24
 886:	4a f0       	brmi	.+18     	; 0x89a <__mulsf3_pse+0x7a>
 888:	ee 0f       	add	r30, r30
 88a:	ff 1f       	adc	r31, r31
 88c:	bb 1f       	adc	r27, r27
 88e:	66 1f       	adc	r22, r22
 890:	77 1f       	adc	r23, r23
 892:	88 1f       	adc	r24, r24
 894:	91 50       	subi	r25, 0x01	; 1
 896:	50 40       	sbci	r21, 0x00	; 0
 898:	a9 f7       	brne	.-22     	; 0x884 <__mulsf3_pse+0x64>
 89a:	9e 3f       	cpi	r25, 0xFE	; 254
 89c:	51 05       	cpc	r21, r1
 89e:	80 f0       	brcs	.+32     	; 0x8c0 <__mulsf3_pse+0xa0>
 8a0:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_inf>
 8a4:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__fp_szero>
 8a8:	5f 3f       	cpi	r21, 0xFF	; 255
 8aa:	e4 f3       	brlt	.-8      	; 0x8a4 <__mulsf3_pse+0x84>
 8ac:	98 3e       	cpi	r25, 0xE8	; 232
 8ae:	d4 f3       	brlt	.-12     	; 0x8a4 <__mulsf3_pse+0x84>
 8b0:	86 95       	lsr	r24
 8b2:	77 95       	ror	r23
 8b4:	67 95       	ror	r22
 8b6:	b7 95       	ror	r27
 8b8:	f7 95       	ror	r31
 8ba:	e7 95       	ror	r30
 8bc:	9f 5f       	subi	r25, 0xFF	; 255
 8be:	c1 f7       	brne	.-16     	; 0x8b0 <__mulsf3_pse+0x90>
 8c0:	fe 2b       	or	r31, r30
 8c2:	88 0f       	add	r24, r24
 8c4:	91 1d       	adc	r25, r1
 8c6:	96 95       	lsr	r25
 8c8:	87 95       	ror	r24
 8ca:	97 f9       	bld	r25, 7
 8cc:	08 95       	ret

000008ce <__fp_inf>:
 8ce:	97 f9       	bld	r25, 7
 8d0:	9f 67       	ori	r25, 0x7F	; 127
 8d2:	80 e8       	ldi	r24, 0x80	; 128
 8d4:	70 e0       	ldi	r23, 0x00	; 0
 8d6:	60 e0       	ldi	r22, 0x00	; 0
 8d8:	08 95       	ret

000008da <__fp_nan>:
 8da:	9f ef       	ldi	r25, 0xFF	; 255
 8dc:	80 ec       	ldi	r24, 0xC0	; 192
 8de:	08 95       	ret

000008e0 <__fp_pscA>:
 8e0:	00 24       	eor	r0, r0
 8e2:	0a 94       	dec	r0
 8e4:	16 16       	cp	r1, r22
 8e6:	17 06       	cpc	r1, r23
 8e8:	18 06       	cpc	r1, r24
 8ea:	09 06       	cpc	r0, r25
 8ec:	08 95       	ret

000008ee <__fp_pscB>:
 8ee:	00 24       	eor	r0, r0
 8f0:	0a 94       	dec	r0
 8f2:	12 16       	cp	r1, r18
 8f4:	13 06       	cpc	r1, r19
 8f6:	14 06       	cpc	r1, r20
 8f8:	05 06       	cpc	r0, r21
 8fa:	08 95       	ret

000008fc <__fp_round>:
 8fc:	09 2e       	mov	r0, r25
 8fe:	03 94       	inc	r0
 900:	00 0c       	add	r0, r0
 902:	11 f4       	brne	.+4      	; 0x908 <__stack+0x9>
 904:	88 23       	and	r24, r24
 906:	52 f0       	brmi	.+20     	; 0x91c <__stack+0x1d>
 908:	bb 0f       	add	r27, r27
 90a:	40 f4       	brcc	.+16     	; 0x91c <__stack+0x1d>
 90c:	bf 2b       	or	r27, r31
 90e:	11 f4       	brne	.+4      	; 0x914 <__stack+0x15>
 910:	60 ff       	sbrs	r22, 0
 912:	04 c0       	rjmp	.+8      	; 0x91c <__stack+0x1d>
 914:	6f 5f       	subi	r22, 0xFF	; 255
 916:	7f 4f       	sbci	r23, 0xFF	; 255
 918:	8f 4f       	sbci	r24, 0xFF	; 255
 91a:	9f 4f       	sbci	r25, 0xFF	; 255
 91c:	08 95       	ret

0000091e <__divmodhi4>:
 91e:	97 fb       	bst	r25, 7
 920:	07 2e       	mov	r0, r23
 922:	16 f4       	brtc	.+4      	; 0x928 <__divmodhi4+0xa>
 924:	00 94       	com	r0
 926:	07 d0       	rcall	.+14     	; 0x936 <__divmodhi4_neg1>
 928:	77 fd       	sbrc	r23, 7
 92a:	09 d0       	rcall	.+18     	; 0x93e <__divmodhi4_neg2>
 92c:	0e 94 a3 04 	call	0x946	; 0x946 <__udivmodhi4>
 930:	07 fc       	sbrc	r0, 7
 932:	05 d0       	rcall	.+10     	; 0x93e <__divmodhi4_neg2>
 934:	3e f4       	brtc	.+14     	; 0x944 <__divmodhi4_exit>

00000936 <__divmodhi4_neg1>:
 936:	90 95       	com	r25
 938:	81 95       	neg	r24
 93a:	9f 4f       	sbci	r25, 0xFF	; 255
 93c:	08 95       	ret

0000093e <__divmodhi4_neg2>:
 93e:	70 95       	com	r23
 940:	61 95       	neg	r22
 942:	7f 4f       	sbci	r23, 0xFF	; 255

00000944 <__divmodhi4_exit>:
 944:	08 95       	ret

00000946 <__udivmodhi4>:
 946:	aa 1b       	sub	r26, r26
 948:	bb 1b       	sub	r27, r27
 94a:	51 e1       	ldi	r21, 0x11	; 17
 94c:	07 c0       	rjmp	.+14     	; 0x95c <__udivmodhi4_ep>

0000094e <__udivmodhi4_loop>:
 94e:	aa 1f       	adc	r26, r26
 950:	bb 1f       	adc	r27, r27
 952:	a6 17       	cp	r26, r22
 954:	b7 07       	cpc	r27, r23
 956:	10 f0       	brcs	.+4      	; 0x95c <__udivmodhi4_ep>
 958:	a6 1b       	sub	r26, r22
 95a:	b7 0b       	sbc	r27, r23

0000095c <__udivmodhi4_ep>:
 95c:	88 1f       	adc	r24, r24
 95e:	99 1f       	adc	r25, r25
 960:	5a 95       	dec	r21
 962:	a9 f7       	brne	.-22     	; 0x94e <__udivmodhi4_loop>
 964:	80 95       	com	r24
 966:	90 95       	com	r25
 968:	bc 01       	movw	r22, r24
 96a:	cd 01       	movw	r24, r26
 96c:	08 95       	ret

0000096e <sprintf>:
 96e:	ae e0       	ldi	r26, 0x0E	; 14
 970:	b0 e0       	ldi	r27, 0x00	; 0
 972:	ed eb       	ldi	r30, 0xBD	; 189
 974:	f4 e0       	ldi	r31, 0x04	; 4
 976:	0c 94 66 07 	jmp	0xecc	; 0xecc <__prologue_saves__+0x1c>
 97a:	0d 89       	ldd	r16, Y+21	; 0x15
 97c:	1e 89       	ldd	r17, Y+22	; 0x16
 97e:	86 e0       	ldi	r24, 0x06	; 6
 980:	8c 83       	std	Y+4, r24	; 0x04
 982:	1a 83       	std	Y+2, r17	; 0x02
 984:	09 83       	std	Y+1, r16	; 0x01
 986:	8f ef       	ldi	r24, 0xFF	; 255
 988:	9f e7       	ldi	r25, 0x7F	; 127
 98a:	9e 83       	std	Y+6, r25	; 0x06
 98c:	8d 83       	std	Y+5, r24	; 0x05
 98e:	ae 01       	movw	r20, r28
 990:	47 5e       	subi	r20, 0xE7	; 231
 992:	5f 4f       	sbci	r21, 0xFF	; 255
 994:	6f 89       	ldd	r22, Y+23	; 0x17
 996:	78 8d       	ldd	r23, Y+24	; 0x18
 998:	ce 01       	movw	r24, r28
 99a:	01 96       	adiw	r24, 0x01	; 1
 99c:	0e 94 da 04 	call	0x9b4	; 0x9b4 <vfprintf>
 9a0:	2f 81       	ldd	r18, Y+7	; 0x07
 9a2:	38 85       	ldd	r19, Y+8	; 0x08
 9a4:	f8 01       	movw	r30, r16
 9a6:	e2 0f       	add	r30, r18
 9a8:	f3 1f       	adc	r31, r19
 9aa:	10 82       	st	Z, r1
 9ac:	2e 96       	adiw	r28, 0x0e	; 14
 9ae:	e4 e0       	ldi	r30, 0x04	; 4
 9b0:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__epilogue_restores__+0x1c>

000009b4 <vfprintf>:
 9b4:	ac e0       	ldi	r26, 0x0C	; 12
 9b6:	b0 e0       	ldi	r27, 0x00	; 0
 9b8:	e0 ee       	ldi	r30, 0xE0	; 224
 9ba:	f4 e0       	ldi	r31, 0x04	; 4
 9bc:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__prologue_saves__>
 9c0:	7c 01       	movw	r14, r24
 9c2:	6b 01       	movw	r12, r22
 9c4:	8a 01       	movw	r16, r20
 9c6:	fc 01       	movw	r30, r24
 9c8:	17 82       	std	Z+7, r1	; 0x07
 9ca:	16 82       	std	Z+6, r1	; 0x06
 9cc:	83 81       	ldd	r24, Z+3	; 0x03
 9ce:	81 ff       	sbrs	r24, 1
 9d0:	bd c1       	rjmp	.+890    	; 0xd4c <vfprintf+0x398>
 9d2:	ce 01       	movw	r24, r28
 9d4:	01 96       	adiw	r24, 0x01	; 1
 9d6:	4c 01       	movw	r8, r24
 9d8:	f7 01       	movw	r30, r14
 9da:	93 81       	ldd	r25, Z+3	; 0x03
 9dc:	f6 01       	movw	r30, r12
 9de:	93 fd       	sbrc	r25, 3
 9e0:	85 91       	lpm	r24, Z+
 9e2:	93 ff       	sbrs	r25, 3
 9e4:	81 91       	ld	r24, Z+
 9e6:	6f 01       	movw	r12, r30
 9e8:	88 23       	and	r24, r24
 9ea:	09 f4       	brne	.+2      	; 0x9ee <vfprintf+0x3a>
 9ec:	ab c1       	rjmp	.+854    	; 0xd44 <vfprintf+0x390>
 9ee:	85 32       	cpi	r24, 0x25	; 37
 9f0:	39 f4       	brne	.+14     	; 0xa00 <vfprintf+0x4c>
 9f2:	93 fd       	sbrc	r25, 3
 9f4:	85 91       	lpm	r24, Z+
 9f6:	93 ff       	sbrs	r25, 3
 9f8:	81 91       	ld	r24, Z+
 9fa:	6f 01       	movw	r12, r30
 9fc:	85 32       	cpi	r24, 0x25	; 37
 9fe:	29 f4       	brne	.+10     	; 0xa0a <vfprintf+0x56>
 a00:	b7 01       	movw	r22, r14
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 a08:	e7 cf       	rjmp	.-50     	; 0x9d8 <vfprintf+0x24>
 a0a:	51 2c       	mov	r5, r1
 a0c:	31 2c       	mov	r3, r1
 a0e:	20 e0       	ldi	r18, 0x00	; 0
 a10:	20 32       	cpi	r18, 0x20	; 32
 a12:	a0 f4       	brcc	.+40     	; 0xa3c <vfprintf+0x88>
 a14:	8b 32       	cpi	r24, 0x2B	; 43
 a16:	69 f0       	breq	.+26     	; 0xa32 <vfprintf+0x7e>
 a18:	30 f4       	brcc	.+12     	; 0xa26 <vfprintf+0x72>
 a1a:	80 32       	cpi	r24, 0x20	; 32
 a1c:	59 f0       	breq	.+22     	; 0xa34 <vfprintf+0x80>
 a1e:	83 32       	cpi	r24, 0x23	; 35
 a20:	69 f4       	brne	.+26     	; 0xa3c <vfprintf+0x88>
 a22:	20 61       	ori	r18, 0x10	; 16
 a24:	2c c0       	rjmp	.+88     	; 0xa7e <vfprintf+0xca>
 a26:	8d 32       	cpi	r24, 0x2D	; 45
 a28:	39 f0       	breq	.+14     	; 0xa38 <vfprintf+0x84>
 a2a:	80 33       	cpi	r24, 0x30	; 48
 a2c:	39 f4       	brne	.+14     	; 0xa3c <vfprintf+0x88>
 a2e:	21 60       	ori	r18, 0x01	; 1
 a30:	26 c0       	rjmp	.+76     	; 0xa7e <vfprintf+0xca>
 a32:	22 60       	ori	r18, 0x02	; 2
 a34:	24 60       	ori	r18, 0x04	; 4
 a36:	23 c0       	rjmp	.+70     	; 0xa7e <vfprintf+0xca>
 a38:	28 60       	ori	r18, 0x08	; 8
 a3a:	21 c0       	rjmp	.+66     	; 0xa7e <vfprintf+0xca>
 a3c:	27 fd       	sbrc	r18, 7
 a3e:	27 c0       	rjmp	.+78     	; 0xa8e <vfprintf+0xda>
 a40:	30 ed       	ldi	r19, 0xD0	; 208
 a42:	38 0f       	add	r19, r24
 a44:	3a 30       	cpi	r19, 0x0A	; 10
 a46:	78 f4       	brcc	.+30     	; 0xa66 <vfprintf+0xb2>
 a48:	26 ff       	sbrs	r18, 6
 a4a:	06 c0       	rjmp	.+12     	; 0xa58 <vfprintf+0xa4>
 a4c:	fa e0       	ldi	r31, 0x0A	; 10
 a4e:	5f 9e       	mul	r5, r31
 a50:	30 0d       	add	r19, r0
 a52:	11 24       	eor	r1, r1
 a54:	53 2e       	mov	r5, r19
 a56:	13 c0       	rjmp	.+38     	; 0xa7e <vfprintf+0xca>
 a58:	8a e0       	ldi	r24, 0x0A	; 10
 a5a:	38 9e       	mul	r3, r24
 a5c:	30 0d       	add	r19, r0
 a5e:	11 24       	eor	r1, r1
 a60:	33 2e       	mov	r3, r19
 a62:	20 62       	ori	r18, 0x20	; 32
 a64:	0c c0       	rjmp	.+24     	; 0xa7e <vfprintf+0xca>
 a66:	8e 32       	cpi	r24, 0x2E	; 46
 a68:	21 f4       	brne	.+8      	; 0xa72 <vfprintf+0xbe>
 a6a:	26 fd       	sbrc	r18, 6
 a6c:	6b c1       	rjmp	.+726    	; 0xd44 <vfprintf+0x390>
 a6e:	20 64       	ori	r18, 0x40	; 64
 a70:	06 c0       	rjmp	.+12     	; 0xa7e <vfprintf+0xca>
 a72:	8c 36       	cpi	r24, 0x6C	; 108
 a74:	11 f4       	brne	.+4      	; 0xa7a <vfprintf+0xc6>
 a76:	20 68       	ori	r18, 0x80	; 128
 a78:	02 c0       	rjmp	.+4      	; 0xa7e <vfprintf+0xca>
 a7a:	88 36       	cpi	r24, 0x68	; 104
 a7c:	41 f4       	brne	.+16     	; 0xa8e <vfprintf+0xda>
 a7e:	f6 01       	movw	r30, r12
 a80:	93 fd       	sbrc	r25, 3
 a82:	85 91       	lpm	r24, Z+
 a84:	93 ff       	sbrs	r25, 3
 a86:	81 91       	ld	r24, Z+
 a88:	6f 01       	movw	r12, r30
 a8a:	81 11       	cpse	r24, r1
 a8c:	c1 cf       	rjmp	.-126    	; 0xa10 <vfprintf+0x5c>
 a8e:	98 2f       	mov	r25, r24
 a90:	9f 7d       	andi	r25, 0xDF	; 223
 a92:	95 54       	subi	r25, 0x45	; 69
 a94:	93 30       	cpi	r25, 0x03	; 3
 a96:	28 f4       	brcc	.+10     	; 0xaa2 <vfprintf+0xee>
 a98:	0c 5f       	subi	r16, 0xFC	; 252
 a9a:	1f 4f       	sbci	r17, 0xFF	; 255
 a9c:	ff e3       	ldi	r31, 0x3F	; 63
 a9e:	f9 83       	std	Y+1, r31	; 0x01
 aa0:	0d c0       	rjmp	.+26     	; 0xabc <vfprintf+0x108>
 aa2:	83 36       	cpi	r24, 0x63	; 99
 aa4:	31 f0       	breq	.+12     	; 0xab2 <vfprintf+0xfe>
 aa6:	83 37       	cpi	r24, 0x73	; 115
 aa8:	71 f0       	breq	.+28     	; 0xac6 <vfprintf+0x112>
 aaa:	83 35       	cpi	r24, 0x53	; 83
 aac:	09 f0       	breq	.+2      	; 0xab0 <vfprintf+0xfc>
 aae:	5b c0       	rjmp	.+182    	; 0xb66 <vfprintf+0x1b2>
 ab0:	22 c0       	rjmp	.+68     	; 0xaf6 <vfprintf+0x142>
 ab2:	f8 01       	movw	r30, r16
 ab4:	80 81       	ld	r24, Z
 ab6:	89 83       	std	Y+1, r24	; 0x01
 ab8:	0e 5f       	subi	r16, 0xFE	; 254
 aba:	1f 4f       	sbci	r17, 0xFF	; 255
 abc:	44 24       	eor	r4, r4
 abe:	43 94       	inc	r4
 ac0:	51 2c       	mov	r5, r1
 ac2:	54 01       	movw	r10, r8
 ac4:	15 c0       	rjmp	.+42     	; 0xaf0 <vfprintf+0x13c>
 ac6:	38 01       	movw	r6, r16
 ac8:	f2 e0       	ldi	r31, 0x02	; 2
 aca:	6f 0e       	add	r6, r31
 acc:	71 1c       	adc	r7, r1
 ace:	f8 01       	movw	r30, r16
 ad0:	a0 80       	ld	r10, Z
 ad2:	b1 80       	ldd	r11, Z+1	; 0x01
 ad4:	26 ff       	sbrs	r18, 6
 ad6:	03 c0       	rjmp	.+6      	; 0xade <vfprintf+0x12a>
 ad8:	65 2d       	mov	r22, r5
 ada:	70 e0       	ldi	r23, 0x00	; 0
 adc:	02 c0       	rjmp	.+4      	; 0xae2 <vfprintf+0x12e>
 ade:	6f ef       	ldi	r22, 0xFF	; 255
 ae0:	7f ef       	ldi	r23, 0xFF	; 255
 ae2:	c5 01       	movw	r24, r10
 ae4:	2c 87       	std	Y+12, r18	; 0x0c
 ae6:	0e 94 b7 06 	call	0xd6e	; 0xd6e <strnlen>
 aea:	2c 01       	movw	r4, r24
 aec:	83 01       	movw	r16, r6
 aee:	2c 85       	ldd	r18, Y+12	; 0x0c
 af0:	2f 77       	andi	r18, 0x7F	; 127
 af2:	22 2e       	mov	r2, r18
 af4:	17 c0       	rjmp	.+46     	; 0xb24 <vfprintf+0x170>
 af6:	38 01       	movw	r6, r16
 af8:	f2 e0       	ldi	r31, 0x02	; 2
 afa:	6f 0e       	add	r6, r31
 afc:	71 1c       	adc	r7, r1
 afe:	f8 01       	movw	r30, r16
 b00:	a0 80       	ld	r10, Z
 b02:	b1 80       	ldd	r11, Z+1	; 0x01
 b04:	26 ff       	sbrs	r18, 6
 b06:	03 c0       	rjmp	.+6      	; 0xb0e <vfprintf+0x15a>
 b08:	65 2d       	mov	r22, r5
 b0a:	70 e0       	ldi	r23, 0x00	; 0
 b0c:	02 c0       	rjmp	.+4      	; 0xb12 <vfprintf+0x15e>
 b0e:	6f ef       	ldi	r22, 0xFF	; 255
 b10:	7f ef       	ldi	r23, 0xFF	; 255
 b12:	c5 01       	movw	r24, r10
 b14:	2c 87       	std	Y+12, r18	; 0x0c
 b16:	0e 94 ac 06 	call	0xd58	; 0xd58 <strnlen_P>
 b1a:	2c 01       	movw	r4, r24
 b1c:	2c 85       	ldd	r18, Y+12	; 0x0c
 b1e:	20 68       	ori	r18, 0x80	; 128
 b20:	22 2e       	mov	r2, r18
 b22:	83 01       	movw	r16, r6
 b24:	23 fc       	sbrc	r2, 3
 b26:	1b c0       	rjmp	.+54     	; 0xb5e <vfprintf+0x1aa>
 b28:	83 2d       	mov	r24, r3
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	48 16       	cp	r4, r24
 b2e:	59 06       	cpc	r5, r25
 b30:	b0 f4       	brcc	.+44     	; 0xb5e <vfprintf+0x1aa>
 b32:	b7 01       	movw	r22, r14
 b34:	80 e2       	ldi	r24, 0x20	; 32
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 b3c:	3a 94       	dec	r3
 b3e:	f4 cf       	rjmp	.-24     	; 0xb28 <vfprintf+0x174>
 b40:	f5 01       	movw	r30, r10
 b42:	27 fc       	sbrc	r2, 7
 b44:	85 91       	lpm	r24, Z+
 b46:	27 fe       	sbrs	r2, 7
 b48:	81 91       	ld	r24, Z+
 b4a:	5f 01       	movw	r10, r30
 b4c:	b7 01       	movw	r22, r14
 b4e:	90 e0       	ldi	r25, 0x00	; 0
 b50:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 b54:	31 10       	cpse	r3, r1
 b56:	3a 94       	dec	r3
 b58:	f1 e0       	ldi	r31, 0x01	; 1
 b5a:	4f 1a       	sub	r4, r31
 b5c:	51 08       	sbc	r5, r1
 b5e:	41 14       	cp	r4, r1
 b60:	51 04       	cpc	r5, r1
 b62:	71 f7       	brne	.-36     	; 0xb40 <vfprintf+0x18c>
 b64:	e5 c0       	rjmp	.+458    	; 0xd30 <vfprintf+0x37c>
 b66:	84 36       	cpi	r24, 0x64	; 100
 b68:	11 f0       	breq	.+4      	; 0xb6e <vfprintf+0x1ba>
 b6a:	89 36       	cpi	r24, 0x69	; 105
 b6c:	39 f5       	brne	.+78     	; 0xbbc <vfprintf+0x208>
 b6e:	f8 01       	movw	r30, r16
 b70:	27 ff       	sbrs	r18, 7
 b72:	07 c0       	rjmp	.+14     	; 0xb82 <vfprintf+0x1ce>
 b74:	60 81       	ld	r22, Z
 b76:	71 81       	ldd	r23, Z+1	; 0x01
 b78:	82 81       	ldd	r24, Z+2	; 0x02
 b7a:	93 81       	ldd	r25, Z+3	; 0x03
 b7c:	0c 5f       	subi	r16, 0xFC	; 252
 b7e:	1f 4f       	sbci	r17, 0xFF	; 255
 b80:	08 c0       	rjmp	.+16     	; 0xb92 <vfprintf+0x1de>
 b82:	60 81       	ld	r22, Z
 b84:	71 81       	ldd	r23, Z+1	; 0x01
 b86:	07 2e       	mov	r0, r23
 b88:	00 0c       	add	r0, r0
 b8a:	88 0b       	sbc	r24, r24
 b8c:	99 0b       	sbc	r25, r25
 b8e:	0e 5f       	subi	r16, 0xFE	; 254
 b90:	1f 4f       	sbci	r17, 0xFF	; 255
 b92:	2f 76       	andi	r18, 0x6F	; 111
 b94:	72 2e       	mov	r7, r18
 b96:	97 ff       	sbrs	r25, 7
 b98:	09 c0       	rjmp	.+18     	; 0xbac <vfprintf+0x1f8>
 b9a:	90 95       	com	r25
 b9c:	80 95       	com	r24
 b9e:	70 95       	com	r23
 ba0:	61 95       	neg	r22
 ba2:	7f 4f       	sbci	r23, 0xFF	; 255
 ba4:	8f 4f       	sbci	r24, 0xFF	; 255
 ba6:	9f 4f       	sbci	r25, 0xFF	; 255
 ba8:	20 68       	ori	r18, 0x80	; 128
 baa:	72 2e       	mov	r7, r18
 bac:	2a e0       	ldi	r18, 0x0A	; 10
 bae:	30 e0       	ldi	r19, 0x00	; 0
 bb0:	a4 01       	movw	r20, r8
 bb2:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__ultoa_invert>
 bb6:	a8 2e       	mov	r10, r24
 bb8:	a8 18       	sub	r10, r8
 bba:	44 c0       	rjmp	.+136    	; 0xc44 <vfprintf+0x290>
 bbc:	85 37       	cpi	r24, 0x75	; 117
 bbe:	29 f4       	brne	.+10     	; 0xbca <vfprintf+0x216>
 bc0:	2f 7e       	andi	r18, 0xEF	; 239
 bc2:	b2 2e       	mov	r11, r18
 bc4:	2a e0       	ldi	r18, 0x0A	; 10
 bc6:	30 e0       	ldi	r19, 0x00	; 0
 bc8:	25 c0       	rjmp	.+74     	; 0xc14 <vfprintf+0x260>
 bca:	f2 2f       	mov	r31, r18
 bcc:	f9 7f       	andi	r31, 0xF9	; 249
 bce:	bf 2e       	mov	r11, r31
 bd0:	8f 36       	cpi	r24, 0x6F	; 111
 bd2:	c1 f0       	breq	.+48     	; 0xc04 <vfprintf+0x250>
 bd4:	18 f4       	brcc	.+6      	; 0xbdc <vfprintf+0x228>
 bd6:	88 35       	cpi	r24, 0x58	; 88
 bd8:	79 f0       	breq	.+30     	; 0xbf8 <vfprintf+0x244>
 bda:	b4 c0       	rjmp	.+360    	; 0xd44 <vfprintf+0x390>
 bdc:	80 37       	cpi	r24, 0x70	; 112
 bde:	19 f0       	breq	.+6      	; 0xbe6 <vfprintf+0x232>
 be0:	88 37       	cpi	r24, 0x78	; 120
 be2:	21 f0       	breq	.+8      	; 0xbec <vfprintf+0x238>
 be4:	af c0       	rjmp	.+350    	; 0xd44 <vfprintf+0x390>
 be6:	2f 2f       	mov	r18, r31
 be8:	20 61       	ori	r18, 0x10	; 16
 bea:	b2 2e       	mov	r11, r18
 bec:	b4 fe       	sbrs	r11, 4
 bee:	0d c0       	rjmp	.+26     	; 0xc0a <vfprintf+0x256>
 bf0:	8b 2d       	mov	r24, r11
 bf2:	84 60       	ori	r24, 0x04	; 4
 bf4:	b8 2e       	mov	r11, r24
 bf6:	09 c0       	rjmp	.+18     	; 0xc0a <vfprintf+0x256>
 bf8:	24 ff       	sbrs	r18, 4
 bfa:	0a c0       	rjmp	.+20     	; 0xc10 <vfprintf+0x25c>
 bfc:	9f 2f       	mov	r25, r31
 bfe:	96 60       	ori	r25, 0x06	; 6
 c00:	b9 2e       	mov	r11, r25
 c02:	06 c0       	rjmp	.+12     	; 0xc10 <vfprintf+0x25c>
 c04:	28 e0       	ldi	r18, 0x08	; 8
 c06:	30 e0       	ldi	r19, 0x00	; 0
 c08:	05 c0       	rjmp	.+10     	; 0xc14 <vfprintf+0x260>
 c0a:	20 e1       	ldi	r18, 0x10	; 16
 c0c:	30 e0       	ldi	r19, 0x00	; 0
 c0e:	02 c0       	rjmp	.+4      	; 0xc14 <vfprintf+0x260>
 c10:	20 e1       	ldi	r18, 0x10	; 16
 c12:	32 e0       	ldi	r19, 0x02	; 2
 c14:	f8 01       	movw	r30, r16
 c16:	b7 fe       	sbrs	r11, 7
 c18:	07 c0       	rjmp	.+14     	; 0xc28 <vfprintf+0x274>
 c1a:	60 81       	ld	r22, Z
 c1c:	71 81       	ldd	r23, Z+1	; 0x01
 c1e:	82 81       	ldd	r24, Z+2	; 0x02
 c20:	93 81       	ldd	r25, Z+3	; 0x03
 c22:	0c 5f       	subi	r16, 0xFC	; 252
 c24:	1f 4f       	sbci	r17, 0xFF	; 255
 c26:	06 c0       	rjmp	.+12     	; 0xc34 <vfprintf+0x280>
 c28:	60 81       	ld	r22, Z
 c2a:	71 81       	ldd	r23, Z+1	; 0x01
 c2c:	80 e0       	ldi	r24, 0x00	; 0
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	0e 5f       	subi	r16, 0xFE	; 254
 c32:	1f 4f       	sbci	r17, 0xFF	; 255
 c34:	a4 01       	movw	r20, r8
 c36:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__ultoa_invert>
 c3a:	a8 2e       	mov	r10, r24
 c3c:	a8 18       	sub	r10, r8
 c3e:	fb 2d       	mov	r31, r11
 c40:	ff 77       	andi	r31, 0x7F	; 127
 c42:	7f 2e       	mov	r7, r31
 c44:	76 fe       	sbrs	r7, 6
 c46:	0b c0       	rjmp	.+22     	; 0xc5e <vfprintf+0x2aa>
 c48:	37 2d       	mov	r19, r7
 c4a:	3e 7f       	andi	r19, 0xFE	; 254
 c4c:	a5 14       	cp	r10, r5
 c4e:	50 f4       	brcc	.+20     	; 0xc64 <vfprintf+0x2b0>
 c50:	74 fe       	sbrs	r7, 4
 c52:	0a c0       	rjmp	.+20     	; 0xc68 <vfprintf+0x2b4>
 c54:	72 fc       	sbrc	r7, 2
 c56:	08 c0       	rjmp	.+16     	; 0xc68 <vfprintf+0x2b4>
 c58:	37 2d       	mov	r19, r7
 c5a:	3e 7e       	andi	r19, 0xEE	; 238
 c5c:	05 c0       	rjmp	.+10     	; 0xc68 <vfprintf+0x2b4>
 c5e:	ba 2c       	mov	r11, r10
 c60:	37 2d       	mov	r19, r7
 c62:	03 c0       	rjmp	.+6      	; 0xc6a <vfprintf+0x2b6>
 c64:	ba 2c       	mov	r11, r10
 c66:	01 c0       	rjmp	.+2      	; 0xc6a <vfprintf+0x2b6>
 c68:	b5 2c       	mov	r11, r5
 c6a:	34 ff       	sbrs	r19, 4
 c6c:	0d c0       	rjmp	.+26     	; 0xc88 <vfprintf+0x2d4>
 c6e:	fe 01       	movw	r30, r28
 c70:	ea 0d       	add	r30, r10
 c72:	f1 1d       	adc	r31, r1
 c74:	80 81       	ld	r24, Z
 c76:	80 33       	cpi	r24, 0x30	; 48
 c78:	11 f4       	brne	.+4      	; 0xc7e <vfprintf+0x2ca>
 c7a:	39 7e       	andi	r19, 0xE9	; 233
 c7c:	09 c0       	rjmp	.+18     	; 0xc90 <vfprintf+0x2dc>
 c7e:	32 ff       	sbrs	r19, 2
 c80:	06 c0       	rjmp	.+12     	; 0xc8e <vfprintf+0x2da>
 c82:	b3 94       	inc	r11
 c84:	b3 94       	inc	r11
 c86:	04 c0       	rjmp	.+8      	; 0xc90 <vfprintf+0x2dc>
 c88:	83 2f       	mov	r24, r19
 c8a:	86 78       	andi	r24, 0x86	; 134
 c8c:	09 f0       	breq	.+2      	; 0xc90 <vfprintf+0x2dc>
 c8e:	b3 94       	inc	r11
 c90:	33 fd       	sbrc	r19, 3
 c92:	13 c0       	rjmp	.+38     	; 0xcba <vfprintf+0x306>
 c94:	30 ff       	sbrs	r19, 0
 c96:	06 c0       	rjmp	.+12     	; 0xca4 <vfprintf+0x2f0>
 c98:	5a 2c       	mov	r5, r10
 c9a:	b3 14       	cp	r11, r3
 c9c:	18 f4       	brcc	.+6      	; 0xca4 <vfprintf+0x2f0>
 c9e:	53 0c       	add	r5, r3
 ca0:	5b 18       	sub	r5, r11
 ca2:	b3 2c       	mov	r11, r3
 ca4:	b3 14       	cp	r11, r3
 ca6:	68 f4       	brcc	.+26     	; 0xcc2 <vfprintf+0x30e>
 ca8:	b7 01       	movw	r22, r14
 caa:	80 e2       	ldi	r24, 0x20	; 32
 cac:	90 e0       	ldi	r25, 0x00	; 0
 cae:	3c 87       	std	Y+12, r19	; 0x0c
 cb0:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 cb4:	b3 94       	inc	r11
 cb6:	3c 85       	ldd	r19, Y+12	; 0x0c
 cb8:	f5 cf       	rjmp	.-22     	; 0xca4 <vfprintf+0x2f0>
 cba:	b3 14       	cp	r11, r3
 cbc:	10 f4       	brcc	.+4      	; 0xcc2 <vfprintf+0x30e>
 cbe:	3b 18       	sub	r3, r11
 cc0:	01 c0       	rjmp	.+2      	; 0xcc4 <vfprintf+0x310>
 cc2:	31 2c       	mov	r3, r1
 cc4:	34 ff       	sbrs	r19, 4
 cc6:	12 c0       	rjmp	.+36     	; 0xcec <vfprintf+0x338>
 cc8:	b7 01       	movw	r22, r14
 cca:	80 e3       	ldi	r24, 0x30	; 48
 ccc:	90 e0       	ldi	r25, 0x00	; 0
 cce:	3c 87       	std	Y+12, r19	; 0x0c
 cd0:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 cd4:	3c 85       	ldd	r19, Y+12	; 0x0c
 cd6:	32 ff       	sbrs	r19, 2
 cd8:	17 c0       	rjmp	.+46     	; 0xd08 <vfprintf+0x354>
 cda:	31 fd       	sbrc	r19, 1
 cdc:	03 c0       	rjmp	.+6      	; 0xce4 <vfprintf+0x330>
 cde:	88 e7       	ldi	r24, 0x78	; 120
 ce0:	90 e0       	ldi	r25, 0x00	; 0
 ce2:	02 c0       	rjmp	.+4      	; 0xce8 <vfprintf+0x334>
 ce4:	88 e5       	ldi	r24, 0x58	; 88
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	b7 01       	movw	r22, r14
 cea:	0c c0       	rjmp	.+24     	; 0xd04 <vfprintf+0x350>
 cec:	83 2f       	mov	r24, r19
 cee:	86 78       	andi	r24, 0x86	; 134
 cf0:	59 f0       	breq	.+22     	; 0xd08 <vfprintf+0x354>
 cf2:	31 ff       	sbrs	r19, 1
 cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0x346>
 cf6:	8b e2       	ldi	r24, 0x2B	; 43
 cf8:	01 c0       	rjmp	.+2      	; 0xcfc <vfprintf+0x348>
 cfa:	80 e2       	ldi	r24, 0x20	; 32
 cfc:	37 fd       	sbrc	r19, 7
 cfe:	8d e2       	ldi	r24, 0x2D	; 45
 d00:	b7 01       	movw	r22, r14
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 d08:	a5 14       	cp	r10, r5
 d0a:	38 f4       	brcc	.+14     	; 0xd1a <vfprintf+0x366>
 d0c:	b7 01       	movw	r22, r14
 d0e:	80 e3       	ldi	r24, 0x30	; 48
 d10:	90 e0       	ldi	r25, 0x00	; 0
 d12:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 d16:	5a 94       	dec	r5
 d18:	f7 cf       	rjmp	.-18     	; 0xd08 <vfprintf+0x354>
 d1a:	aa 94       	dec	r10
 d1c:	f4 01       	movw	r30, r8
 d1e:	ea 0d       	add	r30, r10
 d20:	f1 1d       	adc	r31, r1
 d22:	80 81       	ld	r24, Z
 d24:	b7 01       	movw	r22, r14
 d26:	90 e0       	ldi	r25, 0x00	; 0
 d28:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 d2c:	a1 10       	cpse	r10, r1
 d2e:	f5 cf       	rjmp	.-22     	; 0xd1a <vfprintf+0x366>
 d30:	33 20       	and	r3, r3
 d32:	09 f4       	brne	.+2      	; 0xd36 <vfprintf+0x382>
 d34:	51 ce       	rjmp	.-862    	; 0x9d8 <vfprintf+0x24>
 d36:	b7 01       	movw	r22, r14
 d38:	80 e2       	ldi	r24, 0x20	; 32
 d3a:	90 e0       	ldi	r25, 0x00	; 0
 d3c:	0e 94 c2 06 	call	0xd84	; 0xd84 <fputc>
 d40:	3a 94       	dec	r3
 d42:	f6 cf       	rjmp	.-20     	; 0xd30 <vfprintf+0x37c>
 d44:	f7 01       	movw	r30, r14
 d46:	86 81       	ldd	r24, Z+6	; 0x06
 d48:	97 81       	ldd	r25, Z+7	; 0x07
 d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x39c>
 d4c:	8f ef       	ldi	r24, 0xFF	; 255
 d4e:	9f ef       	ldi	r25, 0xFF	; 255
 d50:	2c 96       	adiw	r28, 0x0c	; 12
 d52:	e2 e1       	ldi	r30, 0x12	; 18
 d54:	0c 94 74 07 	jmp	0xee8	; 0xee8 <__epilogue_restores__>

00000d58 <strnlen_P>:
 d58:	fc 01       	movw	r30, r24
 d5a:	05 90       	lpm	r0, Z+
 d5c:	61 50       	subi	r22, 0x01	; 1
 d5e:	70 40       	sbci	r23, 0x00	; 0
 d60:	01 10       	cpse	r0, r1
 d62:	d8 f7       	brcc	.-10     	; 0xd5a <strnlen_P+0x2>
 d64:	80 95       	com	r24
 d66:	90 95       	com	r25
 d68:	8e 0f       	add	r24, r30
 d6a:	9f 1f       	adc	r25, r31
 d6c:	08 95       	ret

00000d6e <strnlen>:
 d6e:	fc 01       	movw	r30, r24
 d70:	61 50       	subi	r22, 0x01	; 1
 d72:	70 40       	sbci	r23, 0x00	; 0
 d74:	01 90       	ld	r0, Z+
 d76:	01 10       	cpse	r0, r1
 d78:	d8 f7       	brcc	.-10     	; 0xd70 <strnlen+0x2>
 d7a:	80 95       	com	r24
 d7c:	90 95       	com	r25
 d7e:	8e 0f       	add	r24, r30
 d80:	9f 1f       	adc	r25, r31
 d82:	08 95       	ret

00000d84 <fputc>:
 d84:	0f 93       	push	r16
 d86:	1f 93       	push	r17
 d88:	cf 93       	push	r28
 d8a:	df 93       	push	r29
 d8c:	fb 01       	movw	r30, r22
 d8e:	23 81       	ldd	r18, Z+3	; 0x03
 d90:	21 fd       	sbrc	r18, 1
 d92:	03 c0       	rjmp	.+6      	; 0xd9a <fputc+0x16>
 d94:	8f ef       	ldi	r24, 0xFF	; 255
 d96:	9f ef       	ldi	r25, 0xFF	; 255
 d98:	28 c0       	rjmp	.+80     	; 0xdea <fputc+0x66>
 d9a:	22 ff       	sbrs	r18, 2
 d9c:	16 c0       	rjmp	.+44     	; 0xdca <fputc+0x46>
 d9e:	46 81       	ldd	r20, Z+6	; 0x06
 da0:	57 81       	ldd	r21, Z+7	; 0x07
 da2:	24 81       	ldd	r18, Z+4	; 0x04
 da4:	35 81       	ldd	r19, Z+5	; 0x05
 da6:	42 17       	cp	r20, r18
 da8:	53 07       	cpc	r21, r19
 daa:	44 f4       	brge	.+16     	; 0xdbc <fputc+0x38>
 dac:	a0 81       	ld	r26, Z
 dae:	b1 81       	ldd	r27, Z+1	; 0x01
 db0:	9d 01       	movw	r18, r26
 db2:	2f 5f       	subi	r18, 0xFF	; 255
 db4:	3f 4f       	sbci	r19, 0xFF	; 255
 db6:	31 83       	std	Z+1, r19	; 0x01
 db8:	20 83       	st	Z, r18
 dba:	8c 93       	st	X, r24
 dbc:	26 81       	ldd	r18, Z+6	; 0x06
 dbe:	37 81       	ldd	r19, Z+7	; 0x07
 dc0:	2f 5f       	subi	r18, 0xFF	; 255
 dc2:	3f 4f       	sbci	r19, 0xFF	; 255
 dc4:	37 83       	std	Z+7, r19	; 0x07
 dc6:	26 83       	std	Z+6, r18	; 0x06
 dc8:	10 c0       	rjmp	.+32     	; 0xdea <fputc+0x66>
 dca:	eb 01       	movw	r28, r22
 dcc:	09 2f       	mov	r16, r25
 dce:	18 2f       	mov	r17, r24
 dd0:	00 84       	ldd	r0, Z+8	; 0x08
 dd2:	f1 85       	ldd	r31, Z+9	; 0x09
 dd4:	e0 2d       	mov	r30, r0
 dd6:	09 95       	icall
 dd8:	89 2b       	or	r24, r25
 dda:	e1 f6       	brne	.-72     	; 0xd94 <fputc+0x10>
 ddc:	8e 81       	ldd	r24, Y+6	; 0x06
 dde:	9f 81       	ldd	r25, Y+7	; 0x07
 de0:	01 96       	adiw	r24, 0x01	; 1
 de2:	9f 83       	std	Y+7, r25	; 0x07
 de4:	8e 83       	std	Y+6, r24	; 0x06
 de6:	81 2f       	mov	r24, r17
 de8:	90 2f       	mov	r25, r16
 dea:	df 91       	pop	r29
 dec:	cf 91       	pop	r28
 dee:	1f 91       	pop	r17
 df0:	0f 91       	pop	r16
 df2:	08 95       	ret

00000df4 <__ultoa_invert>:
 df4:	fa 01       	movw	r30, r20
 df6:	aa 27       	eor	r26, r26
 df8:	28 30       	cpi	r18, 0x08	; 8
 dfa:	51 f1       	breq	.+84     	; 0xe50 <__ultoa_invert+0x5c>
 dfc:	20 31       	cpi	r18, 0x10	; 16
 dfe:	81 f1       	breq	.+96     	; 0xe60 <__ultoa_invert+0x6c>
 e00:	e8 94       	clt
 e02:	6f 93       	push	r22
 e04:	6e 7f       	andi	r22, 0xFE	; 254
 e06:	6e 5f       	subi	r22, 0xFE	; 254
 e08:	7f 4f       	sbci	r23, 0xFF	; 255
 e0a:	8f 4f       	sbci	r24, 0xFF	; 255
 e0c:	9f 4f       	sbci	r25, 0xFF	; 255
 e0e:	af 4f       	sbci	r26, 0xFF	; 255
 e10:	b1 e0       	ldi	r27, 0x01	; 1
 e12:	3e d0       	rcall	.+124    	; 0xe90 <__ultoa_invert+0x9c>
 e14:	b4 e0       	ldi	r27, 0x04	; 4
 e16:	3c d0       	rcall	.+120    	; 0xe90 <__ultoa_invert+0x9c>
 e18:	67 0f       	add	r22, r23
 e1a:	78 1f       	adc	r23, r24
 e1c:	89 1f       	adc	r24, r25
 e1e:	9a 1f       	adc	r25, r26
 e20:	a1 1d       	adc	r26, r1
 e22:	68 0f       	add	r22, r24
 e24:	79 1f       	adc	r23, r25
 e26:	8a 1f       	adc	r24, r26
 e28:	91 1d       	adc	r25, r1
 e2a:	a1 1d       	adc	r26, r1
 e2c:	6a 0f       	add	r22, r26
 e2e:	71 1d       	adc	r23, r1
 e30:	81 1d       	adc	r24, r1
 e32:	91 1d       	adc	r25, r1
 e34:	a1 1d       	adc	r26, r1
 e36:	20 d0       	rcall	.+64     	; 0xe78 <__ultoa_invert+0x84>
 e38:	09 f4       	brne	.+2      	; 0xe3c <__ultoa_invert+0x48>
 e3a:	68 94       	set
 e3c:	3f 91       	pop	r19
 e3e:	2a e0       	ldi	r18, 0x0A	; 10
 e40:	26 9f       	mul	r18, r22
 e42:	11 24       	eor	r1, r1
 e44:	30 19       	sub	r19, r0
 e46:	30 5d       	subi	r19, 0xD0	; 208
 e48:	31 93       	st	Z+, r19
 e4a:	de f6       	brtc	.-74     	; 0xe02 <__ultoa_invert+0xe>
 e4c:	cf 01       	movw	r24, r30
 e4e:	08 95       	ret
 e50:	46 2f       	mov	r20, r22
 e52:	47 70       	andi	r20, 0x07	; 7
 e54:	40 5d       	subi	r20, 0xD0	; 208
 e56:	41 93       	st	Z+, r20
 e58:	b3 e0       	ldi	r27, 0x03	; 3
 e5a:	0f d0       	rcall	.+30     	; 0xe7a <__ultoa_invert+0x86>
 e5c:	c9 f7       	brne	.-14     	; 0xe50 <__ultoa_invert+0x5c>
 e5e:	f6 cf       	rjmp	.-20     	; 0xe4c <__ultoa_invert+0x58>
 e60:	46 2f       	mov	r20, r22
 e62:	4f 70       	andi	r20, 0x0F	; 15
 e64:	40 5d       	subi	r20, 0xD0	; 208
 e66:	4a 33       	cpi	r20, 0x3A	; 58
 e68:	18 f0       	brcs	.+6      	; 0xe70 <__ultoa_invert+0x7c>
 e6a:	49 5d       	subi	r20, 0xD9	; 217
 e6c:	31 fd       	sbrc	r19, 1
 e6e:	40 52       	subi	r20, 0x20	; 32
 e70:	41 93       	st	Z+, r20
 e72:	02 d0       	rcall	.+4      	; 0xe78 <__ultoa_invert+0x84>
 e74:	a9 f7       	brne	.-22     	; 0xe60 <__ultoa_invert+0x6c>
 e76:	ea cf       	rjmp	.-44     	; 0xe4c <__ultoa_invert+0x58>
 e78:	b4 e0       	ldi	r27, 0x04	; 4
 e7a:	a6 95       	lsr	r26
 e7c:	97 95       	ror	r25
 e7e:	87 95       	ror	r24
 e80:	77 95       	ror	r23
 e82:	67 95       	ror	r22
 e84:	ba 95       	dec	r27
 e86:	c9 f7       	brne	.-14     	; 0xe7a <__ultoa_invert+0x86>
 e88:	00 97       	sbiw	r24, 0x00	; 0
 e8a:	61 05       	cpc	r22, r1
 e8c:	71 05       	cpc	r23, r1
 e8e:	08 95       	ret
 e90:	9b 01       	movw	r18, r22
 e92:	ac 01       	movw	r20, r24
 e94:	0a 2e       	mov	r0, r26
 e96:	06 94       	lsr	r0
 e98:	57 95       	ror	r21
 e9a:	47 95       	ror	r20
 e9c:	37 95       	ror	r19
 e9e:	27 95       	ror	r18
 ea0:	ba 95       	dec	r27
 ea2:	c9 f7       	brne	.-14     	; 0xe96 <__ultoa_invert+0xa2>
 ea4:	62 0f       	add	r22, r18
 ea6:	73 1f       	adc	r23, r19
 ea8:	84 1f       	adc	r24, r20
 eaa:	95 1f       	adc	r25, r21
 eac:	a0 1d       	adc	r26, r0
 eae:	08 95       	ret

00000eb0 <__prologue_saves__>:
 eb0:	2f 92       	push	r2
 eb2:	3f 92       	push	r3
 eb4:	4f 92       	push	r4
 eb6:	5f 92       	push	r5
 eb8:	6f 92       	push	r6
 eba:	7f 92       	push	r7
 ebc:	8f 92       	push	r8
 ebe:	9f 92       	push	r9
 ec0:	af 92       	push	r10
 ec2:	bf 92       	push	r11
 ec4:	cf 92       	push	r12
 ec6:	df 92       	push	r13
 ec8:	ef 92       	push	r14
 eca:	ff 92       	push	r15
 ecc:	0f 93       	push	r16
 ece:	1f 93       	push	r17
 ed0:	cf 93       	push	r28
 ed2:	df 93       	push	r29
 ed4:	cd b7       	in	r28, 0x3d	; 61
 ed6:	de b7       	in	r29, 0x3e	; 62
 ed8:	ca 1b       	sub	r28, r26
 eda:	db 0b       	sbc	r29, r27
 edc:	0f b6       	in	r0, 0x3f	; 63
 ede:	f8 94       	cli
 ee0:	de bf       	out	0x3e, r29	; 62
 ee2:	0f be       	out	0x3f, r0	; 63
 ee4:	cd bf       	out	0x3d, r28	; 61
 ee6:	09 94       	ijmp

00000ee8 <__epilogue_restores__>:
 ee8:	2a 88       	ldd	r2, Y+18	; 0x12
 eea:	39 88       	ldd	r3, Y+17	; 0x11
 eec:	48 88       	ldd	r4, Y+16	; 0x10
 eee:	5f 84       	ldd	r5, Y+15	; 0x0f
 ef0:	6e 84       	ldd	r6, Y+14	; 0x0e
 ef2:	7d 84       	ldd	r7, Y+13	; 0x0d
 ef4:	8c 84       	ldd	r8, Y+12	; 0x0c
 ef6:	9b 84       	ldd	r9, Y+11	; 0x0b
 ef8:	aa 84       	ldd	r10, Y+10	; 0x0a
 efa:	b9 84       	ldd	r11, Y+9	; 0x09
 efc:	c8 84       	ldd	r12, Y+8	; 0x08
 efe:	df 80       	ldd	r13, Y+7	; 0x07
 f00:	ee 80       	ldd	r14, Y+6	; 0x06
 f02:	fd 80       	ldd	r15, Y+5	; 0x05
 f04:	0c 81       	ldd	r16, Y+4	; 0x04
 f06:	1b 81       	ldd	r17, Y+3	; 0x03
 f08:	aa 81       	ldd	r26, Y+2	; 0x02
 f0a:	b9 81       	ldd	r27, Y+1	; 0x01
 f0c:	ce 0f       	add	r28, r30
 f0e:	d1 1d       	adc	r29, r1
 f10:	0f b6       	in	r0, 0x3f	; 63
 f12:	f8 94       	cli
 f14:	de bf       	out	0x3e, r29	; 62
 f16:	0f be       	out	0x3f, r0	; 63
 f18:	cd bf       	out	0x3d, r28	; 61
 f1a:	ed 01       	movw	r28, r26
 f1c:	08 95       	ret

00000f1e <_exit>:
 f1e:	f8 94       	cli

00000f20 <__stop_program>:
 f20:	ff cf       	rjmp	.-2      	; 0xf20 <__stop_program>
