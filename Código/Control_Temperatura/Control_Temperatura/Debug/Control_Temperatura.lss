
Control_Temperatura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  00000fca  0000105e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800154  00800154  000010b2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010b2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001110  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001651  00000000  00000000  00001390  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085f  00000000  00000000  000029e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e4f  00000000  00000000  00003240  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000590  00000000  00000000  00004090  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000651  00000000  00000000  00004620  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012d2  00000000  00000000  00004c71  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00005f43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 c0 02 	jmp	0x580	; 0x580 <__vector_14>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

00000068 <LcdCustomChar>:
  68:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  78:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  88:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  98:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d8 e0       	ldi	r29, 0x08	; 8
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	ea ec       	ldi	r30, 0xCA	; 202
  bc:	ff e0       	ldi	r31, 0x0F	; 15
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a4 35       	cpi	r26, 0x54	; 84
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	a4 e5       	ldi	r26, 0x54	; 84
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	af 35       	cpi	r26, 0x5F	; 95
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 ad 02 	call	0x55a	; 0x55a <main>
  de:	0c 94 e3 07 	jmp	0xfc6	; 0xfc6 <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <set_puertos>:

#include "avr/io.h"

void set_puertos()
{
	DDRD = 0x03;
  e6:	83 e0       	ldi	r24, 0x03	; 3
  e8:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
  ea:	1b b8       	out	0x0b, r1	; 11
  ec:	08 95       	ret

000000ee <encender_estufa>:
}

void encender_estufa()
{
	PORTD = 0x01;
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	08 95       	ret

000000f4 <apagar_estufa>:
}

void apagar_estufa()
{
	PORTD = PORTD & 0xfe;
  f4:	58 98       	cbi	0x0b, 0	; 11
  f6:	08 95       	ret

000000f8 <encender_ventilador>:
}

void encender_ventilador()
{
	PORTD = 0x02;
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	8b b9       	out	0x0b, r24	; 11
  fc:	08 95       	ret

000000fe <apagar_ventilador>:
}

void apagar_ventilador()
{
	PORTD = PORTD & 0xfd;
  fe:	59 98       	cbi	0x0b, 1	; 11
 100:	08 95       	ret

00000102 <ADC_preInit>:
void ADC_preInit(void){
	ADCSRA=0;
	ADMUX= 0x00;
}
void ADC_set_ADC0_input_analog(void){
	DIDR0= 0x01;
 102:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 106:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 10a:	08 95       	ret

0000010c <ADC_enabled>:
}
void ADC_enabled(void){
	ADCSRA|=(1<<ADEN);
 10c:	ea e7       	ldi	r30, 0x7A	; 122
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	80 68       	ori	r24, 0x80	; 128
 114:	80 83       	st	Z, r24
 116:	08 95       	ret

00000118 <ADC_preescaler>:
	
}

void ADC_preescaler(int prescaler){
	switch (prescaler)
 118:	80 31       	cpi	r24, 0x10	; 16
 11a:	91 05       	cpc	r25, r1
 11c:	29 f1       	breq	.+74     	; 0x168 <ADC_preescaler+0x50>
 11e:	4c f4       	brge	.+18     	; 0x132 <ADC_preescaler+0x1a>
 120:	84 30       	cpi	r24, 0x04	; 4
 122:	91 05       	cpc	r25, r1
 124:	a9 f0       	breq	.+42     	; 0x150 <ADC_preescaler+0x38>
 126:	88 30       	cpi	r24, 0x08	; 8
 128:	91 05       	cpc	r25, r1
 12a:	c1 f0       	breq	.+48     	; 0x15c <ADC_preescaler+0x44>
 12c:	02 97       	sbiw	r24, 0x02	; 2
 12e:	a1 f5       	brne	.+104    	; 0x198 <ADC_preescaler+0x80>
 130:	09 c0       	rjmp	.+18     	; 0x144 <ADC_preescaler+0x2c>
 132:	80 34       	cpi	r24, 0x40	; 64
 134:	91 05       	cpc	r25, r1
 136:	21 f1       	breq	.+72     	; 0x180 <ADC_preescaler+0x68>
 138:	80 38       	cpi	r24, 0x80	; 128
 13a:	91 05       	cpc	r25, r1
 13c:	39 f1       	breq	.+78     	; 0x18c <ADC_preescaler+0x74>
 13e:	80 97       	sbiw	r24, 0x20	; 32
 140:	59 f5       	brne	.+86     	; 0x198 <ADC_preescaler+0x80>
 142:	18 c0       	rjmp	.+48     	; 0x174 <ADC_preescaler+0x5c>
	{
		case 2:ADCSRA|=0b00000001;
 144:	ea e7       	ldi	r30, 0x7A	; 122
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	81 60       	ori	r24, 0x01	; 1
 14c:	80 83       	st	Z, r24
		break;
 14e:	08 95       	ret
		case 4:ADCSRA|=0b00000010;
 150:	ea e7       	ldi	r30, 0x7A	; 122
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	82 60       	ori	r24, 0x02	; 2
 158:	80 83       	st	Z, r24
		break;
 15a:	08 95       	ret
		case 8:ADCSRA|=0b00000011;
 15c:	ea e7       	ldi	r30, 0x7A	; 122
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	83 60       	ori	r24, 0x03	; 3
 164:	80 83       	st	Z, r24
		break;
 166:	08 95       	ret
		case 16:ADCSRA|=0b00000100;
 168:	ea e7       	ldi	r30, 0x7A	; 122
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	84 60       	ori	r24, 0x04	; 4
 170:	80 83       	st	Z, r24
		break;
 172:	08 95       	ret
		case 32:ADCSRA|=0b00000101;
 174:	ea e7       	ldi	r30, 0x7A	; 122
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	85 60       	ori	r24, 0x05	; 5
 17c:	80 83       	st	Z, r24
		break;
 17e:	08 95       	ret
		case 64:ADCSRA|=0b00000110;
 180:	ea e7       	ldi	r30, 0x7A	; 122
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	80 81       	ld	r24, Z
 186:	86 60       	ori	r24, 0x06	; 6
 188:	80 83       	st	Z, r24
		break;
 18a:	08 95       	ret
		case 128:ADCSRA|=0b00000111;
 18c:	ea e7       	ldi	r30, 0x7A	; 122
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	87 60       	ori	r24, 0x07	; 7
 194:	80 83       	st	Z, r24
		break;
 196:	08 95       	ret
		default:ADCSRA|=0b00000000;
 198:	ea e7       	ldi	r30, 0x7A	; 122
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	80 83       	st	Z, r24
 1a0:	08 95       	ret

000001a2 <ADC_select_pin>:
		break;
	}
}

void ADC_select_pin(int pin){
	ADMUX|= pin;
 1a2:	ec e7       	ldi	r30, 0x7C	; 124
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	90 81       	ld	r25, Z
 1a8:	89 2b       	or	r24, r25
 1aa:	80 83       	st	Z, r24
 1ac:	08 95       	ret

000001ae <ADC_init>:
	
}
//fin de funciones para el init
void ADC_init(int prescaler, int pin){
 1ae:	0f 93       	push	r16
 1b0:	1f 93       	push	r17
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	8c 01       	movw	r16, r24
 1b8:	eb 01       	movw	r28, r22
	ADC_preInit();
 1ba:	0e 94 81 00 	call	0x102	; 0x102 <ADC_preInit>
void ADC_preInit(void){
	ADCSRA=0;
	ADMUX= 0x00;
}
void ADC_set_ADC0_input_analog(void){
	DIDR0= 0x01;
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
}
//fin de funciones para el init
void ADC_init(int prescaler, int pin){
	ADC_preInit();
	ADC_set_ADC0_input_analog();
	ADC_enabled();
 1c4:	0e 94 86 00 	call	0x10c	; 0x10c <ADC_enabled>
	ADC_preescaler(prescaler);
 1c8:	c8 01       	movw	r24, r16
 1ca:	0e 94 8c 00 	call	0x118	; 0x118 <ADC_preescaler>
	ADC_select_pin(pin);
 1ce:	ce 01       	movw	r24, r28
 1d0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <ADC_select_pin>
}
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	08 95       	ret

000001de <ADC_Start>:
//funciones para operar el ADC
void ADC_Start(void){
	  ADCSRA |= (1<<ADSC);//start conversion
 1de:	ea e7       	ldi	r30, 0x7A	; 122
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	80 64       	ori	r24, 0x40	; 64
 1e6:	80 83       	st	Z, r24
 1e8:	08 95       	ret

000001ea <ADC_conversion_completed>:
}

int ADC_conversion_completed(void){	
	return (ADCSRA&(1<<ADIF))==0; //devuelve 1 si la conversion esta completada
 1ea:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 1ee:	82 95       	swap	r24
 1f0:	8f 70       	andi	r24, 0x0F	; 15
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	89 27       	eor	r24, r25
}
 1f6:	81 70       	andi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	08 95       	ret

000001fc <ADC_flag_reset>:

void ADC_flag_reset(void){
	ADCSRA |= (1<<ADIF); //borrar flag
 1fc:	ea e7       	ldi	r30, 0x7A	; 122
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	80 61       	ori	r24, 0x10	; 16
 204:	80 83       	st	Z, r24
 206:	08 95       	ret

00000208 <ADC_get_voltaje_entero>:
	/**
	int resultado=ADCL;
	int basura=ADCH;  // esta linea no sirve para nada pero si lo quito se rompe todo el programa, ya que se tiene que leer la parte alta si o si, sino no funciona
	return  resultado;//give the high byte
	**/
	return ADC*5000.0/1024.0;
 208:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 20c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	0e 94 bf 03 	call	0x77e	; 0x77e <__floatunsisf>
 218:	20 e0       	ldi	r18, 0x00	; 0
 21a:	30 e4       	ldi	r19, 0x40	; 64
 21c:	4c e9       	ldi	r20, 0x9C	; 156
 21e:	55 e4       	ldi	r21, 0x45	; 69
 220:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	40 e8       	ldi	r20, 0x80	; 128
 22a:	5a e3       	ldi	r21, 0x3A	; 58
 22c:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
 230:	0e 94 89 03 	call	0x712	; 0x712 <__fixsfsi>
}
 234:	cb 01       	movw	r24, r22
 236:	08 95       	ret

00000238 <set_temperatura_display_int>:
	int enter = (int)temperatura;
	
	sprintf(linea_inferior, "TEMP: %d.%d C              ", enter,fracc);
	
	
}
 238:	6a e0       	ldi	r22, 0x0A	; 10
 23a:	70 e0       	ldi	r23, 0x00	; 0
 23c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__divmodhi4>
 240:	9f 93       	push	r25
 242:	8f 93       	push	r24
 244:	7f 93       	push	r23
 246:	6f 93       	push	r22
 248:	88 e3       	ldi	r24, 0x38	; 56
 24a:	91 e0       	ldi	r25, 0x01	; 1
 24c:	9f 93       	push	r25
 24e:	8f 93       	push	r24
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	9f 93       	push	r25
 256:	8f 93       	push	r24
 258:	0e 94 0b 05 	call	0xa16	; 0xa16 <sprintf>
 25c:	8d b7       	in	r24, 0x3d	; 61
 25e:	9e b7       	in	r25, 0x3e	; 62
 260:	08 96       	adiw	r24, 0x08	; 8
 262:	0f b6       	in	r0, 0x3f	; 63
 264:	f8 94       	cli
 266:	9e bf       	out	0x3e, r25	; 62
 268:	0f be       	out	0x3f, r0	; 63
 26a:	8d bf       	out	0x3d, r24	; 61
 26c:	08 95       	ret

0000026e <regular_temperatura>:
 26e:	cf 92       	push	r12
 270:	df 92       	push	r13
 272:	ef 92       	push	r14
 274:	ff 92       	push	r15
 276:	0e 94 02 03 	call	0x604	; 0x604 <TERMOMETRO_get_temperatura_entero>
 27a:	7c 01       	movw	r14, r24
 27c:	bc 01       	movw	r22, r24
 27e:	99 0f       	add	r25, r25
 280:	88 0b       	sbc	r24, r24
 282:	99 0b       	sbc	r25, r25
 284:	0e 94 c1 03 	call	0x782	; 0x782 <__floatsisf>
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	40 e2       	ldi	r20, 0x20	; 32
 28e:	51 e4       	ldi	r21, 0x41	; 65
 290:	0e 94 17 03 	call	0x62e	; 0x62e <__divsf3>
 294:	60 93 57 01 	sts	0x0157, r22	; 0x800157 <temp>
 298:	70 93 58 01 	sts	0x0158, r23	; 0x800158 <temp+0x1>
 29c:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <temp+0x2>
 2a0:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <temp+0x3>
 2a4:	f8 94       	cli
 2a6:	c7 01       	movw	r24, r14
 2a8:	0e 94 1c 01 	call	0x238	; 0x238 <set_temperatura_display_int>
 2ac:	78 94       	sei
 2ae:	c0 90 57 01 	lds	r12, 0x0157	; 0x800157 <temp>
 2b2:	d0 90 58 01 	lds	r13, 0x0158	; 0x800158 <temp+0x1>
 2b6:	e0 90 59 01 	lds	r14, 0x0159	; 0x800159 <temp+0x2>
 2ba:	f0 90 5a 01 	lds	r15, 0x015A	; 0x80015a <temp+0x3>
 2be:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <limite_inferior>
 2c2:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <limite_inferior+0x1>
 2c6:	bc 01       	movw	r22, r24
 2c8:	99 0f       	add	r25, r25
 2ca:	88 0b       	sbc	r24, r24
 2cc:	99 0b       	sbc	r25, r25
 2ce:	0e 94 c1 03 	call	0x782	; 0x782 <__floatsisf>
 2d2:	a7 01       	movw	r20, r14
 2d4:	96 01       	movw	r18, r12
 2d6:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__gesf2>
 2da:	88 23       	and	r24, r24
 2dc:	2c f0       	brlt	.+10     	; 0x2e8 <regular_temperatura+0x7a>
 2de:	0e 94 77 00 	call	0xee	; 0xee <encender_estufa>
 2e2:	0e 94 7f 00 	call	0xfe	; 0xfe <apagar_ventilador>
 2e6:	1b c0       	rjmp	.+54     	; 0x31e <regular_temperatura+0xb0>
 2e8:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <limite_superior>
 2ec:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <limite_superior+0x1>
 2f0:	bc 01       	movw	r22, r24
 2f2:	99 0f       	add	r25, r25
 2f4:	88 0b       	sbc	r24, r24
 2f6:	99 0b       	sbc	r25, r25
 2f8:	0e 94 c1 03 	call	0x782	; 0x782 <__floatsisf>
 2fc:	9b 01       	movw	r18, r22
 2fe:	ac 01       	movw	r20, r24
 300:	c7 01       	movw	r24, r14
 302:	b6 01       	movw	r22, r12
 304:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__gesf2>
 308:	88 23       	and	r24, r24
 30a:	2c f0       	brlt	.+10     	; 0x316 <regular_temperatura+0xa8>
 30c:	0e 94 7c 00 	call	0xf8	; 0xf8 <encender_ventilador>
 310:	0e 94 7a 00 	call	0xf4	; 0xf4 <apagar_estufa>
 314:	04 c0       	rjmp	.+8      	; 0x31e <regular_temperatura+0xb0>
 316:	0e 94 7f 00 	call	0xfe	; 0xfe <apagar_ventilador>
 31a:	0e 94 7a 00 	call	0xf4	; 0xf4 <apagar_estufa>
 31e:	ff 90       	pop	r15
 320:	ef 90       	pop	r14
 322:	df 90       	pop	r13
 324:	cf 90       	pop	r12
 326:	08 95       	ret

00000328 <set_renglones_display>:
void set_renglones_display()
{
	actualizarVarInferior(linea_inferior);
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	0e 94 9d 01 	call	0x33a	; 0x33a <actualizarVarInferior>
	actualizarVarSuperior(linea_superior);
 330:	81 e2       	ldi	r24, 0x21	; 33
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	0e 94 a2 01 	call	0x344	; 0x344 <actualizarVarSuperior>
 338:	08 95       	ret

0000033a <actualizarVarInferior>:
	uint8_t i;
	LCDGotoXY(x,y);
	for(i=0;i<size;i++){
		LCDsendChar(dato[i]);
	}
}
 33a:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <datoInferior+0x1>
 33e:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <datoInferior>
 342:	08 95       	ret

00000344 <actualizarVarSuperior>:
 344:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <datoSuperior+0x1>
 348:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <datoSuperior>
 34c:	08 95       	ret

0000034e <mostrarArriba>:
void mostrarArriba()
{ //recibe el string, la posición a ser mostrado y la longitud del string
 34e:	cf 93       	push	r28
	uint8_t i;
	LCDGotoXY(0,0);
 350:	60 e0       	ldi	r22, 0x00	; 0
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	0e 94 26 02 	call	0x44c	; 0x44c <LCDGotoXY>
	for(i=0;i<x;i++){
 358:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 35c:	88 23       	and	r24, r24
 35e:	79 f0       	breq	.+30     	; 0x37e <mostrarArriba+0x30>
 360:	c0 e0       	ldi	r28, 0x00	; 0
		LCDsendChar(datoSuperior[i]);
 362:	e0 91 5b 01 	lds	r30, 0x015B	; 0x80015b <datoSuperior>
 366:	f0 91 5c 01 	lds	r31, 0x015C	; 0x80015c <datoSuperior+0x1>
 36a:	ec 0f       	add	r30, r28
 36c:	f1 1d       	adc	r31, r1
 36e:	80 81       	ld	r24, Z
 370:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LCDsendChar>
}
void mostrarArriba()
{ //recibe el string, la posición a ser mostrado y la longitud del string
	uint8_t i;
	LCDGotoXY(0,0);
	for(i=0;i<x;i++){
 374:	cf 5f       	subi	r28, 0xFF	; 255
 376:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 37a:	c8 17       	cp	r28, r24
 37c:	90 f3       	brcs	.-28     	; 0x362 <mostrarArriba+0x14>
		LCDsendChar(datoSuperior[i]);
	}
}
 37e:	cf 91       	pop	r28
 380:	08 95       	ret

00000382 <mostrarAbajo>:
void mostrarAbajo()
{ //recibe el string, la posición a ser mostrado y la longitud del string
 382:	cf 93       	push	r28
	uint8_t i;
	LCDGotoXY(0,1);
 384:	61 e0       	ldi	r22, 0x01	; 1
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	0e 94 26 02 	call	0x44c	; 0x44c <LCDGotoXY>
	for(i=0;i<x;i++){
 38c:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 390:	88 23       	and	r24, r24
 392:	79 f0       	breq	.+30     	; 0x3b2 <mostrarAbajo+0x30>
 394:	c0 e0       	ldi	r28, 0x00	; 0
		LCDsendChar(datoInferior[i]);
 396:	e0 91 5d 01 	lds	r30, 0x015D	; 0x80015d <datoInferior>
 39a:	f0 91 5e 01 	lds	r31, 0x015E	; 0x80015e <datoInferior+0x1>
 39e:	ec 0f       	add	r30, r28
 3a0:	f1 1d       	adc	r31, r1
 3a2:	80 81       	ld	r24, Z
 3a4:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LCDsendChar>
}
void mostrarAbajo()
{ //recibe el string, la posición a ser mostrado y la longitud del string
	uint8_t i;
	LCDGotoXY(0,1);
	for(i=0;i<x;i++){
 3a8:	cf 5f       	subi	r28, 0xFF	; 255
 3aa:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <x>
 3ae:	c8 17       	cp	r28, r24
 3b0:	90 f3       	brcs	.-28     	; 0x396 <mostrarAbajo+0x14>
		LCDsendChar(datoInferior[i]);
	}
}
 3b2:	cf 91       	pop	r28
 3b4:	08 95       	ret

000003b6 <mostrar>:
void mostrar() //método que llamaría en la interrupción
{
	mostrarArriba();
 3b6:	0e 94 a7 01 	call	0x34e	; 0x34e <mostrarArriba>
	mostrarAbajo();
 3ba:	0e 94 c1 01 	call	0x382	; 0x382 <mostrarAbajo>
 3be:	08 95       	ret

000003c0 <LCDsendChar>:
	LCDGotoXY(x,y);
	for(i=0;i<(uint8_t)pgm_read_byte(&FlashLoc[i]);i++)
	{
		LCDsendChar((uint8_t)pgm_read_byte(&FlashLoc[i]));
	}
}
 3c0:	98 2f       	mov	r25, r24
 3c2:	90 7f       	andi	r25, 0xF0	; 240
 3c4:	95 b9       	out	0x05, r25	; 5
 3c6:	28 9a       	sbi	0x05, 0	; 5
 3c8:	2a 9a       	sbi	0x05, 2	; 5
 3ca:	2a e6       	ldi	r18, 0x6A	; 106
 3cc:	2a 95       	dec	r18
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <LCDsendChar+0xc>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <LCDsendChar+0x12>
 3d2:	2a 98       	cbi	0x05, 2	; 5
 3d4:	28 98       	cbi	0x05, 0	; 5
 3d6:	9a e6       	ldi	r25, 0x6A	; 106
 3d8:	9a 95       	dec	r25
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <LCDsendChar+0x18>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <LCDsendChar+0x1e>
 3de:	20 e1       	ldi	r18, 0x10	; 16
 3e0:	82 9f       	mul	r24, r18
 3e2:	c0 01       	movw	r24, r0
 3e4:	11 24       	eor	r1, r1
 3e6:	85 b9       	out	0x05, r24	; 5
 3e8:	28 9a       	sbi	0x05, 0	; 5
 3ea:	2a 9a       	sbi	0x05, 2	; 5
 3ec:	8a e6       	ldi	r24, 0x6A	; 106
 3ee:	8a 95       	dec	r24
 3f0:	f1 f7       	brne	.-4      	; 0x3ee <LCDsendChar+0x2e>
 3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <LCDsendChar+0x34>
 3f4:	2a 98       	cbi	0x05, 2	; 5
 3f6:	28 98       	cbi	0x05, 0	; 5
 3f8:	9a e6       	ldi	r25, 0x6A	; 106
 3fa:	9a 95       	dec	r25
 3fc:	f1 f7       	brne	.-4      	; 0x3fa <LCDsendChar+0x3a>
 3fe:	00 c0       	rjmp	.+0      	; 0x400 <__FUSE_REGION_LENGTH__>
 400:	08 95       	ret

00000402 <LCDsendCommand>:
 402:	98 2f       	mov	r25, r24
 404:	90 7f       	andi	r25, 0xF0	; 240
 406:	95 b9       	out	0x05, r25	; 5
 408:	2a 9a       	sbi	0x05, 2	; 5
 40a:	ef ec       	ldi	r30, 0xCF	; 207
 40c:	f7 e0       	ldi	r31, 0x07	; 7
 40e:	31 97       	sbiw	r30, 0x01	; 1
 410:	f1 f7       	brne	.-4      	; 0x40e <LCDsendCommand+0xc>
 412:	00 c0       	rjmp	.+0      	; 0x414 <LCDsendCommand+0x12>
 414:	00 00       	nop
 416:	2a 98       	cbi	0x05, 2	; 5
 418:	ef ec       	ldi	r30, 0xCF	; 207
 41a:	f7 e0       	ldi	r31, 0x07	; 7
 41c:	31 97       	sbiw	r30, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <LCDsendCommand+0x1a>
 420:	00 c0       	rjmp	.+0      	; 0x422 <LCDsendCommand+0x20>
 422:	00 00       	nop
 424:	f0 e1       	ldi	r31, 0x10	; 16
 426:	8f 9f       	mul	r24, r31
 428:	c0 01       	movw	r24, r0
 42a:	11 24       	eor	r1, r1
 42c:	85 b9       	out	0x05, r24	; 5
 42e:	2a 9a       	sbi	0x05, 2	; 5
 430:	8f ec       	ldi	r24, 0xCF	; 207
 432:	97 e0       	ldi	r25, 0x07	; 7
 434:	01 97       	sbiw	r24, 0x01	; 1
 436:	f1 f7       	brne	.-4      	; 0x434 <LCDsendCommand+0x32>
 438:	00 c0       	rjmp	.+0      	; 0x43a <LCDsendCommand+0x38>
 43a:	00 00       	nop
 43c:	2a 98       	cbi	0x05, 2	; 5
 43e:	ef ec       	ldi	r30, 0xCF	; 207
 440:	f7 e0       	ldi	r31, 0x07	; 7
 442:	31 97       	sbiw	r30, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <LCDsendCommand+0x40>
 446:	00 c0       	rjmp	.+0      	; 0x448 <LCDsendCommand+0x46>
 448:	00 00       	nop
 44a:	08 95       	ret

0000044c <LCDGotoXY>:
 44c:	62 30       	cpi	r22, 0x02	; 2
 44e:	31 f0       	breq	.+12     	; 0x45c <LCDGotoXY+0x10>
 450:	63 30       	cpi	r22, 0x03	; 3
 452:	31 f0       	breq	.+12     	; 0x460 <LCDGotoXY+0x14>
 454:	61 30       	cpi	r22, 0x01	; 1
 456:	29 f4       	brne	.+10     	; 0x462 <LCDGotoXY+0x16>
 458:	80 5c       	subi	r24, 0xC0	; 192
 45a:	03 c0       	rjmp	.+6      	; 0x462 <LCDGotoXY+0x16>
 45c:	8c 5e       	subi	r24, 0xEC	; 236
 45e:	01 c0       	rjmp	.+2      	; 0x462 <LCDGotoXY+0x16>
 460:	8c 5a       	subi	r24, 0xAC	; 172
 462:	80 68       	ori	r24, 0x80	; 128
 464:	0e 94 01 02 	call	0x402	; 0x402 <LCDsendCommand>
 468:	08 95       	ret

0000046a <LCDdefinechar>:
0b00000000,
0b00000000
};
LCDdefinechar(backslash,0);
*/
void LCDdefinechar(const uint8_t *pc,uint8_t char_code){
 46a:	ff 92       	push	r15
 46c:	0f 93       	push	r16
 46e:	1f 93       	push	r17
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
 474:	66 0f       	add	r22, r22
 476:	66 0f       	add	r22, r22
 478:	66 0f       	add	r22, r22
 47a:	60 64       	ori	r22, 0x40	; 64
 47c:	ec 01       	movw	r28, r24
 47e:	68 94       	set
 480:	ff 24       	eor	r15, r15
 482:	f3 f8       	bld	r15, 3
 484:	f6 0e       	add	r15, r22
	for (i=0; i<8; i++){
		pcc=pgm_read_byte(&pc[i]);
 486:	fe 01       	movw	r30, r28
 488:	04 91       	lpm	r16, Z
		LCDsendCommand(a++);
 48a:	11 e0       	ldi	r17, 0x01	; 1
 48c:	16 0f       	add	r17, r22
 48e:	86 2f       	mov	r24, r22
 490:	0e 94 01 02 	call	0x402	; 0x402 <LCDsendCommand>
		LCDsendChar(pcc);
 494:	80 2f       	mov	r24, r16
 496:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LCDsendChar>
 49a:	21 96       	adiw	r28, 0x01	; 1
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
		pcc=pgm_read_byte(&pc[i]);
		LCDsendCommand(a++);
 49c:	61 2f       	mov	r22, r17
*/
void LCDdefinechar(const uint8_t *pc,uint8_t char_code){
	uint8_t a, pcc;
	uint16_t i;
	a=(char_code<<3)|0x40;
	for (i=0; i<8; i++){
 49e:	1f 11       	cpse	r17, r15
 4a0:	f2 cf       	rjmp	.-28     	; 0x486 <LCDdefinechar+0x1c>
		pcc=pgm_read_byte(&pc[i]);
		LCDsendCommand(a++);
		LCDsendChar(pcc);
		}
}
 4a2:	df 91       	pop	r29
 4a4:	cf 91       	pop	r28
 4a6:	1f 91       	pop	r17
 4a8:	0f 91       	pop	r16
 4aa:	ff 90       	pop	r15
 4ac:	08 95       	ret

000004ae <LCDinit>:
	LCP&=~(1<<LCD_E);
	_delay_ms(1);	
#endif
}
void LCDinit(void)//Initializes LCD
{
 4ae:	1f 93       	push	r17
 4b0:	cf 93       	push	r28
 4b2:	df 93       	push	r29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4b4:	8f e2       	ldi	r24, 0x2F	; 47
 4b6:	95 e7       	ldi	r25, 0x75	; 117
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	f1 f7       	brne	.-4      	; 0x4b8 <LCDinit+0xa>
 4bc:	00 c0       	rjmp	.+0      	; 0x4be <LCDinit+0x10>
 4be:	00 00       	nop
#ifdef LCD_4bit	
	//4 bit part
	_delay_ms(15);
	LDP=0x00;
 4c0:	15 b8       	out	0x05, r1	; 5
	LCP=0x00;
 4c2:	15 b8       	out	0x05, r1	; 5
	LDDR|=1<<LCD_D7|1<<LCD_D6|1<<LCD_D5|1<<LCD_D4;
 4c4:	84 b1       	in	r24, 0x04	; 4
 4c6:	80 6f       	ori	r24, 0xF0	; 240
 4c8:	84 b9       	out	0x04, r24	; 4
	LCDR|=1<<LCD_E|1<<LCD_RW|1<<LCD_RS;
 4ca:	84 b1       	in	r24, 0x04	; 4
 4cc:	87 60       	ori	r24, 0x07	; 7
 4ce:	84 b9       	out	0x04, r24	; 4
   //---------one------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
 4d0:	80 e3       	ldi	r24, 0x30	; 48
 4d2:	85 b9       	out	0x05, r24	; 5
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 4d4:	2a 9a       	sbi	0x05, 2	; 5
 4d6:	ef ec       	ldi	r30, 0xCF	; 207
 4d8:	f7 e0       	ldi	r31, 0x07	; 7
 4da:	31 97       	sbiw	r30, 0x01	; 1
 4dc:	f1 f7       	brne	.-4      	; 0x4da <LCDinit+0x2c>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <LCDinit+0x32>
 4e0:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 4e2:	2a 98       	cbi	0x05, 2	; 5
 4e4:	ef ec       	ldi	r30, 0xCF	; 207
 4e6:	f7 e0       	ldi	r31, 0x07	; 7
 4e8:	31 97       	sbiw	r30, 0x01	; 1
 4ea:	f1 f7       	brne	.-4      	; 0x4e8 <LCDinit+0x3a>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <LCDinit+0x40>
 4ee:	00 00       	nop
	_delay_ms(1);
	//-----------two-----------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|1<<LCD_D4; //4 bit mode
 4f0:	85 b9       	out	0x05, r24	; 5
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 4f2:	2a 9a       	sbi	0x05, 2	; 5
 4f4:	8f ec       	ldi	r24, 0xCF	; 207
 4f6:	97 e0       	ldi	r25, 0x07	; 7
 4f8:	01 97       	sbiw	r24, 0x01	; 1
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <LCDinit+0x4a>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <LCDinit+0x50>
 4fe:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 500:	2a 98       	cbi	0x05, 2	; 5
 502:	ef ec       	ldi	r30, 0xCF	; 207
 504:	f7 e0       	ldi	r31, 0x07	; 7
 506:	31 97       	sbiw	r30, 0x01	; 1
 508:	f1 f7       	brne	.-4      	; 0x506 <LCDinit+0x58>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <LCDinit+0x5e>
 50c:	00 00       	nop
	_delay_ms(1);
	//-------three-------------
	LDP=0<<LCD_D7|0<<LCD_D6|1<<LCD_D5|0<<LCD_D4; //4 bit mode
 50e:	80 e2       	ldi	r24, 0x20	; 32
 510:	85 b9       	out	0x05, r24	; 5
	LCP|=1<<LCD_E|0<<LCD_RW|0<<LCD_RS;		
 512:	2a 9a       	sbi	0x05, 2	; 5
 514:	8f ec       	ldi	r24, 0xCF	; 207
 516:	97 e0       	ldi	r25, 0x07	; 7
 518:	01 97       	sbiw	r24, 0x01	; 1
 51a:	f1 f7       	brne	.-4      	; 0x518 <LCDinit+0x6a>
 51c:	00 c0       	rjmp	.+0      	; 0x51e <LCDinit+0x70>
 51e:	00 00       	nop
	_delay_ms(1);
	LCP&=~(1<<LCD_E);
 520:	2a 98       	cbi	0x05, 2	; 5
 522:	ef ec       	ldi	r30, 0xCF	; 207
 524:	f7 e0       	ldi	r31, 0x07	; 7
 526:	31 97       	sbiw	r30, 0x01	; 1
 528:	f1 f7       	brne	.-4      	; 0x526 <LCDinit+0x78>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <LCDinit+0x7e>
 52c:	00 00       	nop
	_delay_ms(1);
	//--------4 bit--dual line---------------
	LCDsendCommand(0b00101000);
 52e:	88 e2       	ldi	r24, 0x28	; 40
 530:	0e 94 01 02 	call	0x402	; 0x402 <LCDsendCommand>
   //-----increment address, invisible cursor shift------
	LCDsendCommand(0b00001100);
 534:	8c e0       	ldi	r24, 0x0C	; 12
 536:	0e 94 01 02 	call	0x402	; 0x402 <LCDsendCommand>
 53a:	c8 e6       	ldi	r28, 0x68	; 104
 53c:	d0 e0       	ldi	r29, 0x00	; 0
		//init 8 custom chars
	uint8_t ch=0, chn=0;
 53e:	60 e0       	ldi	r22, 0x00	; 0
	while(ch<64)
	{
		LCDdefinechar((LcdCustomChar+ch),chn++);
 540:	11 e0       	ldi	r17, 0x01	; 1
 542:	16 0f       	add	r17, r22
 544:	ce 01       	movw	r24, r28
 546:	0e 94 35 02 	call	0x46a	; 0x46a <LCDdefinechar>
 54a:	28 96       	adiw	r28, 0x08	; 8
 54c:	61 2f       	mov	r22, r17
	LCDsendCommand(0b00101000);
   //-----increment address, invisible cursor shift------
	LCDsendCommand(0b00001100);
		//init 8 custom chars
	uint8_t ch=0, chn=0;
	while(ch<64)
 54e:	18 30       	cpi	r17, 0x08	; 8
 550:	b9 f7       	brne	.-18     	; 0x540 <LCDinit+0x92>
		LCDdefinechar((LcdCustomChar+ch),chn++);
		ch=ch+8;
	}

#endif
}			
 552:	df 91       	pop	r29
 554:	cf 91       	pop	r28
 556:	1f 91       	pop	r17
 558:	08 95       	ret

0000055a <main>:
volatile uint8_t flag = 0;
volatile uint16_t contador = 0;

int main (void)
{
	LCDinit();
 55a:	0e 94 57 02 	call	0x4ae	; 0x4ae <LCDinit>
	TERMOMETRO_init();
 55e:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <TERMOMETRO_init>
	set_renglones_display();
 562:	0e 94 94 01 	call	0x328	; 0x328 <set_renglones_display>
	set_puertos();
 566:	0e 94 73 00 	call	0xe6	; 0xe6 <set_puertos>
	/*se configura las interrupciones por temporizador*/
	OCR0A = 250;
 56a:	8a ef       	ldi	r24, 0xFA	; 250
 56c:	87 bd       	out	0x27, r24	; 39
	TCCR0A = 0x02; //se activa modo CTC
 56e:	82 e0       	ldi	r24, 0x02	; 2
 570:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0x02;
 572:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<OCIE0A);
 574:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	sei();
 578:	78 94       	sei
	/*se configura las interrupciones por temporizador*/
	
	while(1)
	{
		regular_temperatura();			
 57a:	0e 94 37 01 	call	0x26e	; 0x26e <regular_temperatura>
	}
 57e:	fd cf       	rjmp	.-6      	; 0x57a <main+0x20>

00000580 <__vector_14>:
	return 0;
}

ISR(TIMER0_COMPA_vect){
 580:	1f 92       	push	r1
 582:	0f 92       	push	r0
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	0f 92       	push	r0
 588:	11 24       	eor	r1, r1
 58a:	2f 93       	push	r18
 58c:	3f 93       	push	r19
 58e:	4f 93       	push	r20
 590:	5f 93       	push	r21
 592:	6f 93       	push	r22
 594:	7f 93       	push	r23
 596:	8f 93       	push	r24
 598:	9f 93       	push	r25
 59a:	af 93       	push	r26
 59c:	bf 93       	push	r27
 59e:	ef 93       	push	r30
 5a0:	ff 93       	push	r31
	contador++;
 5a2:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
 5a6:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__data_end+0x1>
 5aa:	01 96       	adiw	r24, 0x01	; 1
 5ac:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__data_end+0x1>
 5b0:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end>
	if(contador == 1935)
 5b4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
 5b8:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__data_end+0x1>
 5bc:	8f 38       	cpi	r24, 0x8F	; 143
 5be:	97 40       	sbci	r25, 0x07	; 7
 5c0:	49 f4       	brne	.+18     	; 0x5d4 <__vector_14+0x54>
	{
		mostrar();
 5c2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <mostrar>
		flag = 1;
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <flag>
		contador = 0;
 5cc:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <__data_end+0x1>
 5d0:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__data_end>
	}
}
 5d4:	ff 91       	pop	r31
 5d6:	ef 91       	pop	r30
 5d8:	bf 91       	pop	r27
 5da:	af 91       	pop	r26
 5dc:	9f 91       	pop	r25
 5de:	8f 91       	pop	r24
 5e0:	7f 91       	pop	r23
 5e2:	6f 91       	pop	r22
 5e4:	5f 91       	pop	r21
 5e6:	4f 91       	pop	r20
 5e8:	3f 91       	pop	r19
 5ea:	2f 91       	pop	r18
 5ec:	0f 90       	pop	r0
 5ee:	0f be       	out	0x3f, r0	; 63
 5f0:	0f 90       	pop	r0
 5f2:	1f 90       	pop	r1
 5f4:	18 95       	reti

000005f6 <TERMOMETRO_init>:
#include "termometro.h"
#include <avr/io.h>


void TERMOMETRO_init(void){
	ADC_init(64,0);
 5f6:	60 e0       	ldi	r22, 0x00	; 0
 5f8:	70 e0       	ldi	r23, 0x00	; 0
 5fa:	80 e4       	ldi	r24, 0x40	; 64
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 d7 00 	call	0x1ae	; 0x1ae <ADC_init>
 602:	08 95       	ret

00000604 <TERMOMETRO_get_temperatura_entero>:
}

int TERMOMETRO_get_temperatura_entero(void){
	
	ADC_Start();
 604:	0e 94 ef 00 	call	0x1de	; 0x1de <ADC_Start>
	while(ADC_conversion_completed()); //wait for conversion to finish
 608:	0e 94 f5 00 	call	0x1ea	; 0x1ea <ADC_conversion_completed>
 60c:	89 2b       	or	r24, r25
 60e:	e1 f7       	brne	.-8      	; 0x608 <TERMOMETRO_get_temperatura_entero+0x4>
	ADC_flag_reset();	
 610:	0e 94 fe 00 	call	0x1fc	; 0x1fc <ADC_flag_reset>
	int temperatura=ADC_get_voltaje_entero();
 614:	0e 94 04 01 	call	0x208	; 0x208 <ADC_get_voltaje_entero>
 618:	85 3f       	cpi	r24, 0xF5	; 245
 61a:	21 e0       	ldi	r18, 0x01	; 1
 61c:	92 07       	cpc	r25, r18
 61e:	14 f0       	brlt	.+4      	; 0x624 <TERMOMETRO_get_temperatura_entero+0x20>
 620:	84 ef       	ldi	r24, 0xF4	; 244
 622:	91 e0       	ldi	r25, 0x01	; 1
 624:	99 23       	and	r25, r25
 626:	14 f4       	brge	.+4      	; 0x62c <TERMOMETRO_get_temperatura_entero+0x28>
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	90 e0       	ldi	r25, 0x00	; 0
	if (temperatura>500){temperatura=500;}
	if (temperatura<0){temperatura=0;}	
	return temperatura;
}
 62c:	08 95       	ret

0000062e <__divsf3>:
 62e:	0e 94 2b 03 	call	0x656	; 0x656 <__divsf3x>
 632:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_round>
 636:	0e 94 30 04 	call	0x860	; 0x860 <__fp_pscB>
 63a:	58 f0       	brcs	.+22     	; 0x652 <__divsf3+0x24>
 63c:	0e 94 29 04 	call	0x852	; 0x852 <__fp_pscA>
 640:	40 f0       	brcs	.+16     	; 0x652 <__divsf3+0x24>
 642:	29 f4       	brne	.+10     	; 0x64e <__divsf3+0x20>
 644:	5f 3f       	cpi	r21, 0xFF	; 255
 646:	29 f0       	breq	.+10     	; 0x652 <__divsf3+0x24>
 648:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_inf>
 64c:	51 11       	cpse	r21, r1
 64e:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_szero>
 652:	0c 94 26 04 	jmp	0x84c	; 0x84c <__fp_nan>

00000656 <__divsf3x>:
 656:	0e 94 48 04 	call	0x890	; 0x890 <__fp_split3>
 65a:	68 f3       	brcs	.-38     	; 0x636 <__divsf3+0x8>

0000065c <__divsf3_pse>:
 65c:	99 23       	and	r25, r25
 65e:	b1 f3       	breq	.-20     	; 0x64c <__divsf3+0x1e>
 660:	55 23       	and	r21, r21
 662:	91 f3       	breq	.-28     	; 0x648 <__divsf3+0x1a>
 664:	95 1b       	sub	r25, r21
 666:	55 0b       	sbc	r21, r21
 668:	bb 27       	eor	r27, r27
 66a:	aa 27       	eor	r26, r26
 66c:	62 17       	cp	r22, r18
 66e:	73 07       	cpc	r23, r19
 670:	84 07       	cpc	r24, r20
 672:	38 f0       	brcs	.+14     	; 0x682 <__divsf3_pse+0x26>
 674:	9f 5f       	subi	r25, 0xFF	; 255
 676:	5f 4f       	sbci	r21, 0xFF	; 255
 678:	22 0f       	add	r18, r18
 67a:	33 1f       	adc	r19, r19
 67c:	44 1f       	adc	r20, r20
 67e:	aa 1f       	adc	r26, r26
 680:	a9 f3       	breq	.-22     	; 0x66c <__divsf3_pse+0x10>
 682:	35 d0       	rcall	.+106    	; 0x6ee <__divsf3_pse+0x92>
 684:	0e 2e       	mov	r0, r30
 686:	3a f0       	brmi	.+14     	; 0x696 <__divsf3_pse+0x3a>
 688:	e0 e8       	ldi	r30, 0x80	; 128
 68a:	32 d0       	rcall	.+100    	; 0x6f0 <__divsf3_pse+0x94>
 68c:	91 50       	subi	r25, 0x01	; 1
 68e:	50 40       	sbci	r21, 0x00	; 0
 690:	e6 95       	lsr	r30
 692:	00 1c       	adc	r0, r0
 694:	ca f7       	brpl	.-14     	; 0x688 <__divsf3_pse+0x2c>
 696:	2b d0       	rcall	.+86     	; 0x6ee <__divsf3_pse+0x92>
 698:	fe 2f       	mov	r31, r30
 69a:	29 d0       	rcall	.+82     	; 0x6ee <__divsf3_pse+0x92>
 69c:	66 0f       	add	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	88 1f       	adc	r24, r24
 6a2:	bb 1f       	adc	r27, r27
 6a4:	26 17       	cp	r18, r22
 6a6:	37 07       	cpc	r19, r23
 6a8:	48 07       	cpc	r20, r24
 6aa:	ab 07       	cpc	r26, r27
 6ac:	b0 e8       	ldi	r27, 0x80	; 128
 6ae:	09 f0       	breq	.+2      	; 0x6b2 <__divsf3_pse+0x56>
 6b0:	bb 0b       	sbc	r27, r27
 6b2:	80 2d       	mov	r24, r0
 6b4:	bf 01       	movw	r22, r30
 6b6:	ff 27       	eor	r31, r31
 6b8:	93 58       	subi	r25, 0x83	; 131
 6ba:	5f 4f       	sbci	r21, 0xFF	; 255
 6bc:	3a f0       	brmi	.+14     	; 0x6cc <__divsf3_pse+0x70>
 6be:	9e 3f       	cpi	r25, 0xFE	; 254
 6c0:	51 05       	cpc	r21, r1
 6c2:	78 f0       	brcs	.+30     	; 0x6e2 <__divsf3_pse+0x86>
 6c4:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_inf>
 6c8:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_szero>
 6cc:	5f 3f       	cpi	r21, 0xFF	; 255
 6ce:	e4 f3       	brlt	.-8      	; 0x6c8 <__divsf3_pse+0x6c>
 6d0:	98 3e       	cpi	r25, 0xE8	; 232
 6d2:	d4 f3       	brlt	.-12     	; 0x6c8 <__divsf3_pse+0x6c>
 6d4:	86 95       	lsr	r24
 6d6:	77 95       	ror	r23
 6d8:	67 95       	ror	r22
 6da:	b7 95       	ror	r27
 6dc:	f7 95       	ror	r31
 6de:	9f 5f       	subi	r25, 0xFF	; 255
 6e0:	c9 f7       	brne	.-14     	; 0x6d4 <__divsf3_pse+0x78>
 6e2:	88 0f       	add	r24, r24
 6e4:	91 1d       	adc	r25, r1
 6e6:	96 95       	lsr	r25
 6e8:	87 95       	ror	r24
 6ea:	97 f9       	bld	r25, 7
 6ec:	08 95       	ret
 6ee:	e1 e0       	ldi	r30, 0x01	; 1
 6f0:	66 0f       	add	r22, r22
 6f2:	77 1f       	adc	r23, r23
 6f4:	88 1f       	adc	r24, r24
 6f6:	bb 1f       	adc	r27, r27
 6f8:	62 17       	cp	r22, r18
 6fa:	73 07       	cpc	r23, r19
 6fc:	84 07       	cpc	r24, r20
 6fe:	ba 07       	cpc	r27, r26
 700:	20 f0       	brcs	.+8      	; 0x70a <__divsf3_pse+0xae>
 702:	62 1b       	sub	r22, r18
 704:	73 0b       	sbc	r23, r19
 706:	84 0b       	sbc	r24, r20
 708:	ba 0b       	sbc	r27, r26
 70a:	ee 1f       	adc	r30, r30
 70c:	88 f7       	brcc	.-30     	; 0x6f0 <__divsf3_pse+0x94>
 70e:	e0 95       	com	r30
 710:	08 95       	ret

00000712 <__fixsfsi>:
 712:	0e 94 90 03 	call	0x720	; 0x720 <__fixunssfsi>
 716:	68 94       	set
 718:	b1 11       	cpse	r27, r1
 71a:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_szero>
 71e:	08 95       	ret

00000720 <__fixunssfsi>:
 720:	0e 94 50 04 	call	0x8a0	; 0x8a0 <__fp_splitA>
 724:	88 f0       	brcs	.+34     	; 0x748 <__fixunssfsi+0x28>
 726:	9f 57       	subi	r25, 0x7F	; 127
 728:	98 f0       	brcs	.+38     	; 0x750 <__fixunssfsi+0x30>
 72a:	b9 2f       	mov	r27, r25
 72c:	99 27       	eor	r25, r25
 72e:	b7 51       	subi	r27, 0x17	; 23
 730:	b0 f0       	brcs	.+44     	; 0x75e <__fixunssfsi+0x3e>
 732:	e1 f0       	breq	.+56     	; 0x76c <__fixunssfsi+0x4c>
 734:	66 0f       	add	r22, r22
 736:	77 1f       	adc	r23, r23
 738:	88 1f       	adc	r24, r24
 73a:	99 1f       	adc	r25, r25
 73c:	1a f0       	brmi	.+6      	; 0x744 <__fixunssfsi+0x24>
 73e:	ba 95       	dec	r27
 740:	c9 f7       	brne	.-14     	; 0x734 <__fixunssfsi+0x14>
 742:	14 c0       	rjmp	.+40     	; 0x76c <__fixunssfsi+0x4c>
 744:	b1 30       	cpi	r27, 0x01	; 1
 746:	91 f0       	breq	.+36     	; 0x76c <__fixunssfsi+0x4c>
 748:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_zero>
 74c:	b1 e0       	ldi	r27, 0x01	; 1
 74e:	08 95       	ret
 750:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_zero>
 754:	67 2f       	mov	r22, r23
 756:	78 2f       	mov	r23, r24
 758:	88 27       	eor	r24, r24
 75a:	b8 5f       	subi	r27, 0xF8	; 248
 75c:	39 f0       	breq	.+14     	; 0x76c <__fixunssfsi+0x4c>
 75e:	b9 3f       	cpi	r27, 0xF9	; 249
 760:	cc f3       	brlt	.-14     	; 0x754 <__fixunssfsi+0x34>
 762:	86 95       	lsr	r24
 764:	77 95       	ror	r23
 766:	67 95       	ror	r22
 768:	b3 95       	inc	r27
 76a:	d9 f7       	brne	.-10     	; 0x762 <__fixunssfsi+0x42>
 76c:	3e f4       	brtc	.+14     	; 0x77c <__fixunssfsi+0x5c>
 76e:	90 95       	com	r25
 770:	80 95       	com	r24
 772:	70 95       	com	r23
 774:	61 95       	neg	r22
 776:	7f 4f       	sbci	r23, 0xFF	; 255
 778:	8f 4f       	sbci	r24, 0xFF	; 255
 77a:	9f 4f       	sbci	r25, 0xFF	; 255
 77c:	08 95       	ret

0000077e <__floatunsisf>:
 77e:	e8 94       	clt
 780:	09 c0       	rjmp	.+18     	; 0x794 <__floatsisf+0x12>

00000782 <__floatsisf>:
 782:	97 fb       	bst	r25, 7
 784:	3e f4       	brtc	.+14     	; 0x794 <__floatsisf+0x12>
 786:	90 95       	com	r25
 788:	80 95       	com	r24
 78a:	70 95       	com	r23
 78c:	61 95       	neg	r22
 78e:	7f 4f       	sbci	r23, 0xFF	; 255
 790:	8f 4f       	sbci	r24, 0xFF	; 255
 792:	9f 4f       	sbci	r25, 0xFF	; 255
 794:	99 23       	and	r25, r25
 796:	a9 f0       	breq	.+42     	; 0x7c2 <__floatsisf+0x40>
 798:	f9 2f       	mov	r31, r25
 79a:	96 e9       	ldi	r25, 0x96	; 150
 79c:	bb 27       	eor	r27, r27
 79e:	93 95       	inc	r25
 7a0:	f6 95       	lsr	r31
 7a2:	87 95       	ror	r24
 7a4:	77 95       	ror	r23
 7a6:	67 95       	ror	r22
 7a8:	b7 95       	ror	r27
 7aa:	f1 11       	cpse	r31, r1
 7ac:	f8 cf       	rjmp	.-16     	; 0x79e <__floatsisf+0x1c>
 7ae:	fa f4       	brpl	.+62     	; 0x7ee <__floatsisf+0x6c>
 7b0:	bb 0f       	add	r27, r27
 7b2:	11 f4       	brne	.+4      	; 0x7b8 <__floatsisf+0x36>
 7b4:	60 ff       	sbrs	r22, 0
 7b6:	1b c0       	rjmp	.+54     	; 0x7ee <__floatsisf+0x6c>
 7b8:	6f 5f       	subi	r22, 0xFF	; 255
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	16 c0       	rjmp	.+44     	; 0x7ee <__floatsisf+0x6c>
 7c2:	88 23       	and	r24, r24
 7c4:	11 f0       	breq	.+4      	; 0x7ca <__floatsisf+0x48>
 7c6:	96 e9       	ldi	r25, 0x96	; 150
 7c8:	11 c0       	rjmp	.+34     	; 0x7ec <__floatsisf+0x6a>
 7ca:	77 23       	and	r23, r23
 7cc:	21 f0       	breq	.+8      	; 0x7d6 <__floatsisf+0x54>
 7ce:	9e e8       	ldi	r25, 0x8E	; 142
 7d0:	87 2f       	mov	r24, r23
 7d2:	76 2f       	mov	r23, r22
 7d4:	05 c0       	rjmp	.+10     	; 0x7e0 <__floatsisf+0x5e>
 7d6:	66 23       	and	r22, r22
 7d8:	71 f0       	breq	.+28     	; 0x7f6 <__floatsisf+0x74>
 7da:	96 e8       	ldi	r25, 0x86	; 134
 7dc:	86 2f       	mov	r24, r22
 7de:	70 e0       	ldi	r23, 0x00	; 0
 7e0:	60 e0       	ldi	r22, 0x00	; 0
 7e2:	2a f0       	brmi	.+10     	; 0x7ee <__floatsisf+0x6c>
 7e4:	9a 95       	dec	r25
 7e6:	66 0f       	add	r22, r22
 7e8:	77 1f       	adc	r23, r23
 7ea:	88 1f       	adc	r24, r24
 7ec:	da f7       	brpl	.-10     	; 0x7e4 <__floatsisf+0x62>
 7ee:	88 0f       	add	r24, r24
 7f0:	96 95       	lsr	r25
 7f2:	87 95       	ror	r24
 7f4:	97 f9       	bld	r25, 7
 7f6:	08 95       	ret

000007f8 <__fp_cmp>:
 7f8:	99 0f       	add	r25, r25
 7fa:	00 08       	sbc	r0, r0
 7fc:	55 0f       	add	r21, r21
 7fe:	aa 0b       	sbc	r26, r26
 800:	e0 e8       	ldi	r30, 0x80	; 128
 802:	fe ef       	ldi	r31, 0xFE	; 254
 804:	16 16       	cp	r1, r22
 806:	17 06       	cpc	r1, r23
 808:	e8 07       	cpc	r30, r24
 80a:	f9 07       	cpc	r31, r25
 80c:	c0 f0       	brcs	.+48     	; 0x83e <__fp_cmp+0x46>
 80e:	12 16       	cp	r1, r18
 810:	13 06       	cpc	r1, r19
 812:	e4 07       	cpc	r30, r20
 814:	f5 07       	cpc	r31, r21
 816:	98 f0       	brcs	.+38     	; 0x83e <__fp_cmp+0x46>
 818:	62 1b       	sub	r22, r18
 81a:	73 0b       	sbc	r23, r19
 81c:	84 0b       	sbc	r24, r20
 81e:	95 0b       	sbc	r25, r21
 820:	39 f4       	brne	.+14     	; 0x830 <__fp_cmp+0x38>
 822:	0a 26       	eor	r0, r26
 824:	61 f0       	breq	.+24     	; 0x83e <__fp_cmp+0x46>
 826:	23 2b       	or	r18, r19
 828:	24 2b       	or	r18, r20
 82a:	25 2b       	or	r18, r21
 82c:	21 f4       	brne	.+8      	; 0x836 <__fp_cmp+0x3e>
 82e:	08 95       	ret
 830:	0a 26       	eor	r0, r26
 832:	09 f4       	brne	.+2      	; 0x836 <__fp_cmp+0x3e>
 834:	a1 40       	sbci	r26, 0x01	; 1
 836:	a6 95       	lsr	r26
 838:	8f ef       	ldi	r24, 0xFF	; 255
 83a:	81 1d       	adc	r24, r1
 83c:	81 1d       	adc	r24, r1
 83e:	08 95       	ret

00000840 <__fp_inf>:
 840:	97 f9       	bld	r25, 7
 842:	9f 67       	ori	r25, 0x7F	; 127
 844:	80 e8       	ldi	r24, 0x80	; 128
 846:	70 e0       	ldi	r23, 0x00	; 0
 848:	60 e0       	ldi	r22, 0x00	; 0
 84a:	08 95       	ret

0000084c <__fp_nan>:
 84c:	9f ef       	ldi	r25, 0xFF	; 255
 84e:	80 ec       	ldi	r24, 0xC0	; 192
 850:	08 95       	ret

00000852 <__fp_pscA>:
 852:	00 24       	eor	r0, r0
 854:	0a 94       	dec	r0
 856:	16 16       	cp	r1, r22
 858:	17 06       	cpc	r1, r23
 85a:	18 06       	cpc	r1, r24
 85c:	09 06       	cpc	r0, r25
 85e:	08 95       	ret

00000860 <__fp_pscB>:
 860:	00 24       	eor	r0, r0
 862:	0a 94       	dec	r0
 864:	12 16       	cp	r1, r18
 866:	13 06       	cpc	r1, r19
 868:	14 06       	cpc	r1, r20
 86a:	05 06       	cpc	r0, r21
 86c:	08 95       	ret

0000086e <__fp_round>:
 86e:	09 2e       	mov	r0, r25
 870:	03 94       	inc	r0
 872:	00 0c       	add	r0, r0
 874:	11 f4       	brne	.+4      	; 0x87a <__fp_round+0xc>
 876:	88 23       	and	r24, r24
 878:	52 f0       	brmi	.+20     	; 0x88e <__fp_round+0x20>
 87a:	bb 0f       	add	r27, r27
 87c:	40 f4       	brcc	.+16     	; 0x88e <__fp_round+0x20>
 87e:	bf 2b       	or	r27, r31
 880:	11 f4       	brne	.+4      	; 0x886 <__fp_round+0x18>
 882:	60 ff       	sbrs	r22, 0
 884:	04 c0       	rjmp	.+8      	; 0x88e <__fp_round+0x20>
 886:	6f 5f       	subi	r22, 0xFF	; 255
 888:	7f 4f       	sbci	r23, 0xFF	; 255
 88a:	8f 4f       	sbci	r24, 0xFF	; 255
 88c:	9f 4f       	sbci	r25, 0xFF	; 255
 88e:	08 95       	ret

00000890 <__fp_split3>:
 890:	57 fd       	sbrc	r21, 7
 892:	90 58       	subi	r25, 0x80	; 128
 894:	44 0f       	add	r20, r20
 896:	55 1f       	adc	r21, r21
 898:	59 f0       	breq	.+22     	; 0x8b0 <__fp_splitA+0x10>
 89a:	5f 3f       	cpi	r21, 0xFF	; 255
 89c:	71 f0       	breq	.+28     	; 0x8ba <__fp_splitA+0x1a>
 89e:	47 95       	ror	r20

000008a0 <__fp_splitA>:
 8a0:	88 0f       	add	r24, r24
 8a2:	97 fb       	bst	r25, 7
 8a4:	99 1f       	adc	r25, r25
 8a6:	61 f0       	breq	.+24     	; 0x8c0 <__fp_splitA+0x20>
 8a8:	9f 3f       	cpi	r25, 0xFF	; 255
 8aa:	79 f0       	breq	.+30     	; 0x8ca <__fp_splitA+0x2a>
 8ac:	87 95       	ror	r24
 8ae:	08 95       	ret
 8b0:	12 16       	cp	r1, r18
 8b2:	13 06       	cpc	r1, r19
 8b4:	14 06       	cpc	r1, r20
 8b6:	55 1f       	adc	r21, r21
 8b8:	f2 cf       	rjmp	.-28     	; 0x89e <__fp_split3+0xe>
 8ba:	46 95       	lsr	r20
 8bc:	f1 df       	rcall	.-30     	; 0x8a0 <__fp_splitA>
 8be:	08 c0       	rjmp	.+16     	; 0x8d0 <__fp_splitA+0x30>
 8c0:	16 16       	cp	r1, r22
 8c2:	17 06       	cpc	r1, r23
 8c4:	18 06       	cpc	r1, r24
 8c6:	99 1f       	adc	r25, r25
 8c8:	f1 cf       	rjmp	.-30     	; 0x8ac <__fp_splitA+0xc>
 8ca:	86 95       	lsr	r24
 8cc:	71 05       	cpc	r23, r1
 8ce:	61 05       	cpc	r22, r1
 8d0:	08 94       	sec
 8d2:	08 95       	ret

000008d4 <__fp_zero>:
 8d4:	e8 94       	clt

000008d6 <__fp_szero>:
 8d6:	bb 27       	eor	r27, r27
 8d8:	66 27       	eor	r22, r22
 8da:	77 27       	eor	r23, r23
 8dc:	cb 01       	movw	r24, r22
 8de:	97 f9       	bld	r25, 7
 8e0:	08 95       	ret

000008e2 <__gesf2>:
 8e2:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_cmp>
 8e6:	08 f4       	brcc	.+2      	; 0x8ea <__gesf2+0x8>
 8e8:	8f ef       	ldi	r24, 0xFF	; 255
 8ea:	08 95       	ret

000008ec <__mulsf3>:
 8ec:	0e 94 89 04 	call	0x912	; 0x912 <__mulsf3x>
 8f0:	0c 94 37 04 	jmp	0x86e	; 0x86e <__fp_round>
 8f4:	0e 94 29 04 	call	0x852	; 0x852 <__fp_pscA>
 8f8:	38 f0       	brcs	.+14     	; 0x908 <__stack+0x9>
 8fa:	0e 94 30 04 	call	0x860	; 0x860 <__fp_pscB>
 8fe:	20 f0       	brcs	.+8      	; 0x908 <__stack+0x9>
 900:	95 23       	and	r25, r21
 902:	11 f0       	breq	.+4      	; 0x908 <__stack+0x9>
 904:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_inf>
 908:	0c 94 26 04 	jmp	0x84c	; 0x84c <__fp_nan>
 90c:	11 24       	eor	r1, r1
 90e:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_szero>

00000912 <__mulsf3x>:
 912:	0e 94 48 04 	call	0x890	; 0x890 <__fp_split3>
 916:	70 f3       	brcs	.-36     	; 0x8f4 <__mulsf3+0x8>

00000918 <__mulsf3_pse>:
 918:	95 9f       	mul	r25, r21
 91a:	c1 f3       	breq	.-16     	; 0x90c <__stack+0xd>
 91c:	95 0f       	add	r25, r21
 91e:	50 e0       	ldi	r21, 0x00	; 0
 920:	55 1f       	adc	r21, r21
 922:	62 9f       	mul	r22, r18
 924:	f0 01       	movw	r30, r0
 926:	72 9f       	mul	r23, r18
 928:	bb 27       	eor	r27, r27
 92a:	f0 0d       	add	r31, r0
 92c:	b1 1d       	adc	r27, r1
 92e:	63 9f       	mul	r22, r19
 930:	aa 27       	eor	r26, r26
 932:	f0 0d       	add	r31, r0
 934:	b1 1d       	adc	r27, r1
 936:	aa 1f       	adc	r26, r26
 938:	64 9f       	mul	r22, r20
 93a:	66 27       	eor	r22, r22
 93c:	b0 0d       	add	r27, r0
 93e:	a1 1d       	adc	r26, r1
 940:	66 1f       	adc	r22, r22
 942:	82 9f       	mul	r24, r18
 944:	22 27       	eor	r18, r18
 946:	b0 0d       	add	r27, r0
 948:	a1 1d       	adc	r26, r1
 94a:	62 1f       	adc	r22, r18
 94c:	73 9f       	mul	r23, r19
 94e:	b0 0d       	add	r27, r0
 950:	a1 1d       	adc	r26, r1
 952:	62 1f       	adc	r22, r18
 954:	83 9f       	mul	r24, r19
 956:	a0 0d       	add	r26, r0
 958:	61 1d       	adc	r22, r1
 95a:	22 1f       	adc	r18, r18
 95c:	74 9f       	mul	r23, r20
 95e:	33 27       	eor	r19, r19
 960:	a0 0d       	add	r26, r0
 962:	61 1d       	adc	r22, r1
 964:	23 1f       	adc	r18, r19
 966:	84 9f       	mul	r24, r20
 968:	60 0d       	add	r22, r0
 96a:	21 1d       	adc	r18, r1
 96c:	82 2f       	mov	r24, r18
 96e:	76 2f       	mov	r23, r22
 970:	6a 2f       	mov	r22, r26
 972:	11 24       	eor	r1, r1
 974:	9f 57       	subi	r25, 0x7F	; 127
 976:	50 40       	sbci	r21, 0x00	; 0
 978:	9a f0       	brmi	.+38     	; 0x9a0 <__mulsf3_pse+0x88>
 97a:	f1 f0       	breq	.+60     	; 0x9b8 <__mulsf3_pse+0xa0>
 97c:	88 23       	and	r24, r24
 97e:	4a f0       	brmi	.+18     	; 0x992 <__mulsf3_pse+0x7a>
 980:	ee 0f       	add	r30, r30
 982:	ff 1f       	adc	r31, r31
 984:	bb 1f       	adc	r27, r27
 986:	66 1f       	adc	r22, r22
 988:	77 1f       	adc	r23, r23
 98a:	88 1f       	adc	r24, r24
 98c:	91 50       	subi	r25, 0x01	; 1
 98e:	50 40       	sbci	r21, 0x00	; 0
 990:	a9 f7       	brne	.-22     	; 0x97c <__mulsf3_pse+0x64>
 992:	9e 3f       	cpi	r25, 0xFE	; 254
 994:	51 05       	cpc	r21, r1
 996:	80 f0       	brcs	.+32     	; 0x9b8 <__mulsf3_pse+0xa0>
 998:	0c 94 20 04 	jmp	0x840	; 0x840 <__fp_inf>
 99c:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_szero>
 9a0:	5f 3f       	cpi	r21, 0xFF	; 255
 9a2:	e4 f3       	brlt	.-8      	; 0x99c <__mulsf3_pse+0x84>
 9a4:	98 3e       	cpi	r25, 0xE8	; 232
 9a6:	d4 f3       	brlt	.-12     	; 0x99c <__mulsf3_pse+0x84>
 9a8:	86 95       	lsr	r24
 9aa:	77 95       	ror	r23
 9ac:	67 95       	ror	r22
 9ae:	b7 95       	ror	r27
 9b0:	f7 95       	ror	r31
 9b2:	e7 95       	ror	r30
 9b4:	9f 5f       	subi	r25, 0xFF	; 255
 9b6:	c1 f7       	brne	.-16     	; 0x9a8 <__mulsf3_pse+0x90>
 9b8:	fe 2b       	or	r31, r30
 9ba:	88 0f       	add	r24, r24
 9bc:	91 1d       	adc	r25, r1
 9be:	96 95       	lsr	r25
 9c0:	87 95       	ror	r24
 9c2:	97 f9       	bld	r25, 7
 9c4:	08 95       	ret

000009c6 <__divmodhi4>:
 9c6:	97 fb       	bst	r25, 7
 9c8:	07 2e       	mov	r0, r23
 9ca:	16 f4       	brtc	.+4      	; 0x9d0 <__divmodhi4+0xa>
 9cc:	00 94       	com	r0
 9ce:	07 d0       	rcall	.+14     	; 0x9de <__divmodhi4_neg1>
 9d0:	77 fd       	sbrc	r23, 7
 9d2:	09 d0       	rcall	.+18     	; 0x9e6 <__divmodhi4_neg2>
 9d4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <__udivmodhi4>
 9d8:	07 fc       	sbrc	r0, 7
 9da:	05 d0       	rcall	.+10     	; 0x9e6 <__divmodhi4_neg2>
 9dc:	3e f4       	brtc	.+14     	; 0x9ec <__divmodhi4_exit>

000009de <__divmodhi4_neg1>:
 9de:	90 95       	com	r25
 9e0:	81 95       	neg	r24
 9e2:	9f 4f       	sbci	r25, 0xFF	; 255
 9e4:	08 95       	ret

000009e6 <__divmodhi4_neg2>:
 9e6:	70 95       	com	r23
 9e8:	61 95       	neg	r22
 9ea:	7f 4f       	sbci	r23, 0xFF	; 255

000009ec <__divmodhi4_exit>:
 9ec:	08 95       	ret

000009ee <__udivmodhi4>:
 9ee:	aa 1b       	sub	r26, r26
 9f0:	bb 1b       	sub	r27, r27
 9f2:	51 e1       	ldi	r21, 0x11	; 17
 9f4:	07 c0       	rjmp	.+14     	; 0xa04 <__udivmodhi4_ep>

000009f6 <__udivmodhi4_loop>:
 9f6:	aa 1f       	adc	r26, r26
 9f8:	bb 1f       	adc	r27, r27
 9fa:	a6 17       	cp	r26, r22
 9fc:	b7 07       	cpc	r27, r23
 9fe:	10 f0       	brcs	.+4      	; 0xa04 <__udivmodhi4_ep>
 a00:	a6 1b       	sub	r26, r22
 a02:	b7 0b       	sbc	r27, r23

00000a04 <__udivmodhi4_ep>:
 a04:	88 1f       	adc	r24, r24
 a06:	99 1f       	adc	r25, r25
 a08:	5a 95       	dec	r21
 a0a:	a9 f7       	brne	.-22     	; 0x9f6 <__udivmodhi4_loop>
 a0c:	80 95       	com	r24
 a0e:	90 95       	com	r25
 a10:	bc 01       	movw	r22, r24
 a12:	cd 01       	movw	r24, r26
 a14:	08 95       	ret

00000a16 <sprintf>:
 a16:	ae e0       	ldi	r26, 0x0E	; 14
 a18:	b0 e0       	ldi	r27, 0x00	; 0
 a1a:	e1 e1       	ldi	r30, 0x11	; 17
 a1c:	f5 e0       	ldi	r31, 0x05	; 5
 a1e:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__prologue_saves__+0x1c>
 a22:	0d 89       	ldd	r16, Y+21	; 0x15
 a24:	1e 89       	ldd	r17, Y+22	; 0x16
 a26:	86 e0       	ldi	r24, 0x06	; 6
 a28:	8c 83       	std	Y+4, r24	; 0x04
 a2a:	1a 83       	std	Y+2, r17	; 0x02
 a2c:	09 83       	std	Y+1, r16	; 0x01
 a2e:	8f ef       	ldi	r24, 0xFF	; 255
 a30:	9f e7       	ldi	r25, 0x7F	; 127
 a32:	9e 83       	std	Y+6, r25	; 0x06
 a34:	8d 83       	std	Y+5, r24	; 0x05
 a36:	ae 01       	movw	r20, r28
 a38:	47 5e       	subi	r20, 0xE7	; 231
 a3a:	5f 4f       	sbci	r21, 0xFF	; 255
 a3c:	6f 89       	ldd	r22, Y+23	; 0x17
 a3e:	78 8d       	ldd	r23, Y+24	; 0x18
 a40:	ce 01       	movw	r24, r28
 a42:	01 96       	adiw	r24, 0x01	; 1
 a44:	0e 94 2e 05 	call	0xa5c	; 0xa5c <vfprintf>
 a48:	2f 81       	ldd	r18, Y+7	; 0x07
 a4a:	38 85       	ldd	r19, Y+8	; 0x08
 a4c:	f8 01       	movw	r30, r16
 a4e:	e2 0f       	add	r30, r18
 a50:	f3 1f       	adc	r31, r19
 a52:	10 82       	st	Z, r1
 a54:	2e 96       	adiw	r28, 0x0e	; 14
 a56:	e4 e0       	ldi	r30, 0x04	; 4
 a58:	0c 94 d6 07 	jmp	0xfac	; 0xfac <__epilogue_restores__+0x1c>

00000a5c <vfprintf>:
 a5c:	ac e0       	ldi	r26, 0x0C	; 12
 a5e:	b0 e0       	ldi	r27, 0x00	; 0
 a60:	e4 e3       	ldi	r30, 0x34	; 52
 a62:	f5 e0       	ldi	r31, 0x05	; 5
 a64:	0c 94 ac 07 	jmp	0xf58	; 0xf58 <__prologue_saves__>
 a68:	7c 01       	movw	r14, r24
 a6a:	6b 01       	movw	r12, r22
 a6c:	8a 01       	movw	r16, r20
 a6e:	fc 01       	movw	r30, r24
 a70:	17 82       	std	Z+7, r1	; 0x07
 a72:	16 82       	std	Z+6, r1	; 0x06
 a74:	83 81       	ldd	r24, Z+3	; 0x03
 a76:	81 ff       	sbrs	r24, 1
 a78:	bd c1       	rjmp	.+890    	; 0xdf4 <vfprintf+0x398>
 a7a:	ce 01       	movw	r24, r28
 a7c:	01 96       	adiw	r24, 0x01	; 1
 a7e:	4c 01       	movw	r8, r24
 a80:	f7 01       	movw	r30, r14
 a82:	93 81       	ldd	r25, Z+3	; 0x03
 a84:	f6 01       	movw	r30, r12
 a86:	93 fd       	sbrc	r25, 3
 a88:	85 91       	lpm	r24, Z+
 a8a:	93 ff       	sbrs	r25, 3
 a8c:	81 91       	ld	r24, Z+
 a8e:	6f 01       	movw	r12, r30
 a90:	88 23       	and	r24, r24
 a92:	09 f4       	brne	.+2      	; 0xa96 <vfprintf+0x3a>
 a94:	ab c1       	rjmp	.+854    	; 0xdec <vfprintf+0x390>
 a96:	85 32       	cpi	r24, 0x25	; 37
 a98:	39 f4       	brne	.+14     	; 0xaa8 <vfprintf+0x4c>
 a9a:	93 fd       	sbrc	r25, 3
 a9c:	85 91       	lpm	r24, Z+
 a9e:	93 ff       	sbrs	r25, 3
 aa0:	81 91       	ld	r24, Z+
 aa2:	6f 01       	movw	r12, r30
 aa4:	85 32       	cpi	r24, 0x25	; 37
 aa6:	29 f4       	brne	.+10     	; 0xab2 <vfprintf+0x56>
 aa8:	b7 01       	movw	r22, r14
 aaa:	90 e0       	ldi	r25, 0x00	; 0
 aac:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 ab0:	e7 cf       	rjmp	.-50     	; 0xa80 <vfprintf+0x24>
 ab2:	51 2c       	mov	r5, r1
 ab4:	31 2c       	mov	r3, r1
 ab6:	20 e0       	ldi	r18, 0x00	; 0
 ab8:	20 32       	cpi	r18, 0x20	; 32
 aba:	a0 f4       	brcc	.+40     	; 0xae4 <vfprintf+0x88>
 abc:	8b 32       	cpi	r24, 0x2B	; 43
 abe:	69 f0       	breq	.+26     	; 0xada <vfprintf+0x7e>
 ac0:	30 f4       	brcc	.+12     	; 0xace <vfprintf+0x72>
 ac2:	80 32       	cpi	r24, 0x20	; 32
 ac4:	59 f0       	breq	.+22     	; 0xadc <vfprintf+0x80>
 ac6:	83 32       	cpi	r24, 0x23	; 35
 ac8:	69 f4       	brne	.+26     	; 0xae4 <vfprintf+0x88>
 aca:	20 61       	ori	r18, 0x10	; 16
 acc:	2c c0       	rjmp	.+88     	; 0xb26 <vfprintf+0xca>
 ace:	8d 32       	cpi	r24, 0x2D	; 45
 ad0:	39 f0       	breq	.+14     	; 0xae0 <vfprintf+0x84>
 ad2:	80 33       	cpi	r24, 0x30	; 48
 ad4:	39 f4       	brne	.+14     	; 0xae4 <vfprintf+0x88>
 ad6:	21 60       	ori	r18, 0x01	; 1
 ad8:	26 c0       	rjmp	.+76     	; 0xb26 <vfprintf+0xca>
 ada:	22 60       	ori	r18, 0x02	; 2
 adc:	24 60       	ori	r18, 0x04	; 4
 ade:	23 c0       	rjmp	.+70     	; 0xb26 <vfprintf+0xca>
 ae0:	28 60       	ori	r18, 0x08	; 8
 ae2:	21 c0       	rjmp	.+66     	; 0xb26 <vfprintf+0xca>
 ae4:	27 fd       	sbrc	r18, 7
 ae6:	27 c0       	rjmp	.+78     	; 0xb36 <vfprintf+0xda>
 ae8:	30 ed       	ldi	r19, 0xD0	; 208
 aea:	38 0f       	add	r19, r24
 aec:	3a 30       	cpi	r19, 0x0A	; 10
 aee:	78 f4       	brcc	.+30     	; 0xb0e <vfprintf+0xb2>
 af0:	26 ff       	sbrs	r18, 6
 af2:	06 c0       	rjmp	.+12     	; 0xb00 <vfprintf+0xa4>
 af4:	fa e0       	ldi	r31, 0x0A	; 10
 af6:	5f 9e       	mul	r5, r31
 af8:	30 0d       	add	r19, r0
 afa:	11 24       	eor	r1, r1
 afc:	53 2e       	mov	r5, r19
 afe:	13 c0       	rjmp	.+38     	; 0xb26 <vfprintf+0xca>
 b00:	8a e0       	ldi	r24, 0x0A	; 10
 b02:	38 9e       	mul	r3, r24
 b04:	30 0d       	add	r19, r0
 b06:	11 24       	eor	r1, r1
 b08:	33 2e       	mov	r3, r19
 b0a:	20 62       	ori	r18, 0x20	; 32
 b0c:	0c c0       	rjmp	.+24     	; 0xb26 <vfprintf+0xca>
 b0e:	8e 32       	cpi	r24, 0x2E	; 46
 b10:	21 f4       	brne	.+8      	; 0xb1a <vfprintf+0xbe>
 b12:	26 fd       	sbrc	r18, 6
 b14:	6b c1       	rjmp	.+726    	; 0xdec <vfprintf+0x390>
 b16:	20 64       	ori	r18, 0x40	; 64
 b18:	06 c0       	rjmp	.+12     	; 0xb26 <vfprintf+0xca>
 b1a:	8c 36       	cpi	r24, 0x6C	; 108
 b1c:	11 f4       	brne	.+4      	; 0xb22 <vfprintf+0xc6>
 b1e:	20 68       	ori	r18, 0x80	; 128
 b20:	02 c0       	rjmp	.+4      	; 0xb26 <vfprintf+0xca>
 b22:	88 36       	cpi	r24, 0x68	; 104
 b24:	41 f4       	brne	.+16     	; 0xb36 <vfprintf+0xda>
 b26:	f6 01       	movw	r30, r12
 b28:	93 fd       	sbrc	r25, 3
 b2a:	85 91       	lpm	r24, Z+
 b2c:	93 ff       	sbrs	r25, 3
 b2e:	81 91       	ld	r24, Z+
 b30:	6f 01       	movw	r12, r30
 b32:	81 11       	cpse	r24, r1
 b34:	c1 cf       	rjmp	.-126    	; 0xab8 <vfprintf+0x5c>
 b36:	98 2f       	mov	r25, r24
 b38:	9f 7d       	andi	r25, 0xDF	; 223
 b3a:	95 54       	subi	r25, 0x45	; 69
 b3c:	93 30       	cpi	r25, 0x03	; 3
 b3e:	28 f4       	brcc	.+10     	; 0xb4a <vfprintf+0xee>
 b40:	0c 5f       	subi	r16, 0xFC	; 252
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	ff e3       	ldi	r31, 0x3F	; 63
 b46:	f9 83       	std	Y+1, r31	; 0x01
 b48:	0d c0       	rjmp	.+26     	; 0xb64 <vfprintf+0x108>
 b4a:	83 36       	cpi	r24, 0x63	; 99
 b4c:	31 f0       	breq	.+12     	; 0xb5a <vfprintf+0xfe>
 b4e:	83 37       	cpi	r24, 0x73	; 115
 b50:	71 f0       	breq	.+28     	; 0xb6e <vfprintf+0x112>
 b52:	83 35       	cpi	r24, 0x53	; 83
 b54:	09 f0       	breq	.+2      	; 0xb58 <vfprintf+0xfc>
 b56:	5b c0       	rjmp	.+182    	; 0xc0e <vfprintf+0x1b2>
 b58:	22 c0       	rjmp	.+68     	; 0xb9e <vfprintf+0x142>
 b5a:	f8 01       	movw	r30, r16
 b5c:	80 81       	ld	r24, Z
 b5e:	89 83       	std	Y+1, r24	; 0x01
 b60:	0e 5f       	subi	r16, 0xFE	; 254
 b62:	1f 4f       	sbci	r17, 0xFF	; 255
 b64:	44 24       	eor	r4, r4
 b66:	43 94       	inc	r4
 b68:	51 2c       	mov	r5, r1
 b6a:	54 01       	movw	r10, r8
 b6c:	15 c0       	rjmp	.+42     	; 0xb98 <vfprintf+0x13c>
 b6e:	38 01       	movw	r6, r16
 b70:	f2 e0       	ldi	r31, 0x02	; 2
 b72:	6f 0e       	add	r6, r31
 b74:	71 1c       	adc	r7, r1
 b76:	f8 01       	movw	r30, r16
 b78:	a0 80       	ld	r10, Z
 b7a:	b1 80       	ldd	r11, Z+1	; 0x01
 b7c:	26 ff       	sbrs	r18, 6
 b7e:	03 c0       	rjmp	.+6      	; 0xb86 <vfprintf+0x12a>
 b80:	65 2d       	mov	r22, r5
 b82:	70 e0       	ldi	r23, 0x00	; 0
 b84:	02 c0       	rjmp	.+4      	; 0xb8a <vfprintf+0x12e>
 b86:	6f ef       	ldi	r22, 0xFF	; 255
 b88:	7f ef       	ldi	r23, 0xFF	; 255
 b8a:	c5 01       	movw	r24, r10
 b8c:	2c 87       	std	Y+12, r18	; 0x0c
 b8e:	0e 94 0b 07 	call	0xe16	; 0xe16 <strnlen>
 b92:	2c 01       	movw	r4, r24
 b94:	83 01       	movw	r16, r6
 b96:	2c 85       	ldd	r18, Y+12	; 0x0c
 b98:	2f 77       	andi	r18, 0x7F	; 127
 b9a:	22 2e       	mov	r2, r18
 b9c:	17 c0       	rjmp	.+46     	; 0xbcc <vfprintf+0x170>
 b9e:	38 01       	movw	r6, r16
 ba0:	f2 e0       	ldi	r31, 0x02	; 2
 ba2:	6f 0e       	add	r6, r31
 ba4:	71 1c       	adc	r7, r1
 ba6:	f8 01       	movw	r30, r16
 ba8:	a0 80       	ld	r10, Z
 baa:	b1 80       	ldd	r11, Z+1	; 0x01
 bac:	26 ff       	sbrs	r18, 6
 bae:	03 c0       	rjmp	.+6      	; 0xbb6 <vfprintf+0x15a>
 bb0:	65 2d       	mov	r22, r5
 bb2:	70 e0       	ldi	r23, 0x00	; 0
 bb4:	02 c0       	rjmp	.+4      	; 0xbba <vfprintf+0x15e>
 bb6:	6f ef       	ldi	r22, 0xFF	; 255
 bb8:	7f ef       	ldi	r23, 0xFF	; 255
 bba:	c5 01       	movw	r24, r10
 bbc:	2c 87       	std	Y+12, r18	; 0x0c
 bbe:	0e 94 00 07 	call	0xe00	; 0xe00 <strnlen_P>
 bc2:	2c 01       	movw	r4, r24
 bc4:	2c 85       	ldd	r18, Y+12	; 0x0c
 bc6:	20 68       	ori	r18, 0x80	; 128
 bc8:	22 2e       	mov	r2, r18
 bca:	83 01       	movw	r16, r6
 bcc:	23 fc       	sbrc	r2, 3
 bce:	1b c0       	rjmp	.+54     	; 0xc06 <vfprintf+0x1aa>
 bd0:	83 2d       	mov	r24, r3
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	48 16       	cp	r4, r24
 bd6:	59 06       	cpc	r5, r25
 bd8:	b0 f4       	brcc	.+44     	; 0xc06 <vfprintf+0x1aa>
 bda:	b7 01       	movw	r22, r14
 bdc:	80 e2       	ldi	r24, 0x20	; 32
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 be4:	3a 94       	dec	r3
 be6:	f4 cf       	rjmp	.-24     	; 0xbd0 <vfprintf+0x174>
 be8:	f5 01       	movw	r30, r10
 bea:	27 fc       	sbrc	r2, 7
 bec:	85 91       	lpm	r24, Z+
 bee:	27 fe       	sbrs	r2, 7
 bf0:	81 91       	ld	r24, Z+
 bf2:	5f 01       	movw	r10, r30
 bf4:	b7 01       	movw	r22, r14
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 bfc:	31 10       	cpse	r3, r1
 bfe:	3a 94       	dec	r3
 c00:	f1 e0       	ldi	r31, 0x01	; 1
 c02:	4f 1a       	sub	r4, r31
 c04:	51 08       	sbc	r5, r1
 c06:	41 14       	cp	r4, r1
 c08:	51 04       	cpc	r5, r1
 c0a:	71 f7       	brne	.-36     	; 0xbe8 <vfprintf+0x18c>
 c0c:	e5 c0       	rjmp	.+458    	; 0xdd8 <vfprintf+0x37c>
 c0e:	84 36       	cpi	r24, 0x64	; 100
 c10:	11 f0       	breq	.+4      	; 0xc16 <vfprintf+0x1ba>
 c12:	89 36       	cpi	r24, 0x69	; 105
 c14:	39 f5       	brne	.+78     	; 0xc64 <vfprintf+0x208>
 c16:	f8 01       	movw	r30, r16
 c18:	27 ff       	sbrs	r18, 7
 c1a:	07 c0       	rjmp	.+14     	; 0xc2a <vfprintf+0x1ce>
 c1c:	60 81       	ld	r22, Z
 c1e:	71 81       	ldd	r23, Z+1	; 0x01
 c20:	82 81       	ldd	r24, Z+2	; 0x02
 c22:	93 81       	ldd	r25, Z+3	; 0x03
 c24:	0c 5f       	subi	r16, 0xFC	; 252
 c26:	1f 4f       	sbci	r17, 0xFF	; 255
 c28:	08 c0       	rjmp	.+16     	; 0xc3a <vfprintf+0x1de>
 c2a:	60 81       	ld	r22, Z
 c2c:	71 81       	ldd	r23, Z+1	; 0x01
 c2e:	07 2e       	mov	r0, r23
 c30:	00 0c       	add	r0, r0
 c32:	88 0b       	sbc	r24, r24
 c34:	99 0b       	sbc	r25, r25
 c36:	0e 5f       	subi	r16, 0xFE	; 254
 c38:	1f 4f       	sbci	r17, 0xFF	; 255
 c3a:	2f 76       	andi	r18, 0x6F	; 111
 c3c:	72 2e       	mov	r7, r18
 c3e:	97 ff       	sbrs	r25, 7
 c40:	09 c0       	rjmp	.+18     	; 0xc54 <vfprintf+0x1f8>
 c42:	90 95       	com	r25
 c44:	80 95       	com	r24
 c46:	70 95       	com	r23
 c48:	61 95       	neg	r22
 c4a:	7f 4f       	sbci	r23, 0xFF	; 255
 c4c:	8f 4f       	sbci	r24, 0xFF	; 255
 c4e:	9f 4f       	sbci	r25, 0xFF	; 255
 c50:	20 68       	ori	r18, 0x80	; 128
 c52:	72 2e       	mov	r7, r18
 c54:	2a e0       	ldi	r18, 0x0A	; 10
 c56:	30 e0       	ldi	r19, 0x00	; 0
 c58:	a4 01       	movw	r20, r8
 c5a:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__ultoa_invert>
 c5e:	a8 2e       	mov	r10, r24
 c60:	a8 18       	sub	r10, r8
 c62:	44 c0       	rjmp	.+136    	; 0xcec <vfprintf+0x290>
 c64:	85 37       	cpi	r24, 0x75	; 117
 c66:	29 f4       	brne	.+10     	; 0xc72 <vfprintf+0x216>
 c68:	2f 7e       	andi	r18, 0xEF	; 239
 c6a:	b2 2e       	mov	r11, r18
 c6c:	2a e0       	ldi	r18, 0x0A	; 10
 c6e:	30 e0       	ldi	r19, 0x00	; 0
 c70:	25 c0       	rjmp	.+74     	; 0xcbc <vfprintf+0x260>
 c72:	f2 2f       	mov	r31, r18
 c74:	f9 7f       	andi	r31, 0xF9	; 249
 c76:	bf 2e       	mov	r11, r31
 c78:	8f 36       	cpi	r24, 0x6F	; 111
 c7a:	c1 f0       	breq	.+48     	; 0xcac <vfprintf+0x250>
 c7c:	18 f4       	brcc	.+6      	; 0xc84 <vfprintf+0x228>
 c7e:	88 35       	cpi	r24, 0x58	; 88
 c80:	79 f0       	breq	.+30     	; 0xca0 <vfprintf+0x244>
 c82:	b4 c0       	rjmp	.+360    	; 0xdec <vfprintf+0x390>
 c84:	80 37       	cpi	r24, 0x70	; 112
 c86:	19 f0       	breq	.+6      	; 0xc8e <vfprintf+0x232>
 c88:	88 37       	cpi	r24, 0x78	; 120
 c8a:	21 f0       	breq	.+8      	; 0xc94 <vfprintf+0x238>
 c8c:	af c0       	rjmp	.+350    	; 0xdec <vfprintf+0x390>
 c8e:	2f 2f       	mov	r18, r31
 c90:	20 61       	ori	r18, 0x10	; 16
 c92:	b2 2e       	mov	r11, r18
 c94:	b4 fe       	sbrs	r11, 4
 c96:	0d c0       	rjmp	.+26     	; 0xcb2 <vfprintf+0x256>
 c98:	8b 2d       	mov	r24, r11
 c9a:	84 60       	ori	r24, 0x04	; 4
 c9c:	b8 2e       	mov	r11, r24
 c9e:	09 c0       	rjmp	.+18     	; 0xcb2 <vfprintf+0x256>
 ca0:	24 ff       	sbrs	r18, 4
 ca2:	0a c0       	rjmp	.+20     	; 0xcb8 <vfprintf+0x25c>
 ca4:	9f 2f       	mov	r25, r31
 ca6:	96 60       	ori	r25, 0x06	; 6
 ca8:	b9 2e       	mov	r11, r25
 caa:	06 c0       	rjmp	.+12     	; 0xcb8 <vfprintf+0x25c>
 cac:	28 e0       	ldi	r18, 0x08	; 8
 cae:	30 e0       	ldi	r19, 0x00	; 0
 cb0:	05 c0       	rjmp	.+10     	; 0xcbc <vfprintf+0x260>
 cb2:	20 e1       	ldi	r18, 0x10	; 16
 cb4:	30 e0       	ldi	r19, 0x00	; 0
 cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x260>
 cb8:	20 e1       	ldi	r18, 0x10	; 16
 cba:	32 e0       	ldi	r19, 0x02	; 2
 cbc:	f8 01       	movw	r30, r16
 cbe:	b7 fe       	sbrs	r11, 7
 cc0:	07 c0       	rjmp	.+14     	; 0xcd0 <vfprintf+0x274>
 cc2:	60 81       	ld	r22, Z
 cc4:	71 81       	ldd	r23, Z+1	; 0x01
 cc6:	82 81       	ldd	r24, Z+2	; 0x02
 cc8:	93 81       	ldd	r25, Z+3	; 0x03
 cca:	0c 5f       	subi	r16, 0xFC	; 252
 ccc:	1f 4f       	sbci	r17, 0xFF	; 255
 cce:	06 c0       	rjmp	.+12     	; 0xcdc <vfprintf+0x280>
 cd0:	60 81       	ld	r22, Z
 cd2:	71 81       	ldd	r23, Z+1	; 0x01
 cd4:	80 e0       	ldi	r24, 0x00	; 0
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	0e 5f       	subi	r16, 0xFE	; 254
 cda:	1f 4f       	sbci	r17, 0xFF	; 255
 cdc:	a4 01       	movw	r20, r8
 cde:	0e 94 4e 07 	call	0xe9c	; 0xe9c <__ultoa_invert>
 ce2:	a8 2e       	mov	r10, r24
 ce4:	a8 18       	sub	r10, r8
 ce6:	fb 2d       	mov	r31, r11
 ce8:	ff 77       	andi	r31, 0x7F	; 127
 cea:	7f 2e       	mov	r7, r31
 cec:	76 fe       	sbrs	r7, 6
 cee:	0b c0       	rjmp	.+22     	; 0xd06 <vfprintf+0x2aa>
 cf0:	37 2d       	mov	r19, r7
 cf2:	3e 7f       	andi	r19, 0xFE	; 254
 cf4:	a5 14       	cp	r10, r5
 cf6:	50 f4       	brcc	.+20     	; 0xd0c <vfprintf+0x2b0>
 cf8:	74 fe       	sbrs	r7, 4
 cfa:	0a c0       	rjmp	.+20     	; 0xd10 <vfprintf+0x2b4>
 cfc:	72 fc       	sbrc	r7, 2
 cfe:	08 c0       	rjmp	.+16     	; 0xd10 <vfprintf+0x2b4>
 d00:	37 2d       	mov	r19, r7
 d02:	3e 7e       	andi	r19, 0xEE	; 238
 d04:	05 c0       	rjmp	.+10     	; 0xd10 <vfprintf+0x2b4>
 d06:	ba 2c       	mov	r11, r10
 d08:	37 2d       	mov	r19, r7
 d0a:	03 c0       	rjmp	.+6      	; 0xd12 <vfprintf+0x2b6>
 d0c:	ba 2c       	mov	r11, r10
 d0e:	01 c0       	rjmp	.+2      	; 0xd12 <vfprintf+0x2b6>
 d10:	b5 2c       	mov	r11, r5
 d12:	34 ff       	sbrs	r19, 4
 d14:	0d c0       	rjmp	.+26     	; 0xd30 <vfprintf+0x2d4>
 d16:	fe 01       	movw	r30, r28
 d18:	ea 0d       	add	r30, r10
 d1a:	f1 1d       	adc	r31, r1
 d1c:	80 81       	ld	r24, Z
 d1e:	80 33       	cpi	r24, 0x30	; 48
 d20:	11 f4       	brne	.+4      	; 0xd26 <vfprintf+0x2ca>
 d22:	39 7e       	andi	r19, 0xE9	; 233
 d24:	09 c0       	rjmp	.+18     	; 0xd38 <vfprintf+0x2dc>
 d26:	32 ff       	sbrs	r19, 2
 d28:	06 c0       	rjmp	.+12     	; 0xd36 <vfprintf+0x2da>
 d2a:	b3 94       	inc	r11
 d2c:	b3 94       	inc	r11
 d2e:	04 c0       	rjmp	.+8      	; 0xd38 <vfprintf+0x2dc>
 d30:	83 2f       	mov	r24, r19
 d32:	86 78       	andi	r24, 0x86	; 134
 d34:	09 f0       	breq	.+2      	; 0xd38 <vfprintf+0x2dc>
 d36:	b3 94       	inc	r11
 d38:	33 fd       	sbrc	r19, 3
 d3a:	13 c0       	rjmp	.+38     	; 0xd62 <vfprintf+0x306>
 d3c:	30 ff       	sbrs	r19, 0
 d3e:	06 c0       	rjmp	.+12     	; 0xd4c <vfprintf+0x2f0>
 d40:	5a 2c       	mov	r5, r10
 d42:	b3 14       	cp	r11, r3
 d44:	18 f4       	brcc	.+6      	; 0xd4c <vfprintf+0x2f0>
 d46:	53 0c       	add	r5, r3
 d48:	5b 18       	sub	r5, r11
 d4a:	b3 2c       	mov	r11, r3
 d4c:	b3 14       	cp	r11, r3
 d4e:	68 f4       	brcc	.+26     	; 0xd6a <vfprintf+0x30e>
 d50:	b7 01       	movw	r22, r14
 d52:	80 e2       	ldi	r24, 0x20	; 32
 d54:	90 e0       	ldi	r25, 0x00	; 0
 d56:	3c 87       	std	Y+12, r19	; 0x0c
 d58:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 d5c:	b3 94       	inc	r11
 d5e:	3c 85       	ldd	r19, Y+12	; 0x0c
 d60:	f5 cf       	rjmp	.-22     	; 0xd4c <vfprintf+0x2f0>
 d62:	b3 14       	cp	r11, r3
 d64:	10 f4       	brcc	.+4      	; 0xd6a <vfprintf+0x30e>
 d66:	3b 18       	sub	r3, r11
 d68:	01 c0       	rjmp	.+2      	; 0xd6c <vfprintf+0x310>
 d6a:	31 2c       	mov	r3, r1
 d6c:	34 ff       	sbrs	r19, 4
 d6e:	12 c0       	rjmp	.+36     	; 0xd94 <vfprintf+0x338>
 d70:	b7 01       	movw	r22, r14
 d72:	80 e3       	ldi	r24, 0x30	; 48
 d74:	90 e0       	ldi	r25, 0x00	; 0
 d76:	3c 87       	std	Y+12, r19	; 0x0c
 d78:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 d7c:	3c 85       	ldd	r19, Y+12	; 0x0c
 d7e:	32 ff       	sbrs	r19, 2
 d80:	17 c0       	rjmp	.+46     	; 0xdb0 <vfprintf+0x354>
 d82:	31 fd       	sbrc	r19, 1
 d84:	03 c0       	rjmp	.+6      	; 0xd8c <vfprintf+0x330>
 d86:	88 e7       	ldi	r24, 0x78	; 120
 d88:	90 e0       	ldi	r25, 0x00	; 0
 d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x334>
 d8c:	88 e5       	ldi	r24, 0x58	; 88
 d8e:	90 e0       	ldi	r25, 0x00	; 0
 d90:	b7 01       	movw	r22, r14
 d92:	0c c0       	rjmp	.+24     	; 0xdac <vfprintf+0x350>
 d94:	83 2f       	mov	r24, r19
 d96:	86 78       	andi	r24, 0x86	; 134
 d98:	59 f0       	breq	.+22     	; 0xdb0 <vfprintf+0x354>
 d9a:	31 ff       	sbrs	r19, 1
 d9c:	02 c0       	rjmp	.+4      	; 0xda2 <vfprintf+0x346>
 d9e:	8b e2       	ldi	r24, 0x2B	; 43
 da0:	01 c0       	rjmp	.+2      	; 0xda4 <vfprintf+0x348>
 da2:	80 e2       	ldi	r24, 0x20	; 32
 da4:	37 fd       	sbrc	r19, 7
 da6:	8d e2       	ldi	r24, 0x2D	; 45
 da8:	b7 01       	movw	r22, r14
 daa:	90 e0       	ldi	r25, 0x00	; 0
 dac:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 db0:	a5 14       	cp	r10, r5
 db2:	38 f4       	brcc	.+14     	; 0xdc2 <vfprintf+0x366>
 db4:	b7 01       	movw	r22, r14
 db6:	80 e3       	ldi	r24, 0x30	; 48
 db8:	90 e0       	ldi	r25, 0x00	; 0
 dba:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 dbe:	5a 94       	dec	r5
 dc0:	f7 cf       	rjmp	.-18     	; 0xdb0 <vfprintf+0x354>
 dc2:	aa 94       	dec	r10
 dc4:	f4 01       	movw	r30, r8
 dc6:	ea 0d       	add	r30, r10
 dc8:	f1 1d       	adc	r31, r1
 dca:	80 81       	ld	r24, Z
 dcc:	b7 01       	movw	r22, r14
 dce:	90 e0       	ldi	r25, 0x00	; 0
 dd0:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 dd4:	a1 10       	cpse	r10, r1
 dd6:	f5 cf       	rjmp	.-22     	; 0xdc2 <vfprintf+0x366>
 dd8:	33 20       	and	r3, r3
 dda:	09 f4       	brne	.+2      	; 0xdde <vfprintf+0x382>
 ddc:	51 ce       	rjmp	.-862    	; 0xa80 <vfprintf+0x24>
 dde:	b7 01       	movw	r22, r14
 de0:	80 e2       	ldi	r24, 0x20	; 32
 de2:	90 e0       	ldi	r25, 0x00	; 0
 de4:	0e 94 16 07 	call	0xe2c	; 0xe2c <fputc>
 de8:	3a 94       	dec	r3
 dea:	f6 cf       	rjmp	.-20     	; 0xdd8 <vfprintf+0x37c>
 dec:	f7 01       	movw	r30, r14
 dee:	86 81       	ldd	r24, Z+6	; 0x06
 df0:	97 81       	ldd	r25, Z+7	; 0x07
 df2:	02 c0       	rjmp	.+4      	; 0xdf8 <vfprintf+0x39c>
 df4:	8f ef       	ldi	r24, 0xFF	; 255
 df6:	9f ef       	ldi	r25, 0xFF	; 255
 df8:	2c 96       	adiw	r28, 0x0c	; 12
 dfa:	e2 e1       	ldi	r30, 0x12	; 18
 dfc:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <__epilogue_restores__>

00000e00 <strnlen_P>:
 e00:	fc 01       	movw	r30, r24
 e02:	05 90       	lpm	r0, Z+
 e04:	61 50       	subi	r22, 0x01	; 1
 e06:	70 40       	sbci	r23, 0x00	; 0
 e08:	01 10       	cpse	r0, r1
 e0a:	d8 f7       	brcc	.-10     	; 0xe02 <strnlen_P+0x2>
 e0c:	80 95       	com	r24
 e0e:	90 95       	com	r25
 e10:	8e 0f       	add	r24, r30
 e12:	9f 1f       	adc	r25, r31
 e14:	08 95       	ret

00000e16 <strnlen>:
 e16:	fc 01       	movw	r30, r24
 e18:	61 50       	subi	r22, 0x01	; 1
 e1a:	70 40       	sbci	r23, 0x00	; 0
 e1c:	01 90       	ld	r0, Z+
 e1e:	01 10       	cpse	r0, r1
 e20:	d8 f7       	brcc	.-10     	; 0xe18 <strnlen+0x2>
 e22:	80 95       	com	r24
 e24:	90 95       	com	r25
 e26:	8e 0f       	add	r24, r30
 e28:	9f 1f       	adc	r25, r31
 e2a:	08 95       	ret

00000e2c <fputc>:
 e2c:	0f 93       	push	r16
 e2e:	1f 93       	push	r17
 e30:	cf 93       	push	r28
 e32:	df 93       	push	r29
 e34:	fb 01       	movw	r30, r22
 e36:	23 81       	ldd	r18, Z+3	; 0x03
 e38:	21 fd       	sbrc	r18, 1
 e3a:	03 c0       	rjmp	.+6      	; 0xe42 <fputc+0x16>
 e3c:	8f ef       	ldi	r24, 0xFF	; 255
 e3e:	9f ef       	ldi	r25, 0xFF	; 255
 e40:	28 c0       	rjmp	.+80     	; 0xe92 <fputc+0x66>
 e42:	22 ff       	sbrs	r18, 2
 e44:	16 c0       	rjmp	.+44     	; 0xe72 <fputc+0x46>
 e46:	46 81       	ldd	r20, Z+6	; 0x06
 e48:	57 81       	ldd	r21, Z+7	; 0x07
 e4a:	24 81       	ldd	r18, Z+4	; 0x04
 e4c:	35 81       	ldd	r19, Z+5	; 0x05
 e4e:	42 17       	cp	r20, r18
 e50:	53 07       	cpc	r21, r19
 e52:	44 f4       	brge	.+16     	; 0xe64 <fputc+0x38>
 e54:	a0 81       	ld	r26, Z
 e56:	b1 81       	ldd	r27, Z+1	; 0x01
 e58:	9d 01       	movw	r18, r26
 e5a:	2f 5f       	subi	r18, 0xFF	; 255
 e5c:	3f 4f       	sbci	r19, 0xFF	; 255
 e5e:	31 83       	std	Z+1, r19	; 0x01
 e60:	20 83       	st	Z, r18
 e62:	8c 93       	st	X, r24
 e64:	26 81       	ldd	r18, Z+6	; 0x06
 e66:	37 81       	ldd	r19, Z+7	; 0x07
 e68:	2f 5f       	subi	r18, 0xFF	; 255
 e6a:	3f 4f       	sbci	r19, 0xFF	; 255
 e6c:	37 83       	std	Z+7, r19	; 0x07
 e6e:	26 83       	std	Z+6, r18	; 0x06
 e70:	10 c0       	rjmp	.+32     	; 0xe92 <fputc+0x66>
 e72:	eb 01       	movw	r28, r22
 e74:	09 2f       	mov	r16, r25
 e76:	18 2f       	mov	r17, r24
 e78:	00 84       	ldd	r0, Z+8	; 0x08
 e7a:	f1 85       	ldd	r31, Z+9	; 0x09
 e7c:	e0 2d       	mov	r30, r0
 e7e:	09 95       	icall
 e80:	89 2b       	or	r24, r25
 e82:	e1 f6       	brne	.-72     	; 0xe3c <fputc+0x10>
 e84:	8e 81       	ldd	r24, Y+6	; 0x06
 e86:	9f 81       	ldd	r25, Y+7	; 0x07
 e88:	01 96       	adiw	r24, 0x01	; 1
 e8a:	9f 83       	std	Y+7, r25	; 0x07
 e8c:	8e 83       	std	Y+6, r24	; 0x06
 e8e:	81 2f       	mov	r24, r17
 e90:	90 2f       	mov	r25, r16
 e92:	df 91       	pop	r29
 e94:	cf 91       	pop	r28
 e96:	1f 91       	pop	r17
 e98:	0f 91       	pop	r16
 e9a:	08 95       	ret

00000e9c <__ultoa_invert>:
 e9c:	fa 01       	movw	r30, r20
 e9e:	aa 27       	eor	r26, r26
 ea0:	28 30       	cpi	r18, 0x08	; 8
 ea2:	51 f1       	breq	.+84     	; 0xef8 <__ultoa_invert+0x5c>
 ea4:	20 31       	cpi	r18, 0x10	; 16
 ea6:	81 f1       	breq	.+96     	; 0xf08 <__ultoa_invert+0x6c>
 ea8:	e8 94       	clt
 eaa:	6f 93       	push	r22
 eac:	6e 7f       	andi	r22, 0xFE	; 254
 eae:	6e 5f       	subi	r22, 0xFE	; 254
 eb0:	7f 4f       	sbci	r23, 0xFF	; 255
 eb2:	8f 4f       	sbci	r24, 0xFF	; 255
 eb4:	9f 4f       	sbci	r25, 0xFF	; 255
 eb6:	af 4f       	sbci	r26, 0xFF	; 255
 eb8:	b1 e0       	ldi	r27, 0x01	; 1
 eba:	3e d0       	rcall	.+124    	; 0xf38 <__ultoa_invert+0x9c>
 ebc:	b4 e0       	ldi	r27, 0x04	; 4
 ebe:	3c d0       	rcall	.+120    	; 0xf38 <__ultoa_invert+0x9c>
 ec0:	67 0f       	add	r22, r23
 ec2:	78 1f       	adc	r23, r24
 ec4:	89 1f       	adc	r24, r25
 ec6:	9a 1f       	adc	r25, r26
 ec8:	a1 1d       	adc	r26, r1
 eca:	68 0f       	add	r22, r24
 ecc:	79 1f       	adc	r23, r25
 ece:	8a 1f       	adc	r24, r26
 ed0:	91 1d       	adc	r25, r1
 ed2:	a1 1d       	adc	r26, r1
 ed4:	6a 0f       	add	r22, r26
 ed6:	71 1d       	adc	r23, r1
 ed8:	81 1d       	adc	r24, r1
 eda:	91 1d       	adc	r25, r1
 edc:	a1 1d       	adc	r26, r1
 ede:	20 d0       	rcall	.+64     	; 0xf20 <__ultoa_invert+0x84>
 ee0:	09 f4       	brne	.+2      	; 0xee4 <__ultoa_invert+0x48>
 ee2:	68 94       	set
 ee4:	3f 91       	pop	r19
 ee6:	2a e0       	ldi	r18, 0x0A	; 10
 ee8:	26 9f       	mul	r18, r22
 eea:	11 24       	eor	r1, r1
 eec:	30 19       	sub	r19, r0
 eee:	30 5d       	subi	r19, 0xD0	; 208
 ef0:	31 93       	st	Z+, r19
 ef2:	de f6       	brtc	.-74     	; 0xeaa <__ultoa_invert+0xe>
 ef4:	cf 01       	movw	r24, r30
 ef6:	08 95       	ret
 ef8:	46 2f       	mov	r20, r22
 efa:	47 70       	andi	r20, 0x07	; 7
 efc:	40 5d       	subi	r20, 0xD0	; 208
 efe:	41 93       	st	Z+, r20
 f00:	b3 e0       	ldi	r27, 0x03	; 3
 f02:	0f d0       	rcall	.+30     	; 0xf22 <__ultoa_invert+0x86>
 f04:	c9 f7       	brne	.-14     	; 0xef8 <__ultoa_invert+0x5c>
 f06:	f6 cf       	rjmp	.-20     	; 0xef4 <__ultoa_invert+0x58>
 f08:	46 2f       	mov	r20, r22
 f0a:	4f 70       	andi	r20, 0x0F	; 15
 f0c:	40 5d       	subi	r20, 0xD0	; 208
 f0e:	4a 33       	cpi	r20, 0x3A	; 58
 f10:	18 f0       	brcs	.+6      	; 0xf18 <__ultoa_invert+0x7c>
 f12:	49 5d       	subi	r20, 0xD9	; 217
 f14:	31 fd       	sbrc	r19, 1
 f16:	40 52       	subi	r20, 0x20	; 32
 f18:	41 93       	st	Z+, r20
 f1a:	02 d0       	rcall	.+4      	; 0xf20 <__ultoa_invert+0x84>
 f1c:	a9 f7       	brne	.-22     	; 0xf08 <__ultoa_invert+0x6c>
 f1e:	ea cf       	rjmp	.-44     	; 0xef4 <__ultoa_invert+0x58>
 f20:	b4 e0       	ldi	r27, 0x04	; 4
 f22:	a6 95       	lsr	r26
 f24:	97 95       	ror	r25
 f26:	87 95       	ror	r24
 f28:	77 95       	ror	r23
 f2a:	67 95       	ror	r22
 f2c:	ba 95       	dec	r27
 f2e:	c9 f7       	brne	.-14     	; 0xf22 <__ultoa_invert+0x86>
 f30:	00 97       	sbiw	r24, 0x00	; 0
 f32:	61 05       	cpc	r22, r1
 f34:	71 05       	cpc	r23, r1
 f36:	08 95       	ret
 f38:	9b 01       	movw	r18, r22
 f3a:	ac 01       	movw	r20, r24
 f3c:	0a 2e       	mov	r0, r26
 f3e:	06 94       	lsr	r0
 f40:	57 95       	ror	r21
 f42:	47 95       	ror	r20
 f44:	37 95       	ror	r19
 f46:	27 95       	ror	r18
 f48:	ba 95       	dec	r27
 f4a:	c9 f7       	brne	.-14     	; 0xf3e <__ultoa_invert+0xa2>
 f4c:	62 0f       	add	r22, r18
 f4e:	73 1f       	adc	r23, r19
 f50:	84 1f       	adc	r24, r20
 f52:	95 1f       	adc	r25, r21
 f54:	a0 1d       	adc	r26, r0
 f56:	08 95       	ret

00000f58 <__prologue_saves__>:
 f58:	2f 92       	push	r2
 f5a:	3f 92       	push	r3
 f5c:	4f 92       	push	r4
 f5e:	5f 92       	push	r5
 f60:	6f 92       	push	r6
 f62:	7f 92       	push	r7
 f64:	8f 92       	push	r8
 f66:	9f 92       	push	r9
 f68:	af 92       	push	r10
 f6a:	bf 92       	push	r11
 f6c:	cf 92       	push	r12
 f6e:	df 92       	push	r13
 f70:	ef 92       	push	r14
 f72:	ff 92       	push	r15
 f74:	0f 93       	push	r16
 f76:	1f 93       	push	r17
 f78:	cf 93       	push	r28
 f7a:	df 93       	push	r29
 f7c:	cd b7       	in	r28, 0x3d	; 61
 f7e:	de b7       	in	r29, 0x3e	; 62
 f80:	ca 1b       	sub	r28, r26
 f82:	db 0b       	sbc	r29, r27
 f84:	0f b6       	in	r0, 0x3f	; 63
 f86:	f8 94       	cli
 f88:	de bf       	out	0x3e, r29	; 62
 f8a:	0f be       	out	0x3f, r0	; 63
 f8c:	cd bf       	out	0x3d, r28	; 61
 f8e:	09 94       	ijmp

00000f90 <__epilogue_restores__>:
 f90:	2a 88       	ldd	r2, Y+18	; 0x12
 f92:	39 88       	ldd	r3, Y+17	; 0x11
 f94:	48 88       	ldd	r4, Y+16	; 0x10
 f96:	5f 84       	ldd	r5, Y+15	; 0x0f
 f98:	6e 84       	ldd	r6, Y+14	; 0x0e
 f9a:	7d 84       	ldd	r7, Y+13	; 0x0d
 f9c:	8c 84       	ldd	r8, Y+12	; 0x0c
 f9e:	9b 84       	ldd	r9, Y+11	; 0x0b
 fa0:	aa 84       	ldd	r10, Y+10	; 0x0a
 fa2:	b9 84       	ldd	r11, Y+9	; 0x09
 fa4:	c8 84       	ldd	r12, Y+8	; 0x08
 fa6:	df 80       	ldd	r13, Y+7	; 0x07
 fa8:	ee 80       	ldd	r14, Y+6	; 0x06
 faa:	fd 80       	ldd	r15, Y+5	; 0x05
 fac:	0c 81       	ldd	r16, Y+4	; 0x04
 fae:	1b 81       	ldd	r17, Y+3	; 0x03
 fb0:	aa 81       	ldd	r26, Y+2	; 0x02
 fb2:	b9 81       	ldd	r27, Y+1	; 0x01
 fb4:	ce 0f       	add	r28, r30
 fb6:	d1 1d       	adc	r29, r1
 fb8:	0f b6       	in	r0, 0x3f	; 63
 fba:	f8 94       	cli
 fbc:	de bf       	out	0x3e, r29	; 62
 fbe:	0f be       	out	0x3f, r0	; 63
 fc0:	cd bf       	out	0x3d, r28	; 61
 fc2:	ed 01       	movw	r28, r26
 fc4:	08 95       	ret

00000fc6 <_exit>:
 fc6:	f8 94       	cli

00000fc8 <__stop_program>:
 fc8:	ff cf       	rjmp	.-2      	; 0xfc8 <__stop_program>
